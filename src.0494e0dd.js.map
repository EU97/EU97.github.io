{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 001accb81df17d8ee229","webpack:///javascripts/dom.js","src/disposable.js","src/animated.js","src/instrument.js","src/geometry/vector2d.js","src/geometry/angle.js","src/graphics/primitives.js","src/needles.js","src/utils/time.js","node_modules/eve/eve.js","node_modules/snapsvg-cjs/dist/snap.svg-cjs.js","src/tachometer_analog.js","src/utils/math.js","src/airspeed_analog.js","src/graphics/colors.js","src/utils/mouse.js","src/rotatable-button.js","src/attitude_indicator_analog.js","src/utils/conversions.js","src/altimeter_analog.js","src/turn_coordinator_analog.js","src/heading_indicator_analog.js","src/vertical_speed_analog.js","src/airplane.js","src/index.js"],"names":["Disposable","exports","default","_createClass","_classCallCheck","disposeFunctions","listeners","key","value","func","console","assert","indexOf","push","filter","f","disposed","forEach","length","_this","l","_disposable","_interopRequireDefault","require","e","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","a","n","TypeError","_defineProperties","r","t","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","i","_toPrimitive","toPrimitive","call","String","Number","_callSuper","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","apply","_assertThisInitialized","ReferenceError","Boolean","valueOf","setPrototypeOf","getPrototypeOf","bind","__proto__","_inherits","create","_setPrototypeOf","Animated","_Disposable","lerps","addDisposable","cancelAllLerps","callback","cancelLerp","values","_animated","Instrument","_Animated","config","assign","width","height","airplane","listener","Vector2D","x","arguments","undefined","y","concat","other","_vector2d","C2D","angle","D2C","D2R","d","Math","PI","R2D","POC","center","radius","cos","sin","angleFrom","position","atan2","angularDelta","firstAngle","secondAngle","difference","_angle","_DOMArray","circle","snap","stroke","strokeWidth","fill","attr","rectangle","w","h","rx","ry","rect","centeredText","string","fontSize","fontFamily","fontWeight","text","toString","leftText","line","p1","p2","triangle","p3","path","polygon","p","tick","outerRadius","innerRadius","thickness","color","arc","startAngle","endAngle","clockWise","arcData","a1","a2","cw","start","end","delta","largeArc","r0","r1","airplaneSilhouette","centerX","centerY","s","Snap","D","el","airplaneNoseView","PR","EMT","EMS","WH","wing","vs","hs","g","steppedNeedle","radiusShort","radiusMid","arrowHead","needle","gradient","setCenterAndAngle","cx","cy","transform","altimeter10KNeedle","triangleWidth","baseWidth","narrowWidth","CY","arrowNeedle","daggerNeedle","interval","milliseconds","timer","setInterval","requestAnimationFrame","clearInterval","_instrument","_primitives","_needles","_time","_snapsvgCjs","I","W","H","R","min","CX","CENTER","CASE1","CASE2","CASE3","TICK1","TICK2","TICK3","ARC_WIDTH","ARC_RADIUS","LABEL_RADIUS","POINTER_SMALL_RADIUS","POINTER_WIDTH","POINTER_ARROW","POINTER_RADIUS","MIN_RPM","MAX_RPM","MIN_GREEN","MAX_GREEN","REDLINE","START_ANGLE","ANGLE_SWEEP","HOUR_W","HOUR_H","HOUR_P","HOUR_Y","TachometerAnalog","_Instrument","options","parentElement","template","zip","svg","renderImmutable","renderText","renderHours","createNeedle","setNeedle","rpm","onAirplaneChanged","addListener","removeListener","appendTo","_this2","addLerp","setRPM","random","renderCase","renderDial","renderShadow","left","floor","rpmToAngle","v","max","round","decimals","nonLinearScale","inputValue","midValue","maxValue","returnValue","M","C","log","pow","B","exp","isNaN","lerp","from","to","time","ease","isFinite","startTime","Date","now","endTime","requestId","normalized","cancelAnimationFrame","AnimatedValue","lowLimit","MAX_VALUE","hiLimit","currentValue","_math","FLAP_ARC_WIDTH","WHITE_ARC_RADIUS","MAX_SPEED_ANGLE","MID_SPEED","POINTER_MID","AirspeedAnalog","minimumDisplayableSpeed","nearest","VS0","airspeedToAngle","abs","airspeed","remove","speed","VNE","setAirspeed","renderSpeedArcs","renderTicks","renderAirspeeds","VFE","VS1","VNO","MAX_DISPLAYED_SPEED","colors","navy","blue","aqua","teal","olive","green","lime","yellow","orange","red","maroon","fuchsia","purple","black","charcoal","gray","silver","white","sky","earth","compassRose","events","sEvents","Mouse","document","documentElement","handleEvent","name","addEventListener","removeEventListener","hash","captureNode","ears","type","ear","eventToNode","node","target","includeDescendants","contains","event","box","getBoundingClientRect","clientX","clientY","ancestor","descendant","compareDocumentPosition","_this3","removed","record","index","splice","releaseCapture","eventName","list","find","findNode","_colors","_mouse","JITTER_THRESHOLD","POP_SCALE","Rotatable","textColor","rotation","rotationCallback","clickCallback","gear","randomize","popout","popState","randomOffset","scale","displayScale","updateTransform","updateButtonColor","group","class","outer","add","mouse","onMouseDown","onMouseMove","onMouseUp","register","centerOn","setPopScale","local","lastAngle","setCapture","capture","togglePopout","point","_rotatableButton","COLOR_SKY","COLOR_EARTH","OUTER_THICKNESS","OUTER_RADIUS","INNER_RADIUS","TICK_M","SMALL_TICK_WIDTH","PITCH_TO_PIXELS","POINTER_BASE_THICKNESS","POINTER_BASE_ARC","PA_T","PA_BH","PA_BI","PA_ARM","PA_TRI_W","PA_TRI_H","PA_TRI_R","V_ADJUST_CENTER","V_ADJUST_LIMIT","CAGE_CENTER","AttitudeIndicatorAnalog","verticalAdjustment","caged","cageMultiplier","pitch","roll","setRollAndPitch","setRoll","setPitch","renderInnerBezel","renderOuterBezel","renderPointers","renderButtons","verticalAdjustButton","onVerticalAdjustment","cageButton","onCageToggle","setArmGroupVerticalAdjustment","armGroup","bottom","top","right","WY","pixels","_this4","innerBezel","innerBezelFace","pitchCircle","pitchGradient","_this5","outerBezel","outerBezelFace","displayRoll","displayPitch","str","millibarsToFeet","millibars","inchesHgToFeet","inchesNg","inchesHgToMillibars","millibarsToInchesHg","inchesHg","signedDegreesToPositive360","vIn","vOut","STANDARD_BAROMETER","_conversions","POINTER_1K_R","POINTER_1K_W","POINTER_10K_R","POINTER_10K_W","KOLLSMAN_ADJUST_23","KOLLSMAN_ANGLE","KOLLSMAN_SWEEP","MIN_BARO","MAX_BARO","K_TICK1","K_TICK2","K_TICK3","KOLLSMAN_INNER","KOLLSMAN_LOWER_SPEED","KOLLSMAN_UPPER_SPEED","BARBER_OUTER","BARBER_INNER","BARBER_ANGLE","BARBER_SWEEP","BARBER_STRIPE_WIDTH","BARO_CENTER","BARO_R","AltimeterAnalog","barberPoleAngle","barberPoleVisible","createNeedles","createBaroButton","setNeedles","altitude","setBarometricPressure","barometer","SERVICE_CEILING","qnh","setAltitude","setBarometer","renderKollsman","renderBarberPole","baroButton","onBaroChanged","baro","IMIN_BARO","IMAX_BARO","kSnap","kGroup","tp","strDisplay","substr","KW","AR","kMask","altitudeInfo","hundreds","mask","inchesOfMercury","clamped","barberRadius","barberWidth","barberSnap","patternGroup","sw","barberPoleGroup","barberPole","toPattern","sh","visible","v0_9","textPosition","thousands10KNeedle","thousandsNeedle","hundredsNeedle","info","thousands","thousands10K","setBarberPole","baroDelta","staticPressure","OUTER_BEZEL","INC_THICKNESS","INC_RADIUS","INC_CENTER","INC_ANGLE","INC_TICK_ANGLE","OFFSET_2_MINUTES","ROLL_RATE","MAX_ROLL_RATE","MAX_YAW","TurnCoordinatorAnalog","setRollRate","setYaw","renderInclinometer","renderTicksAndText","renderAirplane","rollRate","yaw","BEZEL_R","airplaneGroup","inner","middle","renderBall","clampedRollRate","A","ball","clampedYaw","AW","AH","TEXT_RADIUS","TICK","LONG_TICK","SHORT_TICK","SET_CENTER","SET_R","HDG_CENTER","HDG_R","HEADING_BUG_OUTER","HEADING_BUG_INNER","HEADING_BUG_MID","HeadingIndicatorAnalog","magneticOffset","headingBugHeading","setHeading","heading","setHeadingBug","renderHeadings","renderHeadingBug","renderPointer","createButtons","setButton","onSetChanged","hdgButton","onHdgChanged","headingBugGroup","faceSnap","headingBug1","headingBug2","face","longTick","outerTick","innerTick","textCenter","MIN_MAX_SPEED","HUNDRED_LIMIT","ZERO","SWEEP","UP_DOWN_RADIUS","UP_DOWN_ANGLE","RATE_TEXT","VerticalSpeedAnalog","altitudeRate","setAltitudeRate","verticalSpeed","verticalSpeedToAngle","Airplane","VR","VLOF","VA","airspeedRate","headingRate","pitchRate","yawRate","idle","redLine","greenMin","kias","callListeners","feet","rate","_this6","magneticHeading","_this7","degrees","_this8","degreesPerSecond","_this9","_this10","_this11","_tachometer_analog","_airspeed_analog","_attitude_indicator_analog","_altimeter_analog","_turn_coordinator_analog","_heading_indicator_analog","_vertical_speed_analog","_airplane","body","instruments","demoStart"],"mappings":"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","file":"src.0494e0dd.js","sourceRoot":"..","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 001accb81df17d8ee229\n **/","/**\n * simplest regex for identifying a tag string versus a selector string\n * @type {RegExp}\n */\nconst tagRegex = new RegExp('\\s*<([^>]+)>');\n\n/**\n * getters and setters are created for these properties. The class does not attempt to distinguish between\n * Node, Element, HTMLElement etc so these properties may or may not exist on any particular member of our list.\n * Read only properties are prefixed with 'r+'.\n * For DOMArray's with exactly one item, the getter returns the value returned by the native property.\n * For DOMArray's containing more than one item an array of results is returned.\n * Empty DOMArray's return null\n * @type {string[]}\n */\nconst properties = [\n  // Node, properties\n  'r+childNodes',\n  'r+firstChild',\n  'r+lastChild',\n  'r+nextSibling',\n  'r+previousSibling',\n  'r+nodeName',\n  'r+nodeType',\n  'nodeValue',\n  'r+ownerDocument',\n  'r+parentElement',\n  'r+parentNode',\n  'textContent',\n  'r+tagName',\n  // Element properties\n  'r+attributes',\n  'r+childElementCount',\n  'r+children',\n  'r+firstElementChild',\n  'r+lastElementChild',\n  'r+classList',\n  'className',\n  'r+clientTop',\n  'r+clientLeft',\n  'r+clientWidth',\n  'r+clientHeight',\n  'id',\n  'innerHTML',\n  'outerHTML',\n  'innerText',\n  'outerText',\n  'r+localName',\n  'r+scrollWidth',\n  'r+scrollHeight',\n  'scrollTop',\n  'scrollLeft',\n  'name',\n  'title',\n  'value',\n  'checked',\n  'style',\n  'disabled',\n];\n\n/**\n * methods for native Node/Element/HTMLElement objects that we create pass through functions for.\n * Rules are the same as for getter properties i.e. an array is returned for lists with items > 1\n * @type {Array}\n */\nconst methods = [\n  'appendChild',\n  'removeChild',\n  'replaceChild',\n  'click',\n  'cloneNode',\n  'compareDocumentPosition',\n  'contains',\n  'hasChildNodes',\n  'insertBefore',\n  'getBoundingClientRect',\n  'getAttribute',\n  'getAttributeNS',\n  'setAttribute',\n  'setAttributeNS',\n  'removeAttribute',\n  'removeAttributeNS',\n  'addEventListener',\n  'removeEventListener',\n  'normalize',\n  'focus',\n  'blur',\n  'querySelector',\n  'querySelectorAll',\n];\n\n/**\n * the actual elements class which inherits from native Array\n */\n\nclass DOMArray extends Array {\n  constructor(...args) {\n    super();\n    // test first argument to see if its a string\n    const isString = typeof(args[0]) === 'string';\n    // if its a string see if it a tag definition\n    const isTag = isString && tagRegex.exec(args[0].trim());\n\n    // first argument is a string but not a tag definition so we assume CSS selector\n    if ((args.length === 1 || args.length == 2) && isString && !isTag) {\n      this.createFromCSSSelector(args[0], args[1]);\n    } else {\n      // second option is that args if just a string e.g. '<div class=\"xyz\"><p>Title</p></div>'\n      // (white space is trimmed to determine if this might be a tag)\n      if (args.length === 1 && isTag) {\n        this.createFromTAGDefinition(args[0]);\n      } else {\n        // must be raw elements or other DOMArray instances\n        this.createFromElements(...args);\n      }\n    }\n    // inject native property names and function names to the list\n    this.injectMethodsAndProperties();\n  }\n\n  /**\n   * bind the read/write properties common to most HTMLElements and Node instances to this object\n   */\n  injectMethodsAndProperties() {\n    // setup read/write properties\n    properties.forEach(p => {\n      // property can be a name or 'r+' name for read only properties\n      const tokens = p.split('+');\n      const readOnly = tokens.length === 2 && tokens[0] === 'r';\n      const name = readOnly ? tokens[1] : tokens[0];\n      // create getter and optional setter\n      const newProperty = Object.assign({\n        get: this.genericGetter.bind(this, name),\n      }, readOnly ? {} : {\n        set: this.genericSetter.bind(this, name),\n      });\n      Object.defineProperty(this, name, newProperty);\n    });\n\n    // setup methods\n    methods.forEach(name => {\n      this[name] = this.genericMethod.bind(this, name);\n    });\n  }\n\n  /**\n   * create our elements list from a CSS selector and option root element ( either\n   * a native HTMLElement/Node or another DOMArray )\n   * @param selector\n   * @param rootElement\n   */\n  createFromCSSSelector(selector, rootElement) {\n    // use the given root element or the document\n    const root = rootElement ? this.getNode(rootElement) : document;\n    // return a proxy using the results of the selector as the initial array\n    this.push(...root.querySelectorAll(selector));\n  }\n\n  /**\n   * create the list from a template string e.g. '<div>A DIV<div><span>A Span</span>'\n   * @param template\n   */\n  createFromTAGDefinition(template) {\n    // use a temporary DIV and insertAdjacentHTML to construct the DOM\n    const d = document.createElement('DIV');\n    d.insertAdjacentHTML('afterbegin', template);\n    // normalize the context to remove extraneous white space / text content nodes\n    d.normalize();\n    // add children directly into our list ( we avoid childNodes because that would pick\n    // up empty text nodes which is a problem when using multiline template strings\n    this.push(...this.getChildren(d));\n    // remove all the children of the temporary div, so that the newly created top level nodes will be unparented\n    while (d.firstChild) d.removeChild(d.firstChild);\n  }\n\n  /**\n   * create from a mixed list of elements or other DOMArray instances.\n   * @param args\n   */\n  createFromElements(...args) {\n    // only remaining option is that each argument is a DOM node or possible another elements list\n    args.forEach(arg => {\n      if (arg instanceof DOMArray) {\n        this.push(...arg);\n      } else {\n        this.push(arg);\n      }\n    });\n  }\n\n  /**\n   * all generic methods redirect here\n   * @param name\n   * @param args\n   */\n  genericMethod(name, ...args) {\n    if (this.length === 0) {\n      return undefined;\n    }\n    if (this.length === 1) {\n      return this.el[name].call(this.el, ...args);\n    }\n    return this.map(node => node[name].call(node, ...args));\n  }\n\n  /**\n   * generic getter\n   * @param name - the property to return.\n   */\n  genericGetter(name) {\n    if (this.length === 0) {\n      return undefined;\n    }\n    if (this.length === 1) {\n      return this.el[name];\n    }\n    return this.map(node => node[name]);\n  }\n\n  /**\n   * generic setter\n   * @param name\n   * @param value\n   */\n  genericSetter(name, value) {\n    this.forEach(n => n[name] = value);\n  }\n\n  /**\n   * apply the key/value pairs in hash to all our elements\n   */\n  setStyles(hash) {\n    this.forEach(element => {\n      if (element.nodeType === Node.ELEMENT_NODE) {\n        Object.keys(hash).forEach(key => {\n          element.style[key] = hash[key];\n        });\n      }\n    });\n    return this;\n  }\n\n  /**\n   * if the obj is a DOMArray then return the first member otherwise assume\n   * the object is a node and return it.\n   */\n  getNode(obj) {\n    if (obj instanceof DOMArray) return obj[0];\n    return obj;\n  }\n\n\n  /**\n   * return the native el of the first element in the list\n   */\n  get el() {\n    return this[0];\n  }\n\n  /**\n   * remove all elements from the elements in our list\n   */\n  empty() {\n    this.forEach(element => {\n      while (element.firstChild) {\n        element.removeChild(element.firstChild);\n      }\n    });\n    return this;\n  }\n\n  /**\n   * appendTo parents all the top level elements in the list to\n   * the given element. Which can be a native element or a DOMArray ( in which case\n   * the elements are append to the first element in the list )\n   */\n  appendTo(parent) {\n    this.forEach(node => {\n      this.getNode(parent).appendChild(node);\n    });\n    return this;\n  }\n\n  /**\n   * remove all our nodes from their parents\n   */\n  remove() {\n    this.forEach(node => {\n      if (node.parentNode) {\n        node.parentNode.removeChild(node);\n      }\n    });\n    return this;\n  }\n\n  /**\n   * iterate every node and all their children looking for data-ref=\"name\" attributes.\n   * Assign targetObject[name] to the matching DOM element.\n   * At the same time look for data-event-* attributes and add event listeners.\n   * e.g. data-event-input=\"onInput\" will call\n   * element.addEventListener('input', targetObject[\"onInput\"].bind(targetObject))\n   * NOTE: The event handlers are just named methods so .bind is called on the method\n   * to ensure 'this' is correct.\n   */\n  zip(targetObject) {\n    // zipping/unzipping should occur serially and once\n    if (this.zipped) {\n      throw new Error('DOMArray has already been zipped');\n    }\n    this.zipped = true;\n\n    // we could use a CSS selector to find the 'r' attributes but for\n    // event attribute (e-???) there is no available selector so\n    // we walk the tree of elements using a stack.\n    this.traverse(element => {\n      // adopt references\n      const name = element.getAttribute('r');\n      if (name) {\n        if (targetObject[name]) {\n          throw new Error('Element binding would overwrite an existing property.');\n        }\n        targetObject[name] = new DOMArray(element);\n      }\n      // add event handlers...we expect something like e-click=\"onClick\"\n      [...element.attributes,].forEach(attr => {\n        const tokens = attr.localName.split('-');\n        if (tokens.length === 2 && tokens[0] === 'e' && tokens[1]) {\n          // create a record of each handler added so we can remove when unzip is called\n          const record = {\n            handler: targetObject[attr.value].bind(targetObject),\n            event  : tokens[1],\n            capture: false,\n            element,\n          };\n          this.zipHandlers = this.zipHandlers || [];\n          this.zipHandlers.push(record);\n\n          element.addEventListener(record.event, record.handler, record.capture);\n        }\n      });\n    });\n    return this;\n  }\n\n  /**\n   * reverse the actions of zip. Remove references and remove event listeners\n   */\n  unzip(targetObject) {\n    if (!this.zipped) {\n      throw new Error('DOMArray instance is not zipped');\n    }\n    this.traverse(element => {\n      // remove references\n      const name = element.getAttribute('r');\n      if (name) {\n        delete targetObject[name];\n      }\n      // remove event handlers\n      if (this.zipHandlers) {\n        this.zipHandlers.forEach(record => {\n          record.element.removeEventListener(record.event, record.handler, record.capture);\n        });\n        this.zipHandlers = null;\n      }\n\n    });\n    this.zipped = false;\n    return this;\n  }\n\n  /**\n   * utility function. Used in zip, unzip for example. Traverses all nodes and their\n   * children in the list invoking the callback for each one\n   */\n  traverse(callback) {\n    this.forEach(node => {\n      let stack = [node,];\n      while (stack.length) {\n        const element = stack.pop();\n        callback.call(this, element);\n        stack = stack.concat(...this.getChildren(element));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * get only the element children of a node, allowing for the possibility the .children doesn't exist ( e.g. SVG tag )\n   * and filter the child nodes.\n   * @param n\n   * @returns Array\n   */\n  getChildren(element) {\n    if (element.children) {\n      return Array.from(element.children);\n    } else {\n      // filter childNodes to only elements\n      if (element.childNodes) {\n        return Array.from(element.childNodes).filter(n => n.nodeType === document.ELEMENT_NODE);\n      }\n    }\n    return [];\n  }\n\n  /**\n   * add white space separated classes to our elements classList\n   */\n  addClasses(classes) {\n    classes.split(' ')\n    .filter(className => className.trim().length)\n    .forEach(className => {\n      this.forEach(element => {\n        element.classList.add(className);\n      });\n    });\n    return this;\n  }\n\n  /**\n   * remove white space separated class names from the classList of each node\n   * @param classes\n   * @returns {DOMArray}\n   */\n  removeClasses(classes) {\n    classes.split(' ')\n    .filter(className => className.trim().length)\n    .forEach(className => {\n      this.forEach(element => {\n        element.classList.remove(className);\n      });\n    });\n    return this;\n  }\n\n  /**\n   * a common usage and worthy of a method. Add the given classes\n   * to our items if the condition is truthy, otherwise remove them\n   * @param classes\n   * @param condition\n   */\n  classesConditional(classes, condition) {\n    if (condition) {\n      this.addClasses(classes);\n    } else {\n      this.removeClasses(classes);\n    }\n    return this;\n  }\n\n  /**\n   * return a new DOMArray contain a deep cloned copy\n   * each node\n   */\n  clone() {\n    const clones = this.map(n => n.cloneNode(true));\n    return new DOMArray(...clones);\n  }\n\n  /**\n   * called addEventListener for each element in the list,\n   * @param event\n   * @param handler\n   */\n  on(event, handler, capture = false) {\n    // listeners group by event name is an object ( since event is a string ) but the\n    // handlers for each event are stored in a map which can take a function as a key.\n    this.listeners = this.listeners || {};\n    this.listeners[event] = this.listeners[event] || [];\n    this.listeners[event].push({handler, capture,});\n    this.forEach(n => n.addEventListener(event, handler, capture));\n    return this;\n  }\n\n  /**\n   * remove the handlers from the list. Three ways to call.\n   * ()                   : remove all registered listeners\n   * (eventName)          : remove all listeners for that event.\n   * (eventName, handler) : remove the specific handler for a specific event.\n   */\n  off(event, handler, capture = false) {\n    // ignore if we don't have any listeners\n    if (!this.listeners) {\n      return this;\n    }\n    // if no event or handler then remove all registered events\n    if (!event && !handler) {\n      // iterate all events\n      Object.keys(this.listeners).forEach(eventName => {\n        this.listeners[eventName].forEach(record => {\n          this.forEach(n => n.removeEventListener(eventName, record.handler, record.capture));\n        });\n      });\n      // reset all listeners\n      delete this.listeners;\n    } else {\n      // if only event name specified remove all listeners for that event\n      if (event && !handler) {\n        if (this.listeners[event]) {\n          this.listeners[event].forEach(record => {\n            this.forEach(n => n.removeEventListener(event, record.handler, record.capture));\n          });\n        }\n        // delete listeners for this specific event\n        delete this.listeners[event];\n      } else {\n        // remove the specific listener if it is present, by finding the record with the handler\n        // ( the capture flag must match as well )\n        if (this.listeners[event]) {\n          const index = this.listeners[event].findIndex(record => {\n            return record.handler === handler && record.capture === capture;\n          });\n          if (index >= 0) {\n            const record = this.listeners[event][index];\n            this.forEach(n => n.removeEventListener(event, record.handler, record.capture));\n            this.listeners[event].splice(index, 1);\n          }\n        }\n      }\n    }\n    return this;\n  }\n}\n\n/**\n * We export a factory function for DOMArray so there is no need to the new operator\n */\nexport default function D() {\n  return new DOMArray(...arguments);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./javascripts/dom.js\n **/","/**\n * base class for a lot of types in the app. Provides for callbacks to be invoked when\n * its dispose() method is called. Also provides event emitter capabilities\n */\n\nexport default class Disposable {\n  /**\n   * the purpose of this class is simply to provide a way to add\n   * various functions to be called when the dispose method is\n   * called. This allows classes to create methods ( usually lambdas )\n   * juxtaposed to where an object that needs disposing is declared.\n   */\n  constructor() {\n    this.disposeFunctions = [];\n    this.listeners = [];\n  }\n\n  /**\n   * add a function to call when we are disposed\n   * NOTE: if you want to later remove a dispose function do NOT use a lambda.\n   * @param func\n   */\n  addDisposable(func) {\n    console.assert(func && typeof func === \"function\", \"expected a callback\");\n    console.assert(\n      this.disposeFunctions.indexOf(func) < 0,\n      \"listener already registered\"\n    );\n    this.disposeFunctions.push(func);\n  }\n\n  /**\n   * remove a function that was previously added.\n   * @param func\n   */\n  removeDisposable(func) {\n    console.assert(func && typeof func === \"function\", \"expected a callback\");\n    console.assert(\n      this.disposeFunctions.indexOf(func) >= 0,\n      \"listener is not registered\"\n    );\n    this.disposeFunctions = this.disposeFunctions.filter(f => f !== func);\n  }\n\n  /**\n   * call all our dispose methods\n   */\n  dispose() {\n    console.assert(!this.disposed, \"already disposed\");\n    this.disposed = true;\n    this.disposeFunctions.forEach(f => f());\n    this.disposeFunctions.length = 0;\n  }\n\n  /**\n   * add a change listener any changes to the airplane configuration\n   * @param func\n   */\n  addListener(func) {\n    console.assert(func && typeof func === \"function\", \"expected a callback\");\n    console.assert(\n      this.listeners.indexOf(func) < 0,\n      \"listener already registered\"\n    );\n    this.listeners.push(func);\n  }\n\n  /**\n   * remove an existing change listener\n   * @param func\n   */\n  removeListener(func) {\n    console.assert(func && typeof func === \"function\", \"expected a callback\");\n    console.assert(\n      this.listeners.indexOf(func) >= 0,\n      \"listener is not registered\"\n    );\n    this.listeners = this.listeners.filter(f => f !== func);\n  }\n\n  /**\n   * remove all listeners\n   */\n  removeAllListeners() {\n    this.listeners.length = 0;\n  }\n\n  /**\n   * send a change notification to all listeners\n   */\n  callListeners() {\n    this.listeners.forEach(l => l(this));\n  }\n}\n","import Disposable from \"./disposable\";\n/**\n * base class for things that use lerps and intervals to animate their internal state\n */\nexport default class Animated extends Disposable {\n  /**\n   * initialize lerp hash\n   */\n  constructor() {\n    super();\n    this.lerps = {};\n    this.addDisposable(() => this.cancelAllLerps());\n  }\n\n  /**\n   * add a lerp/interval that can be cancelled with cancelLerp\n   * @param key\n   * @param callback\n   */\n  addLerp(key, callback) {\n    this.cancelLerp(key);\n    this.lerps[key] = callback;\n  }\n\n  /**\n   * cancel any existing lerp /interval that was registered with addLerp\n   */\n  cancelLerp(key) {\n    if (this.lerps[key]) {\n      this.lerps[key]();\n      delete this.lerps[key];\n    }\n  }\n\n  /**\n   * cancel all lerps\n   */\n  cancelAllLerps() {\n    Object.values(this.lerps).forEach(f => f());\n    this.lerps = {};\n  }\n}\n","import Animated from \"./animated\";\n\n/**\n * base class for all analog / digital instruments\n */\nexport default class Instrument extends Animated {\n  /**\n   * requires at the very least width, height and an airplane\n   * @param config\n   */\n  constructor(config) {\n    super();\n    Object.assign(\n      this,\n      {\n        width: 0,\n        height: 0,\n        airplane: null,\n        listener: []\n      },\n      config\n    );\n    console.assert(\n      this.width && this.height && this.airplane,\n      \"missing or invalid configuration options\"\n    );\n  }\n\n  demoStart() {\n    console.assert(false, \"Must override in descendant class\");\n  }\n\n  demoStop() {\n    console.assert(false, \"Must override in descendant class\");\n  }\n}\n","export default class Vector2D {\n  constructor(x = 0, y = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  clone() {\n    return new Vector2D(this.x, this.y);\n  }\n\n  toString() {\n    return `x:${this.x} y:${this.y}`;\n  }\n\n  sub(other) {\n    return new Vector2D(this.x - other.x, this.y - other.y);\n  }\n\n  add(other) {\n    return new Vector2D(this.x + other.x, this.y + other.y);\n  }\n}\n","import Vector2D from \"../geometry/vector2d\";\n/**\n * An angle in clock format ( 0 degrees is straight up ) to a regular angle\n * @param angle\n * @returns {number}\n */\nexport const C2D = angle => {\n  return (270 + angle) % 360;\n};\n\n/**\n * angle to clock angles ( 0 degrees returned as -90 )\n * @param angle\n * @returns {number}\n */\nexport const D2C = angle => {\n  return (angle - 90) % 360;\n};\n\n/**\n * degrees to radian\n * @param d\n * @returns {number}\n */\nexport const D2R = d => {\n  return d * (Math.PI / 180);\n};\n\n/**\n * radians to degrees\n * @param r\n * @returns {number}\n */\nexport const R2D = r => {\n  return r * (180 / Math.PI);\n};\n\n/**\n * point on the circumference of a circle\n * @param {Vector2D} center\n * @param {number} radius\n * @param {number } angle - degrees\n * @returns {Vector2D}\n */\nexport const POC = (center, radius, angle) => {\n  return new Vector2D(\n    center.x + radius * Math.cos(D2R(angle)),\n    center.y + radius * Math.sin(D2R(angle))\n  );\n};\n\n/**\n * return the angle between the given center point and the given position\n * @param center\n * @param position\n */\nexport const angleFrom = (center, position) => {\n  let a =\n    (Math.atan2(position.y - center.y, position.x - center.x) * 180) / Math.PI;\n  // this keeps the angle always positive, rather than switching to negatives for 180 - 360\n  if (a < 0) {\n    a = 180 + (180 + a);\n  }\n  return a;\n};\n\n/**\n * signed angular delta between two angles. Positive is clockwise.\n * @param start\n * @param end\n */\nexport const angularDelta = (firstAngle, secondAngle) => {\n  let difference = secondAngle - firstAngle;\n  while (difference < -180) difference += 360;\n  while (difference > 180) difference -= 360;\n  return difference;\n};\n","import { D2R, R2D, POC } from \"../geometry/angle\";\nimport D from \"DOMArray\";\nimport Vector2D from \"../geometry/vector2d\";\n\n/**\n * create and return a SnapSVG circle object\n * @param snap\n * @param center\n * @param radius\n * @param stroke\n * @param strokeWidth\n * @param fill\n * @returns {*|SnapShape}\n */\nexport const circle = (\n  snap,\n  center,\n  radius,\n  stroke,\n  strokeWidth,\n  fill = \"none\"\n) => {\n  return snap.circle(center.x, center.y, radius).attr({\n    strokeWidth,\n    stroke,\n    fill\n  });\n};\n\n/**\n * create and return a SnapSVG circle object\n * @param snap\n * @param x\n * @param y\n * @param w\n * @param h\n * @param stroke\n * @param strokeWidth\n * @param fill\n * @param rx\n * @param ry\n * @returns {*|SnapShape}\n */\nexport const rectangle = (\n  snap,\n  x,\n  y,\n  w,\n  h,\n  stroke,\n  strokeWidth,\n  fill = \"none\",\n  rx = 0,\n  ry = 0\n) => {\n  return snap.rect(x, y, w, h).attr({\n    strokeWidth,\n    stroke,\n    fill,\n    rx,\n    ry\n  });\n};\n\n/**\n * create and return a Snap text element centered on a given point\n * @param snap\n * @param {Vector2D} center,\n * @param string\n * @param fill\n * @param fontSize\n * @param fontFamily\n * @param fontWeight\n */\nexport const centeredText = (\n  snap,\n  center,\n  string,\n  fill,\n  fontSize = \"21px\",\n  fontFamily = \"Verdana\",\n  fontWeight = \"normal\"\n) => {\n  return snap.text(center.x, center.y, string.toString()).attr({\n    fill,\n    \"text-anchor\": \"middle\",\n    \"dominant-baseline\": \"central\",\n    \"font-size\": fontSize,\n    \"font-family\": fontFamily,\n    \"font-weight\": fontWeight\n  });\n};\n\n/**\n * create and return a Snap text element centered on a given point\n * @param snap\n * @param {Vector2D} center,\n * @param string\n * @param fill\n * @param fontSize\n * @param fontFamily\n * @param fontWeight\n */\nexport const leftText = (\n  snap,\n  center,\n  string,\n  fill,\n  fontSize = \"21px\",\n  fontFamily = \"Verdana\",\n  fontWeight = \"normal\"\n) => {\n  return snap.text(center.x, center.y, string).attr({\n    fill,\n    \"text-anchor\": \"left\",\n    \"dominant-baseline\": \"central\",\n    \"font-size\": fontSize,\n    \"font-family\": fontFamily,\n    \"font-weight\": fontWeight\n  });\n};\n\n/**\n * a line shape\n * @param snap\n * @param {Vector2D} p1\n * @param {Vector2D} p2\n * @param stroke\n * @param strokeWidth\n */\nexport const line = (snap, p1, p2, stroke, strokeWidth) => {\n  return snap.line(p1.x, p1.y, p2.x, p2.y).attr({\n    strokeWidth,\n    stroke\n  });\n};\n\n/**\n * draw stroke filled triangle defined by 3 points\n * @param snap\n * @param p1\n * @param p2\n * @param p3\n * @param stroke\n * @param strokeWidth\n * @param fill\n */\nexport const triangle = (snap, p1, p2, p3, stroke, strokeWidth, fill) => {\n  const d = `M ${p1.x} ${p1.y} L ${p2.x} ${p2.y} L ${p3.x} ${p3.y} Z`;\n  const path = snap.path(d);\n  path.attr({\n    fill,\n    stroke,\n    \"stroke-width\": strokeWidth\n  });\n  return path;\n};\n\n/**\n * draw stroke filled polygon defined by n points ( where 3 <= n )\n * @param snap\n * @param p\n * @param stroke\n * @param strokeWidth\n * @param fill\n */\nexport const polygon = (snap, p, stroke, strokeWidth, fill) => {\n  let d = `M ${p[0].x} ${p[0].y}`;\n  for (let i = 1; i < p.length; i += 1) {\n    d += ` L ${p[i].x} ${p[i].y}`;\n  }\n  d += \" Z\";\n  const path = snap.path(d);\n  path.attr({\n    fill,\n    stroke,\n    \"stroke-width\": strokeWidth\n  });\n  return path;\n};\n\n/**\n * draw a tick mark radiating from a center of a circle at a given starting\n * and ending radius e.g. denoting an airspeed on an airspeed indicator\n * @param snap\n * @param center\n * @param angle - degrees\n * @param outerRadius\n * @param innerRadius\n * @param thickness\n * @param color\n */\nexport const tick = (\n  snap,\n  center,\n  angle,\n  outerRadius,\n  innerRadius,\n  thickness,\n  color\n) => {\n  const p1 = POC(center, outerRadius, angle);\n  const p2 = POC(center, innerRadius, angle);\n  return line(snap, p1, p2, color, thickness);\n};\n\n/**\n *\n * @param snap\n * @param {Vector2D} center\n * @param radius\n * @param thickness\n * @param strokeWidth\n * @param stroke\n * @param fill\n * @param startAngle\n * @param endAngle\n * @param clockWise\n */\nexport const arc = (\n  snap,\n  center,\n  radius,\n  thickness,\n  strokeWidth,\n  stroke,\n  fill,\n  startAngle,\n  endAngle,\n  clockWise\n) => {\n  // return 1 if large arc required for the given start/end angle\n  // and the given direction of turn ( clockwise or counter )\n  const largeArc = (start, end, cw) => {\n    const delta = R2D(\n      Math.atan2(Math.sin(D2R(end - start)), Math.cos(D2R(end - start)))\n    );\n    if (cw) {\n      return delta <= 180 && delta >= 0 ? 0 : 1;\n    }\n    return delta <= 180 && delta >= 0 ? 1 : 0;\n  };\n\n  const arcData = (a1, a2, r, cw) => {\n    let d = \" A \" + r + \" \" + r; // arc command and x/y radius of circle\n    d += \" 0\"; // x axis rotation\n    const large = largeArc(a1, a2, cw);\n    d += \" \" + large; // large arc flag\n    d += cw ? \" 1\" : \" 0\"; // sweep\n    d += \" \" + POC(center, r, a2).x + \" \" + POC(center, r, a2).y; // end point\n    return d;\n  };\n\n  // calculate inner and outer radius\n  const r0 = radius + thickness / 2;\n  const r1 = radius - thickness / 2;\n\n  // move to start of arc on\n  let d =\n    \"M \" + POC(center, r0, startAngle).x + \" \" + POC(center, r0, startAngle).y;\n\n  // add arc data, outer edge from tail to start of arrow\n  d += \" \" + arcData(startAngle, endAngle, r0, clockWise);\n\n  // to inside of arc\n  d += \" L \" + POC(center, r1, endAngle).x + \" \" + POC(center, r1, endAngle).y;\n\n  // arc back to tail, in opposite direction\n  d += \" \" + arcData(endAngle, startAngle, r1, !clockWise);\n\n  // close the path\n  d += \" Z\";\n\n  const path = snap.path(d);\n  path.attr({\n    fill,\n    stroke,\n    \"stroke-width\": strokeWidth\n  });\n  return path;\n};\n\n/**\n * draw a simple cessna shape within a rectangle of given size. Used for example at the center of\n * the heading indicator / directional gyro\n * @param r\n * @param strokeWidth\n * @param stroke\n * @param fill\n */\nexport const airplaneSilhouette = (\n  centerX,\n  centerY,\n  width,\n  height,\n  strokeWidth,\n  stroke,\n  fill\n) => {\n  const s = `\n  <svg \n      xmlns=\"http://www.w3.org/2000/svg\" \n      version=\"1.1\"  \n      x=\"${centerX - width / 2}\"\n      y=\"${centerY - height / 2}\"\n      width=\"${width}\" height=\"${height}\" \n      viewBox=\"0 0 432.243 432.243\"\n  >\n      <path \n          d=\"M396.132,225.557l-29.051-16.144v-13.14c0-8.836-7.164-16-16-16c-7.342,0-13.515,4.952-15.396,11.693l-24.446-13.585    v-12.108c0-8.836-7.164-16-16-16c-7.021,0-12.968,4.526-15.125,10.813l-21.689-12.053c-1.607-31.051-4.521-59.535-8.582-83.175    c-3.221-18.753-7.029-33.617-11.318-44.179C236.346,16.317,229.72,0,216.123,0c-13.598,0-20.224,16.317-22.402,21.679    c-4.289,10.562-8.097,25.426-11.318,44.179c-4.06,23.64-6.975,52.124-8.582,83.175l-21.69,12.053    c-2.157-6.287-8.106-10.813-15.124-10.813c-8.837,0-16,7.164-16,16v12.108l-24.448,13.585    c-1.882-6.742-8.055-11.693-15.396-11.693c-8.837,0-16,7.164-16,16v13.14L36.11,225.557c-3.174,1.766-5.143,5.11-5.143,8.741    v41.718c0,3.237,1.568,6.275,4.208,8.151s6.024,2.356,9.083,1.291l128.616-44.829c1.189,40.082,4.47,77.047,9.528,106.496    c0.917,5.342,1.884,10.357,2.895,15.059l-66.969,37.215c-1.725,0.958-2.794,2.774-2.794,4.749v22.661    c0,1.761,0.852,3.41,2.286,4.431c1.434,1.018,3.272,1.278,4.935,0.701l78.279-27.284c3.598,4.531,8.53,8.329,15.088,8.329    c6.558,0,11.49-3.798,15.087-8.329l78.279,27.284c0.584,0.201,1.188,0.303,1.788,0.303c1.113,0,2.216-0.342,3.146-1.004    c1.434-1.021,2.285-2.669,2.285-4.431v-22.662c0-1.974-1.068-3.791-2.793-4.748l-66.969-37.215c1.01-4.7,1.977-9.715,2.895-15.059    c5.059-29.447,8.339-66.414,9.527-106.496l128.617,44.829c1.071,0.374,2.184,0.558,3.29,0.558c2.05,0,4.078-0.631,5.791-1.849    c2.642-1.875,4.209-4.914,4.209-8.151v-41.718C401.275,230.667,399.308,227.321,396.132,225.557z\" \n          fill=\"${fill}\" stroke-width=\"${strokeWidth}\" stroke=\"${stroke}\"\n      />\n  </svg>`;\n  return new Snap(D(s).el);\n};\n\n/**\n * simple nose on view e.g. at the center of a heading indicator\n * @param centerX\n * @param centerY\n * @param width\n * @param fill\n */\nexport const airplaneNoseView = (snap, center, width, fill) => {\n  // prop radius and empennage size are derived from width\n  const PR = width / 11;\n  const EMT = width / 35;\n  const EMS = width / 3;\n  const WH = width / 25;\n\n  // prop\n  circle(snap, center, PR, 0, \"transparent\", fill);\n\n  // wing\n  const wing = rectangle(\n    snap,\n    center.x - width / 2,\n    center.y - WH / 2,\n    width,\n    WH,\n    \"transparent\",\n    0,\n    fill,\n    3,\n    3\n  );\n\n  // vertical stabilizer\n  const vs = rectangle(\n    snap,\n    center.x - EMT / 2,\n    center.y - EMS + PR * 1.5,\n    EMT,\n    EMS / 2,\n    \"transparent\",\n    0,\n    fill,\n    3,\n    3\n  );\n\n  // horizontal stabilizer\n  const hs = rectangle(\n    snap,\n    center.x - EMS / 2,\n    center.y - PR,\n    EMS,\n    EMT,\n    \"transparent\",\n    0,\n    fill,\n    3,\n    3\n  );\n\n  return snap.g(wing, vs, hs);\n};\n","/**\n * make a stepped needle. Base is the given width but it steps down to half\n * that width at the tip. See the analog airspeed indicator for an example\n * of positioning.\n */\nexport const steppedNeedle = (\n  snap, // snap/svg to use\n  radius, // radius from pivot to tip\n  radiusShort, // radius from pivot to short/blunt end of needle\n  radiusMid, // radius where width changes\n  arrowHead, // length of arrow heads\n  width // widest width of needle\n) => {\n  let d = `M 0 0`;\n  d += ` L ${radiusShort} 0`;\n  d += `L ${radiusMid - arrowHead} 0`;\n  d += `L ${radiusMid} ${width * 0.4}`;\n  d += `L ${radius + radiusShort - arrowHead} ${width * 0.3}`;\n\n  d += `L ${radius + radiusShort + arrowHead} ${width / 2}`;\n\n  d += `L ${radius + radiusShort - arrowHead} ${width * 0.7}`;\n  d += `L ${radiusMid} ${width * 0.7}`;\n  d += `L ${radiusMid - arrowHead} ${width}`;\n  d += ` L ${radiusShort} ${width}`;\n\n  d += ` L 0 ${width} Z`;\n\n  const needle = snap.path(d);\n  needle.attr({\n    fill: snap.gradient(`l(0, 0.5, 1, 0.5)#222:30-#fff:31-#fff`),\n    stroke: snap.gradient(`l(0, 0.5, 1, 0.5)#444:30-#222:31-#222`),\n    \"stroke-width\": 1\n  });\n  // return the needle shape and a closure for positioning and rotating it\n  return {\n    needle,\n    setCenterAndAngle: (cx, cy, angle) => {\n      needle.attr({\n        transform: `t ${cx - radiusShort} ${cy -\n          width / 2} r ${angle} ${radiusShort} ${width / 2}`\n      });\n    }\n  };\n};\n/**\n * Like the stepped needle but with a triangle at the tip, used only for the\n * 10K needle on an altimeter\n */\nexport const altimeter10KNeedle = (\n  snap, // snap/svg to use\n  radius, // radius from pivot to tip\n  radiusShort, // radius from pivot to short/blunt end of needle\n  radiusMid, // radius where width changes\n  arrowHead, // length of arrow heads\n  triangleWidth // widest width of needle ( the triangle at the tip )\n) => {\n  // width of needle at the short end\n  const baseWidth = triangleWidth * 0.25;\n  const narrowWidth = baseWidth / 2;\n  const CY = triangleWidth / 2;\n\n  let d = `M 0 ${CY - baseWidth / 2}`;\n\n  d += `L ${radiusMid - arrowHead} ${CY - baseWidth / 2}`;\n\n  d += `L ${radiusMid} ${CY - narrowWidth / 2}`;\n\n  d += `L ${radius + radiusShort - arrowHead * 1.5} ${CY - narrowWidth / 2}`;\n\n  d += `L ${radius + radiusShort + arrowHead} 0`;\n  d += `L ${radius + radiusShort + arrowHead} ${triangleWidth}`;\n\n  d += `L ${radius + radiusShort - arrowHead * 1.5} ${CY + narrowWidth / 2}`;\n\n  d += `L ${radiusMid} ${CY + narrowWidth / 2}`;\n\n  d += `L ${radiusMid - arrowHead} ${CY + baseWidth / 2}`;\n\n  d += `L 0 ${CY + baseWidth / 2} Z`;\n\n  const needle = snap.path(d);\n  needle.attr({\n    fill: snap.gradient(`l(0, 0.5, 1, 0.5)#222:30-#fff:31-#fff`),\n    stroke: snap.gradient(`l(0, 0.5, 1, 0.5)#444:30-#222:31-#222`),\n    \"stroke-width\": 1\n  });\n  // return the needle shape and a closure for positioning and rotating it\n  return {\n    needle,\n    setCenterAndAngle: (cx, cy, angle) => {\n      needle.attr({\n        transform: `t ${cx - radiusShort} ${cy -\n          triangleWidth / 2} r ${angle} ${radiusShort} ${triangleWidth / 2}`\n      });\n    }\n  };\n};\n\n/**\n * Simple arrow head needle, see the hundreds needle on the altimeter for an example\n */\nexport const arrowNeedle = (\n  snap, // snap/svg to use\n  radius, // radius from pivot to tip\n  radiusShort, // radius from pivot to short/blunt end of needle\n  arrowHead, // length of arrow heads\n  width // widest width of needle\n) => {\n  let d = `M 0 0`;\n  d += ` L ${radiusShort} 0`;\n  d += `L ${radius + radiusShort - arrowHead} 0`;\n\n  d += `L ${radius + radiusShort + arrowHead} ${width / 2}`;\n  d += `L ${radius + radiusShort - arrowHead} ${width}`;\n\n  d += ` L ${radiusShort} ${width}`;\n\n  d += ` L 0 ${width} Z`;\n\n  const needle = snap.path(d);\n  needle.attr({\n    fill: snap.gradient(`l(0, 0.5, 1, 0.5)#222:30-#fff:31-#fff`),\n    stroke: snap.gradient(`l(0, 0.5, 1, 0.5)#444:30-#222:31-#222`),\n    \"stroke-width\": 1\n  });\n  // return the needle shape and a closure for positioning and rotating it\n  return {\n    needle,\n    setCenterAndAngle: (cx, cy, angle) => {\n      needle.attr({\n        transform: `t ${cx - radiusShort} ${cy -\n          width / 2} r ${angle} ${radiusShort} ${width / 2}`\n      });\n    }\n  };\n};\n\n/**\n * Dagger shaped needle e.g. the thousands needle of the altimeter\n */\nexport const daggerNeedle = (\n  snap, // snap/svg to use\n  radius, // radius from pivot to tip\n  radiusShort, // radius from pivot to short/blunt end of needle\n  arrowHead, // length of arrow heads\n  width // widest width of needle\n) => {\n  // parameter width of dagger at narrowest point\n  const narrow = 0.35;\n\n  let d = `M 0 0`;\n  d += ` L ${radiusShort} ${width * narrow}`;\n\n  d += `L ${radius + radiusShort - arrowHead} 0`;\n\n  d += `L ${radius + radiusShort + arrowHead} ${width / 2}`;\n  d += `L ${radius + radiusShort - arrowHead} ${width}`;\n\n  d += ` L ${radiusShort} ${width - width * narrow}`;\n\n  d += ` L 0 ${width} Z`;\n\n  const needle = snap.path(d);\n  needle.attr({\n    fill: snap.gradient(`l(0, 0.5, 1, 0.5)#222:40-#fff:41-#fff`),\n    stroke: snap.gradient(`l(0, 0.5, 1, 0.5)#444:40-#222:41-#222`),\n    \"stroke-width\": 1\n  });\n  // return the needle shape and a closure for positioning and rotating it\n  return {\n    needle,\n    setCenterAndAngle: (cx, cy, angle) => {\n      needle.attr({\n        transform: `t ${cx - radiusShort} ${cy -\n          width / 2} r ${angle} ${radiusShort} ${width / 2}`\n      });\n    }\n  };\n};\n","/**\n * start an interval callback at the given rate. Unlike the native window.setInterval\n * this will call on the leading edge of the interval. Returns a function that be used\n * to cancel the interval\n * @param milliseconds\n */\nexport const interval = (callback, milliseconds) => {\n  // setup system interval\n  let timer = setInterval(callback, milliseconds);\n\n  // make the initial callback soon but not before returning from this call.\n  requestAnimationFrame(() => {\n    // make sure we were not cancelled\n    if (timer) {\n      callback();\n    }\n  });\n\n  // return cancel function\n  return () => {\n    clearInterval(timer);\n    timer = 0;\n  };\n};\n","// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// ┌────────────────────────────────────────────────────────────┐ \\\\\n// │ Eve 0.5.4 - JavaScript Events Library                      │ \\\\\n// ├────────────────────────────────────────────────────────────┤ \\\\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n// └────────────────────────────────────────────────────────────┘ \\\\\n\n(function (glob) {\n    var version = \"0.5.4\",\n        has = \"hasOwnProperty\",\n        separator = /[\\.\\/]/,\n        comaseparator = /\\s*,\\s*/,\n        wildcard = \"*\",\n        numsort = function (a, b) {\n            return a - b;\n        },\n        current_event,\n        stop,\n        events = {n: {}},\n        firstDefined = function () {\n            for (var i = 0, ii = this.length; i < ii; i++) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        lastDefined = function () {\n            var i = this.length;\n            while (--i) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        objtos = Object.prototype.toString,\n        Str = String,\n        isArray = Array.isArray || function (ar) {\n            return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\n        },\n    /*\\\n     * eve\n     [ method ]\n\n     * Fires event with given `name`, given scope and other parameters.\n\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n     - scope (object) context for the event handlers\n     - varargs (...) the rest of arguments will be sent to event handlers\n\n     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n    \\*/\n        eve = function (name, scope) {\n            var oldstop = stop,\n                args = Array.prototype.slice.call(arguments, 2),\n                listeners = eve.listeners(name),\n                z = 0,\n                l,\n                indexed = [],\n                queue = {},\n                out = [],\n                ce = current_event;\n            out.firstDefined = firstDefined;\n            out.lastDefined = lastDefined;\n            current_event = name;\n            stop = 0;\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n                indexed.push(listeners[i].zIndex);\n                if (listeners[i].zIndex < 0) {\n                    queue[listeners[i].zIndex] = listeners[i];\n                }\n            }\n            indexed.sort(numsort);\n            while (indexed[z] < 0) {\n                l = queue[indexed[z++]];\n                out.push(l.apply(scope, args));\n                if (stop) {\n                    stop = oldstop;\n                    return out;\n                }\n            }\n            for (i = 0; i < ii; i++) {\n                l = listeners[i];\n                if (\"zIndex\" in l) {\n                    if (l.zIndex == indexed[z]) {\n                        out.push(l.apply(scope, args));\n                        if (stop) {\n                            break;\n                        }\n                        do {\n                            z++;\n                            l = queue[indexed[z]];\n                            l && out.push(l.apply(scope, args));\n                            if (stop) {\n                                break;\n                            }\n                        } while (l)\n                    } else {\n                        queue[l.zIndex] = l;\n                    }\n                } else {\n                    out.push(l.apply(scope, args));\n                    if (stop) {\n                        break;\n                    }\n                }\n            }\n            stop = oldstop;\n            current_event = ce;\n            return out;\n        };\n    // Undocumented. Debug only.\n    eve._events = events;\n    /*\\\n     * eve.listeners\n     [ method ]\n\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\n\n     = (array) array of event handlers\n    \\*/\n    eve.listeners = function (name) {\n        var names = isArray(name) ? name : name.split(separator),\n            e = events,\n            item,\n            items,\n            k,\n            i,\n            ii,\n            j,\n            jj,\n            nes,\n            es = [e],\n            out = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            nes = [];\n            for (j = 0, jj = es.length; j < jj; j++) {\n                e = es[j].n;\n                items = [e[names[i]], e[wildcard]];\n                k = 2;\n                while (k--) {\n                    item = items[k];\n                    if (item) {\n                        nes.push(item);\n                        out = out.concat(item.f || []);\n                    }\n                }\n            }\n            es = nes;\n        }\n        return out;\n    };\n    /*\\\n     * eve.separator\n     [ method ]\n\n     * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\n     * here. Be aware that if you pass a string longer than one character it will be treated as\n     * a list of characters.\n\n     - separator (string) new separator. Empty string resets to default: `.` or `/`.\n    \\*/\n    eve.separator = function (sep) {\n        if (sep) {\n            sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\n            sep = \"[\" + sep + \"]\";\n            separator = new RegExp(sep);\n        } else {\n            separator = /[\\.\\/]/;\n        }\n    };\n    /*\\\n     * eve.on\n     [ method ]\n     **\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n     | eve.on(\"*.under.*\", f);\n     | eve(\"mouse.under.floor\"); // triggers f\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     - name (array) if you don’t want to use separators, you can use array of strings\n     - f (function) event handler function\n     **\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment.\n     > Example:\n     | eve.on(\"mouse\", eatIt)(2);\n     | eve.on(\"mouse\", scream);\n     | eve.on(\"mouse\", catchIt)(1);\n     * This will ensure that `catchIt` function will be called before `eatIt`.\n     *\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n    \\*/\n    eve.on = function (name, f) {\n        if (typeof f != \"function\") {\n            return function () {};\n        }\n        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n        for (var i = 0, ii = names.length; i < ii; i++) {\n            (function (name) {\n                var names = isArray(name) ? name : Str(name).split(separator),\n                    e = events,\n                    exist;\n                for (var i = 0, ii = names.length; i < ii; i++) {\n                    e = e.n;\n                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\n                }\n                e.f = e.f || [];\n                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n                    exist = true;\n                    break;\n                }\n                !exist && e.f.push(f);\n            }(names[i]));\n        }\n        return function (zIndex) {\n            if (+zIndex == +zIndex) {\n                f.zIndex = +zIndex;\n            }\n        };\n    };\n    /*\\\n     * eve.f\n     [ method ]\n     **\n     * Returns function that will fire given event with optional arguments.\n     * Arguments that will be passed to the result function will be also\n     * concated to the list of final arguments.\n     | el.onclick = eve.f(\"click\", 1, 2);\n     | eve.on(\"click\", function (a, b, c) {\n     |     console.log(a, b, c); // 1, 2, [event object]\n     | });\n     - event (string) event name\n     - varargs (…) and any other arguments\n     = (function) possible event handler function\n    \\*/\n    eve.f = function (event) {\n        var attrs = [].slice.call(arguments, 1);\n        return function () {\n            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n        };\n    };\n    /*\\\n     * eve.stop\n     [ method ]\n     **\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n    \\*/\n    eve.stop = function () {\n        stop = 1;\n    };\n    /*\\\n     * eve.nt\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     - subname (string) #optional subname of the event\n     **\n     = (string) name of the event, if `subname` is not specified\n     * or\n     = (boolean) `true`, if current event’s name contains `subname`\n    \\*/\n    eve.nt = function (subname) {\n        var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\n        if (subname) {\n            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\n        }\n        return cur;\n    };\n    /*\\\n     * eve.nts\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     **\n     = (array) names of the event\n    \\*/\n    eve.nts = function () {\n        return isArray(current_event) ? current_event : current_event.split(separator);\n    };\n    /*\\\n     * eve.off\n     [ method ]\n     **\n     * Removes given function from the list of event listeners assigned to given name.\n     * If no arguments specified all the events will be cleared.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n    \\*/\n    /*\\\n     * eve.unbind\n     [ method ]\n     **\n     * See @eve.off\n    \\*/\n    eve.off = eve.unbind = function (name, f) {\n        if (!name) {\n            eve._events = events = {n: {}};\n            return;\n        }\n        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n        if (names.length > 1) {\n            for (var i = 0, ii = names.length; i < ii; i++) {\n                eve.off(names[i], f);\n            }\n            return;\n        }\n        names = isArray(name) ? name : Str(name).split(separator);\n        var e,\n            key,\n            splice,\n            i, ii, j, jj,\n            cur = [events],\n            inodes = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            for (j = 0; j < cur.length; j += splice.length - 2) {\n                splice = [j, 1];\n                e = cur[j].n;\n                if (names[i] != wildcard) {\n                    if (e[names[i]]) {\n                        splice.push(e[names[i]]);\n                        inodes.unshift({\n                            n: e,\n                            name: names[i]\n                        });\n                    }\n                } else {\n                    for (key in e) if (e[has](key)) {\n                        splice.push(e[key]);\n                        inodes.unshift({\n                            n: e,\n                            name: key\n                        });\n                    }\n                }\n                cur.splice.apply(cur, splice);\n            }\n        }\n        for (i = 0, ii = cur.length; i < ii; i++) {\n            e = cur[i];\n            while (e.n) {\n                if (f) {\n                    if (e.f) {\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n                            e.f.splice(j, 1);\n                            break;\n                        }\n                        !e.f.length && delete e.f;\n                    }\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        var funcs = e.n[key].f;\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n                            funcs.splice(j, 1);\n                            break;\n                        }\n                        !funcs.length && delete e.n[key].f;\n                    }\n                } else {\n                    delete e.f;\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        delete e.n[key].f;\n                    }\n                }\n                e = e.n;\n            }\n        }\n        // prune inner nodes in path\n        prune: for (i = 0, ii = inodes.length; i < ii; i++) {\n            e = inodes[i];\n            for (key in e.n[e.name].f) {\n                // not empty (has listeners)\n                continue prune;\n            }\n            for (key in e.n[e.name].n) {\n                // not empty (has children)\n                continue prune;\n            }\n            // is empty\n            delete e.n[e.name];\n        }\n    };\n    /*\\\n     * eve.once\n     [ method ]\n     **\n     * Binds given event handler with a given name to only run once then unbind itself.\n     | eve.once(\"login\", f);\n     | eve(\"login\"); // triggers f\n     | eve(\"login\"); // no listeners\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     = (function) same return function as @eve.on\n    \\*/\n    eve.once = function (name, f) {\n        var f2 = function () {\n            eve.off(name, f2);\n            return f.apply(this, arguments);\n        };\n        return eve.on(name, f2);\n    };\n    /*\\\n     * eve.version\n     [ property (string) ]\n     **\n     * Current version of the library.\n    \\*/\n    eve.version = version;\n    eve.toString = function () {\n        return \"You are running Eve \" + version;\n    };\n    glob.eve = eve;\n    typeof module != \"undefined\" && module.exports ? module.exports = eve : typeof define === \"function\" && define.amd ? define(\"eve\", [], function () { return eve; }) : glob.eve = eve;\n})(typeof window != \"undefined\" ? window : this);\n","window.eve = require('eve')\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar mina = (function (eve) {\n    var animations = {},\n    requestAnimFrame = window.requestAnimationFrame       ||\n                       window.webkitRequestAnimationFrame ||\n                       window.mozRequestAnimationFrame    ||\n                       window.oRequestAnimationFrame      ||\n                       window.msRequestAnimationFrame     ||\n                       function (callback) {\n                           setTimeout(callback, 16, new Date().getTime());\n                           return true;\n                       },\n    requestID,\n    isArray = Array.isArray || function (a) {\n        return a instanceof Array ||\n            Object.prototype.toString.call(a) == \"[object Array]\";\n    },\n    idgen = 0,\n    idprefix = \"M\" + (+new Date).toString(36),\n    ID = function () {\n        return idprefix + (idgen++).toString(36);\n    },\n    diff = function (a, b, A, B) {\n        if (isArray(a)) {\n            res = [];\n            for (var i = 0, ii = a.length; i < ii; i++) {\n                res[i] = diff(a[i], b, A[i], B);\n            }\n            return res;\n        }\n        var dif = (A - a) / (B - b);\n        return function (bb) {\n            return a + dif * (bb - b);\n        };\n    },\n    timer = Date.now || function () {\n        return +new Date;\n    },\n    sta = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.s;\n        }\n        var ds = a.s - val;\n        a.b += a.dur * ds;\n        a.B += a.dur * ds;\n        a.s = val;\n    },\n    speed = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.spd;\n        }\n        a.spd = val;\n    },\n    duration = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.dur;\n        }\n        a.s = a.s * val / a.dur;\n        a.dur = val;\n    },\n    stopit = function () {\n        var a = this;\n        delete animations[a.id];\n        a.update();\n        eve(\"mina.stop.\" + a.id, a);\n    },\n    pause = function () {\n        var a = this;\n        if (a.pdif) {\n            return;\n        }\n        delete animations[a.id];\n        a.update();\n        a.pdif = a.get() - a.b;\n    },\n    resume = function () {\n        var a = this;\n        if (!a.pdif) {\n            return;\n        }\n        a.b = a.get() - a.pdif;\n        delete a.pdif;\n        animations[a.id] = a;\n        frame();\n    },\n    update = function () {\n        var a = this,\n            res;\n        if (isArray(a.start)) {\n            res = [];\n            for (var j = 0, jj = a.start.length; j < jj; j++) {\n                res[j] = +a.start[j] +\n                    (a.end[j] - a.start[j]) * a.easing(a.s);\n            }\n        } else {\n            res = +a.start + (a.end - a.start) * a.easing(a.s);\n        }\n        a.set(res);\n    },\n    frame = function (timeStamp) {\n        // Manual invokation?\n        if (!timeStamp) {\n            // Frame loop stopped?\n            if (!requestID) {\n                // Start frame loop...\n                requestID = requestAnimFrame(frame);\n            }\n            return;\n        }\n        var len = 0;\n        for (var i in animations) if (animations.hasOwnProperty(i)) {\n            var a = animations[i],\n                b = a.get(),\n                res;\n            len++;\n            a.s = (b - a.b) / (a.dur / a.spd);\n            if (a.s >= 1) {\n                delete animations[i];\n                a.s = 1;\n                len--;\n                (function (a) {\n                    setTimeout(function () {\n                        eve(\"mina.finish.\" + a.id, a);\n                    });\n                }(a));\n            }\n            a.update();\n        }\n        requestID = len ? requestAnimFrame(frame) : false;\n    },\n    /*\\\n     * mina\n     [ method ]\n     **\n     * Generic animation of numbers\n     **\n     - a (number) start _slave_ number\n     - A (number) end _slave_ number\n     - b (number) start _master_ number (start time in general case)\n     - B (number) end _master_ number (end time in general case)\n     - get (function) getter of _master_ number (see @mina.time)\n     - set (function) setter of _slave_ number\n     - easing (function) #optional easing function, default is @mina.linear\n     = (object) animation descriptor\n     o {\n     o         id (string) animation id,\n     o         start (number) start _slave_ number,\n     o         end (number) end _slave_ number,\n     o         b (number) start _master_ number,\n     o         s (number) animation status (0..1),\n     o         dur (number) animation duration,\n     o         spd (number) animation speed,\n     o         get (function) getter of _master_ number (see @mina.time),\n     o         set (function) setter of _slave_ number,\n     o         easing (function) easing function, default is @mina.linear,\n     o         status (function) status getter/setter,\n     o         speed (function) speed getter/setter,\n     o         duration (function) duration getter/setter,\n     o         stop (function) animation stopper\n     o         pause (function) pauses the animation\n     o         resume (function) resumes the animation\n     o         update (function) calles setter with the right value of the animation\n     o }\n    \\*/\n    mina = function (a, A, b, B, get, set, easing) {\n        var anim = {\n            id: ID(),\n            start: a,\n            end: A,\n            b: b,\n            s: 0,\n            dur: B - b,\n            spd: 1,\n            get: get,\n            set: set,\n            easing: easing || mina.linear,\n            status: sta,\n            speed: speed,\n            duration: duration,\n            stop: stopit,\n            pause: pause,\n            resume: resume,\n            update: update\n        };\n        animations[anim.id] = anim;\n        var len = 0, i;\n        for (i in animations) if (animations.hasOwnProperty(i)) {\n            len++;\n            if (len == 2) {\n                break;\n            }\n        }\n        len == 1 && frame();\n        return anim;\n    };\n    /*\\\n     * mina.time\n     [ method ]\n     **\n     * Returns the current time. Equivalent to:\n     | function () {\n     |     return (new Date).getTime();\n     | }\n    \\*/\n    mina.time = timer;\n    /*\\\n     * mina.getById\n     [ method ]\n     **\n     * Returns an animation by its id\n     - id (string) animation's id\n     = (object) See @mina\n    \\*/\n    mina.getById = function (id) {\n        return animations[id] || null;\n    };\n\n    /*\\\n     * mina.linear\n     [ method ]\n     **\n     * Default linear easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.linear = function (n) {\n        return n;\n    };\n    /*\\\n     * mina.easeout\n     [ method ]\n     **\n     * Easeout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeout = function (n) {\n        return Math.pow(n, 1.7);\n    };\n    /*\\\n     * mina.easein\n     [ method ]\n     **\n     * Easein easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easein = function (n) {\n        return Math.pow(n, .48);\n    };\n    /*\\\n     * mina.easeinout\n     [ method ]\n     **\n     * Easeinout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeinout = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        if (n == 0) {\n            return 0;\n        }\n        var q = .48 - n / 1.04,\n            Q = Math.sqrt(.1734 + q * q),\n            x = Q - q,\n            X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n            y = -Q - q,\n            Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n            t = X + Y + .5;\n        return (1 - t) * 3 * t * t + t * t * t;\n    };\n    /*\\\n     * mina.backin\n     [ method ]\n     **\n     * Backin easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backin = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        var s = 1.70158;\n        return n * n * ((s + 1) * n - s);\n    };\n    /*\\\n     * mina.backout\n     [ method ]\n     **\n     * Backout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backout = function (n) {\n        if (n == 0) {\n            return 0;\n        }\n        n = n - 1;\n        var s = 1.70158;\n        return n * n * ((s + 1) * n + s) + 1;\n    };\n    /*\\\n     * mina.elastic\n     [ method ]\n     **\n     * Elastic easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.elastic = function (n) {\n        if (n == !!n) {\n            return n;\n        }\n        return Math.pow(2, -10 * n) * Math.sin((n - .075) *\n            (2 * Math.PI) / .3) + 1;\n    };\n    /*\\\n     * mina.bounce\n     [ method ]\n     **\n     * Bounce easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.bounce = function (n) {\n        var s = 7.5625,\n            p = 2.75,\n            l;\n        if (n < 1 / p) {\n            l = s * n * n;\n        } else {\n            if (n < 2 / p) {\n                n -= 1.5 / p;\n                l = s * n * n + .75;\n            } else {\n                if (n < 2.5 / p) {\n                    n -= 2.25 / p;\n                    l = s * n * n + .9375;\n                } else {\n                    n -= 2.625 / p;\n                    l = s * n * n + .984375;\n                }\n            }\n        }\n        return l;\n    };\n    window.mina = mina;\n    return mina;\n})(typeof eve == \"undefined\" ? function () {} : eve);\n\n// Copyright (c) 2013 - 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar Snap = (function(root) {\nSnap.version = \"0.5.1\";\n/*\\\n * Snap\n [ method ]\n **\n * Creates a drawing surface or wraps existing SVG element.\n **\n - width (number|string) width of surface\n - height (number|string) height of surface\n * or\n - DOM (SVGElement) element to be wrapped into Snap structure\n * or\n - array (array) array of elements (will return set of elements)\n * or\n - query (string) CSS query selector\n = (object) @Element\n\\*/\nfunction Snap(w, h) {\n    if (w) {\n        if (w.nodeType) {\n            return wrap(w);\n        }\n        if (is(w, \"array\") && Snap.set) {\n            return Snap.set.apply(Snap, w);\n        }\n        if (w instanceof Element) {\n            return w;\n        }\n        if (h == null) {\n            try {\n                w = glob.doc.querySelector(String(w));\n                return wrap(w);\n            } catch (e) {\n                return null;\n            }\n        }\n    }\n    w = w == null ? \"100%\" : w;\n    h = h == null ? \"100%\" : h;\n    return new Paper(w, h);\n}\nSnap.toString = function () {\n    return \"Snap v\" + this.version;\n};\nSnap._ = {};\nvar glob = {\n    win: root.window,\n    doc: root.window.document\n};\nSnap._.glob = glob;\nvar has = \"hasOwnProperty\",\n    Str = String,\n    toFloat = parseFloat,\n    toInt = parseInt,\n    math = Math,\n    mmax = math.max,\n    mmin = math.min,\n    abs = math.abs,\n    pow = math.pow,\n    PI = math.PI,\n    round = math.round,\n    E = \"\",\n    S = \" \",\n    objectToString = Object.prototype.toString,\n    ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n    bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n    separator = Snap._.separator = /[,\\s]+/,\n    whitespace = /[\\s]/g,\n    commaSpaces = /[\\s]*,[\\s]*/,\n    hsrg = {hs: 1, rg: 1},\n    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\s]*,?[\\s]*/ig,\n    idgen = 0,\n    idprefix = \"S\" + (+new Date).toString(36),\n    ID = function (el) {\n        return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n    },\n    xlink = \"http://www.w3.org/1999/xlink\",\n    xmlns = \"http://www.w3.org/2000/svg\",\n    hub = {},\n    /*\\\n     * Snap.url\n     [ method ]\n     **\n     * Wraps path into `\"url('<path>')\"`.\n     - value (string) path\n     = (string) wrapped path\n    \\*/\n    URL = Snap.url = function (url) {\n        return \"url('#\" + url + \"')\";\n    };\n\nfunction $(el, attr) {\n    if (attr) {\n        if (el == \"#text\") {\n            el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (el == \"#comment\") {\n            el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (typeof el == \"string\") {\n            el = $(el);\n        }\n        if (typeof attr == \"string\") {\n            if (el.nodeType == 1) {\n                if (attr.substring(0, 6) == \"xlink:\") {\n                    return el.getAttributeNS(xlink, attr.substring(6));\n                }\n                if (attr.substring(0, 4) == \"xml:\") {\n                    return el.getAttributeNS(xmlns, attr.substring(4));\n                }\n                return el.getAttribute(attr);\n            } else if (attr == \"text\") {\n                return el.nodeValue;\n            } else {\n                return null;\n            }\n        }\n        if (el.nodeType == 1) {\n            for (var key in attr) if (attr[has](key)) {\n                var val = Str(attr[key]);\n                if (val) {\n                    if (key.substring(0, 6) == \"xlink:\") {\n                        el.setAttributeNS(xlink, key.substring(6), val);\n                    } else if (key.substring(0, 4) == \"xml:\") {\n                        el.setAttributeNS(xmlns, key.substring(4), val);\n                    } else {\n                        el.setAttribute(key, val);\n                    }\n                } else {\n                    el.removeAttribute(key);\n                }\n            }\n        } else if (\"text\" in attr) {\n            el.nodeValue = attr.text;\n        }\n    } else {\n        el = glob.doc.createElementNS(xmlns, el);\n    }\n    return el;\n}\nSnap._.$ = $;\nSnap._.id = ID;\nfunction getAttrs(el) {\n    var attrs = el.attributes,\n        name,\n        out = {};\n    for (var i = 0; i < attrs.length; i++) {\n        if (attrs[i].namespaceURI == xlink) {\n            name = \"xlink:\";\n        } else {\n            name = \"\";\n        }\n        name += attrs[i].name;\n        out[name] = attrs[i].textContent;\n    }\n    return out;\n}\nfunction is(o, type) {\n    type = Str.prototype.toLowerCase.call(type);\n    if (type == \"finite\") {\n        return isFinite(o);\n    }\n    if (type == \"array\" &&\n        (o instanceof Array || Array.isArray && Array.isArray(o))) {\n        return true;\n    }\n    return  type == \"null\" && o === null ||\n            type == typeof o && o !== null ||\n            type == \"object\" && o === Object(o) ||\n            objectToString.call(o).slice(8, -1).toLowerCase() == type;\n}\n/*\\\n * Snap.format\n [ method ]\n **\n * Replaces construction of type `{<name>}` to the corresponding argument\n **\n - token (string) string to format\n - json (object) object which properties are used as a replacement\n = (string) formatted string\n > Usage\n | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n |     x: 10,\n |     y: 20,\n |     dim: {\n |         width: 40,\n |         height: 50,\n |         \"negative width\": -40\n |     }\n | }));\n\\*/\nSnap.format = (function () {\n    var tokenRegex = /\\{([^\\}]+)\\}/g,\n        objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n        replacer = function (all, key, obj) {\n            var res = obj;\n            key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n                name = name || quotedName;\n                if (res) {\n                    if (name in res) {\n                        res = res[name];\n                    }\n                    typeof res == \"function\" && isFunc && (res = res());\n                }\n            });\n            res = (res == null || res == obj ? all : res) + \"\";\n            return res;\n        };\n    return function (str, obj) {\n        return Str(str).replace(tokenRegex, function (all, key) {\n            return replacer(all, key, obj);\n        });\n    };\n})();\nfunction clone(obj) {\n    if (typeof obj == \"function\" || Object(obj) !== obj) {\n        return obj;\n    }\n    var res = new obj.constructor;\n    for (var key in obj) if (obj[has](key)) {\n        res[key] = clone(obj[key]);\n    }\n    return res;\n}\nSnap._.clone = clone;\nfunction repush(array, item) {\n    for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n        return array.push(array.splice(i, 1)[0]);\n    }\n}\nfunction cacher(f, scope, postprocessor) {\n    function newf() {\n        var arg = Array.prototype.slice.call(arguments, 0),\n            args = arg.join(\"\\u2400\"),\n            cache = newf.cache = newf.cache || {},\n            count = newf.count = newf.count || [];\n        if (cache[has](args)) {\n            repush(count, args);\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\n        }\n        count.length >= 1e3 && delete cache[count.shift()];\n        count.push(args);\n        cache[args] = f.apply(scope, arg);\n        return postprocessor ? postprocessor(cache[args]) : cache[args];\n    }\n    return newf;\n}\nSnap._.cacher = cacher;\nfunction angle(x1, y1, x2, y2, x3, y3) {\n    if (x3 == null) {\n        var x = x1 - x2,\n            y = y1 - y2;\n        if (!x && !y) {\n            return 0;\n        }\n        return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n    } else {\n        return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n    }\n}\nfunction rad(deg) {\n    return deg % 360 * PI / 180;\n}\nfunction deg(rad) {\n    return rad * 180 / PI % 360;\n}\nfunction x_y() {\n    return this.x + S + this.y;\n}\nfunction x_y_w_h() {\n    return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n}\n\n/*\\\n * Snap.rad\n [ method ]\n **\n * Transform angle to radians\n - deg (number) angle in degrees\n = (number) angle in radians\n\\*/\nSnap.rad = rad;\n/*\\\n * Snap.deg\n [ method ]\n **\n * Transform angle to degrees\n - rad (number) angle in radians\n = (number) angle in degrees\n\\*/\nSnap.deg = deg;\n/*\\\n * Snap.sin\n [ method ]\n **\n * Equivalent to `Math.sin()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) sin\n\\*/\nSnap.sin = function (angle) {\n    return math.sin(Snap.rad(angle));\n};\n/*\\\n * Snap.tan\n [ method ]\n **\n * Equivalent to `Math.tan()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) tan\n\\*/\nSnap.tan = function (angle) {\n    return math.tan(Snap.rad(angle));\n};\n/*\\\n * Snap.cos\n [ method ]\n **\n * Equivalent to `Math.cos()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) cos\n\\*/\nSnap.cos = function (angle) {\n    return math.cos(Snap.rad(angle));\n};\n/*\\\n * Snap.asin\n [ method ]\n **\n * Equivalent to `Math.asin()` only works with degrees, not radians.\n - num (number) value\n = (number) asin in degrees\n\\*/\nSnap.asin = function (num) {\n    return Snap.deg(math.asin(num));\n};\n/*\\\n * Snap.acos\n [ method ]\n **\n * Equivalent to `Math.acos()` only works with degrees, not radians.\n - num (number) value\n = (number) acos in degrees\n\\*/\nSnap.acos = function (num) {\n    return Snap.deg(math.acos(num));\n};\n/*\\\n * Snap.atan\n [ method ]\n **\n * Equivalent to `Math.atan()` only works with degrees, not radians.\n - num (number) value\n = (number) atan in degrees\n\\*/\nSnap.atan = function (num) {\n    return Snap.deg(math.atan(num));\n};\n/*\\\n * Snap.atan2\n [ method ]\n **\n * Equivalent to `Math.atan2()` only works with degrees, not radians.\n - num (number) value\n = (number) atan2 in degrees\n\\*/\nSnap.atan2 = function (num) {\n    return Snap.deg(math.atan2(num));\n};\n/*\\\n * Snap.angle\n [ method ]\n **\n * Returns an angle between two or three points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n - x3 (number) #optional x coord of third point\n - y3 (number) #optional y coord of third point\n = (number) angle in degrees\n\\*/\nSnap.angle = angle;\n/*\\\n * Snap.len\n [ method ]\n **\n * Returns distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len = function (x1, y1, x2, y2) {\n    return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n};\n/*\\\n * Snap.len2\n [ method ]\n **\n * Returns squared distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len2 = function (x1, y1, x2, y2) {\n    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n};\n/*\\\n * Snap.closestPoint\n [ method ]\n **\n * Returns closest point to a given one on a given path.\n - path (Element) path element\n - x (number) x coord of a point\n - y (number) y coord of a point\n = (object) in format\n {\n    x (number) x coord of the point on the path\n    y (number) y coord of the point on the path\n    length (number) length of the path to the point\n    distance (number) distance from the given point to the path\n }\n\\*/\n// Copied from http://bl.ocks.org/mbostock/8027637\nSnap.closestPoint = function (path, x, y) {\n    function distance2(p) {\n        var dx = p.x - x,\n            dy = p.y - y;\n        return dx * dx + dy * dy;\n    }\n    var pathNode = path.node,\n        pathLength = pathNode.getTotalLength(),\n        precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n        best,\n        bestLength,\n        bestDistance = Infinity;\n\n    // linear scan for coarse approximation\n    for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n        if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n            best = scan;\n            bestLength = scanLength;\n            bestDistance = scanDistance;\n        }\n    }\n\n    // binary search for precise estimate\n    precision *= .5;\n    while (precision > .5) {\n        var before,\n            after,\n            beforeLength,\n            afterLength,\n            beforeDistance,\n            afterDistance;\n        if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n            best = before;\n            bestLength = beforeLength;\n            bestDistance = beforeDistance;\n        } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n            best = after;\n            bestLength = afterLength;\n            bestDistance = afterDistance;\n        } else {\n            precision *= .5;\n        }\n    }\n\n    best = {\n        x: best.x,\n        y: best.y,\n        length: bestLength,\n        distance: Math.sqrt(bestDistance)\n    };\n    return best;\n}\n/*\\\n * Snap.is\n [ method ]\n **\n * Handy replacement for the `typeof` operator\n - o (…) any object or primitive\n - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n = (boolean) `true` if given value is of given type\n\\*/\nSnap.is = is;\n/*\\\n * Snap.snapTo\n [ method ]\n **\n * Snaps given value to given grid\n - values (array|number) given array of values or step of the grid\n - value (number) value to adjust\n - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n = (number) adjusted value\n\\*/\nSnap.snapTo = function (values, value, tolerance) {\n    tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n    if (is(values, \"array\")) {\n        var i = values.length;\n        while (i--) if (abs(values[i] - value) <= tolerance) {\n            return values[i];\n        }\n    } else {\n        values = +values;\n        var rem = value % values;\n        if (rem < tolerance) {\n            return value - rem;\n        }\n        if (rem > values - tolerance) {\n            return value - rem + values;\n        }\n    }\n    return value;\n};\n// Colour\n/*\\\n * Snap.getRGB\n [ method ]\n **\n * Parses color string as RGB object\n - color (string) color string in one of the following formats:\n # <ul>\n #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n # </ul>\n * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) true if string can't be parsed\n o }\n\\*/\nSnap.getRGB = cacher(function (colour) {\n    if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    if (colour == \"none\") {\n        return {r: -1, g: -1, b: -1, hex: \"none\", toString: rgbtoString};\n    }\n    !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n    if (!colour) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    var res,\n        red,\n        green,\n        blue,\n        opacity,\n        t,\n        values,\n        rgb = colour.match(colourRegExp);\n    if (rgb) {\n        if (rgb[2]) {\n            blue = toInt(rgb[2].substring(5), 16);\n            green = toInt(rgb[2].substring(3, 5), 16);\n            red = toInt(rgb[2].substring(1, 3), 16);\n        }\n        if (rgb[3]) {\n            blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n            green = toInt((t = rgb[3].charAt(2)) + t, 16);\n            red = toInt((t = rgb[3].charAt(1)) + t, 16);\n        }\n        if (rgb[4]) {\n            values = rgb[4].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red *= 2.55);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green *= 2.55);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue *= 2.55);\n            rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        }\n        if (rgb[5]) {\n            values = rgb[5].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsb2rgb(red, green, blue, opacity);\n        }\n        if (rgb[6]) {\n            values = rgb[6].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsl2rgb(red, green, blue, opacity);\n        }\n        red = mmin(math.round(red), 255);\n        green = mmin(math.round(green), 255);\n        blue = mmin(math.round(blue), 255);\n        opacity = mmin(mmax(opacity, 0), 1);\n        rgb = {r: red, g: green, b: blue, toString: rgbtoString};\n        rgb.hex = \"#\" + (16777216 | blue | green << 8 | red << 16).toString(16).slice(1);\n        rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n        return rgb;\n    }\n    return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n}, Snap);\n/*\\\n * Snap.hsb\n [ method ]\n **\n * Converts HSB values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - b (number) value or brightness\n = (string) hex representation of the color\n\\*/\nSnap.hsb = cacher(function (h, s, b) {\n    return Snap.hsb2rgb(h, s, b).hex;\n});\n/*\\\n * Snap.hsl\n [ method ]\n **\n * Converts HSL values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (string) hex representation of the color\n\\*/\nSnap.hsl = cacher(function (h, s, l) {\n    return Snap.hsl2rgb(h, s, l).hex;\n});\n/*\\\n * Snap.rgb\n [ method ]\n **\n * Converts RGB values to a hex representation of the color\n - r (number) red\n - g (number) green\n - b (number) blue\n = (string) hex representation of the color\n\\*/\nSnap.rgb = cacher(function (r, g, b, o) {\n    if (is(o, \"finite\")) {\n        var round = math.round;\n        return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n    }\n    return \"#\" + (16777216 | b | g << 8 | r << 16).toString(16).slice(1);\n});\nvar toHex = function (color) {\n    var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n        red = \"rgb(255, 0, 0)\";\n    toHex = cacher(function (color) {\n        if (color.toLowerCase() == \"red\") {\n            return red;\n        }\n        i.style.color = red;\n        i.style.color = color;\n        var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n        return out == red ? null : out;\n    });\n    return toHex(color);\n},\nhsbtoString = function () {\n    return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n},\nhsltoString = function () {\n    return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n},\nrgbtoString = function () {\n    return this.opacity == 1 || this.opacity == null ?\n            this.hex :\n            \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n},\nprepareRGB = function (r, g, b) {\n    if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n        b = r.b;\n        g = r.g;\n        r = r.r;\n    }\n    if (g == null && is(r, string)) {\n        var clr = Snap.getRGB(r);\n        r = clr.r;\n        g = clr.g;\n        b = clr.b;\n    }\n    if (r > 1 || g > 1 || b > 1) {\n        r /= 255;\n        g /= 255;\n        b /= 255;\n    }\n\n    return [r, g, b];\n},\npackageRGB = function (r, g, b, o) {\n    r = math.round(r * 255);\n    g = math.round(g * 255);\n    b = math.round(b * 255);\n    var rgb = {\n        r: r,\n        g: g,\n        b: b,\n        opacity: is(o, \"finite\") ? o : 1,\n        hex: Snap.rgb(r, g, b),\n        toString: rgbtoString\n    };\n    is(o, \"finite\") && (rgb.opacity = o);\n    return rgb;\n};\n/*\\\n * Snap.color\n [ method ]\n **\n * Parses the color string and returns an object featuring the color's component values\n - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n = (object) Combined RGB/HSB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) `true` if string can't be parsed,\n o     h (number) hue,\n o     s (number) saturation,\n o     v (number) value (brightness),\n o     l (number) lightness\n o }\n\\*/\nSnap.color = function (clr) {\n    var rgb;\n    if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n        rgb = Snap.hsb2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n        rgb = Snap.hsl2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else {\n        if (is(clr, \"string\")) {\n            clr = Snap.getRGB(clr);\n        }\n        if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n            rgb = Snap.rgb2hsl(clr);\n            clr.h = rgb.h;\n            clr.s = rgb.s;\n            clr.l = rgb.l;\n            rgb = Snap.rgb2hsb(clr);\n            clr.v = rgb.b;\n        } else {\n            clr = {hex: \"none\"};\n            clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n            clr.error = 1;\n        }\n    }\n    clr.toString = rgbtoString;\n    return clr;\n};\n/*\\\n * Snap.hsb2rgb\n [ method ]\n **\n * Converts HSB values to an RGB object\n - h (number) hue\n - s (number) saturation\n - v (number) value or brightness\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsb2rgb = function (h, s, v, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n        v = h.b;\n        s = h.s;\n        o = h.o;\n        h = h.h;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = v * s;\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = v - C;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.hsl2rgb\n [ method ]\n **\n * Converts HSL values to an RGB object\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsl2rgb = function (h, s, l, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n    }\n    if (h > 1 || s > 1 || l > 1) {\n        h /= 360;\n        s /= 100;\n        l /= 100;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = 2 * s * (l < .5 ? l : 1 - l);\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = l - C / 2;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.rgb2hsb\n [ method ]\n **\n * Converts RGB values to an HSB object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSB object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     b (number) brightness\n o }\n\\*/\nSnap.rgb2hsb = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, V, C;\n    V = mmax(r, g, b);\n    C = V - mmin(r, g, b);\n    H = C == 0 ? null :\n        V == r ? (g - b) / C :\n        V == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    S = C == 0 ? 0 : C / V;\n    return {h: H, s: S, b: V, toString: hsbtoString};\n};\n/*\\\n * Snap.rgb2hsl\n [ method ]\n **\n * Converts RGB values to an HSL object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSL object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     l (number) luminosity\n o }\n\\*/\nSnap.rgb2hsl = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, L, M, m, C;\n    M = mmax(r, g, b);\n    m = mmin(r, g, b);\n    C = M - m;\n    H = C == 0 ? null :\n        M == r ? (g - b) / C :\n        M == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    L = (M + m) / 2;\n    S = C == 0 ? 0 :\n         L < .5 ? C / (2 * L) :\n                  C / (2 - 2 * L);\n    return {h: H, s: S, l: L, toString: hsltoString};\n};\n\n// Transformations\n/*\\\n * Snap.parsePathString\n [ method ]\n **\n * Utility method\n **\n * Parses given path string into an array of arrays of path segments\n - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n = (array) array of segments\n\\*/\nSnap.parsePathString = function (pathString) {\n    if (!pathString) {\n        return null;\n    }\n    var pth = Snap.path(pathString);\n    if (pth.arr) {\n        return Snap.path.clone(pth.arr);\n    }\n\n    var paramCounts = {a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0},\n        data = [];\n    if (is(pathString, \"array\") && is(pathString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(pathString);\n    }\n    if (!data.length) {\n        Str(pathString).replace(pathCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            if (name == \"m\" && params.length > 2) {\n                data.push([b].concat(params.splice(0, 2)));\n                name = \"l\";\n                b = b == \"m\" ? \"l\" : \"L\";\n            }\n            if (name == \"o\" && params.length == 1) {\n                data.push([b, params[0]]);\n            }\n            if (name == \"r\") {\n                data.push([b].concat(params));\n            } else while (params.length >= paramCounts[name]) {\n                data.push([b].concat(params.splice(0, paramCounts[name])));\n                if (!paramCounts[name]) {\n                    break;\n                }\n            }\n        });\n    }\n    data.toString = Snap.path.toString;\n    pth.arr = Snap.path.clone(data);\n    return data;\n};\n/*\\\n * Snap.parseTransformString\n [ method ]\n **\n * Utility method\n **\n * Parses given transform string into an array of transformations\n - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n = (array) array of transformations\n\\*/\nvar parseTransformString = Snap.parseTransformString = function (TString) {\n    if (!TString) {\n        return null;\n    }\n    var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n        data = [];\n    if (is(TString, \"array\") && is(TString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(TString);\n    }\n    if (!data.length) {\n        Str(TString).replace(tCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            data.push([b].concat(params));\n        });\n    }\n    data.toString = Snap.path.toString;\n    return data;\n};\nfunction svgTransform2string(tstr) {\n    var res = [];\n    tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n        params = params.split(/\\s*,\\s*|\\s+/);\n        if (name == \"rotate\" && params.length == 1) {\n            params.push(0, 0);\n        }\n        if (name == \"scale\") {\n            if (params.length > 2) {\n                params = params.slice(0, 2);\n            } else if (params.length == 2) {\n                params.push(0, 0);\n            }\n            if (params.length == 1) {\n                params.push(params[0], 0, 0);\n            }\n        }\n        if (name == \"skewX\") {\n            res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n        } else if (name == \"skewY\") {\n            res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n        } else {\n            res.push([name.charAt(0)].concat(params));\n        }\n        return all;\n    });\n    return res;\n}\nSnap._.svgTransform2string = svgTransform2string;\nSnap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\nfunction transform2matrix(tstr, bbox) {\n    var tdata = parseTransformString(tstr),\n        m = new Snap.Matrix;\n    if (tdata) {\n        for (var i = 0, ii = tdata.length; i < ii; i++) {\n            var t = tdata[i],\n                tlen = t.length,\n                command = Str(t[0]).toLowerCase(),\n                absolute = t[0] != command,\n                inver = absolute ? m.invert() : 0,\n                x1,\n                y1,\n                x2,\n                y2,\n                bb;\n            if (command == \"t\" && tlen == 2){\n                m.translate(t[1], 0);\n            } else if (command == \"t\" && tlen == 3) {\n                if (absolute) {\n                    x1 = inver.x(0, 0);\n                    y1 = inver.y(0, 0);\n                    x2 = inver.x(t[1], t[2]);\n                    y2 = inver.y(t[1], t[2]);\n                    m.translate(x2 - x1, y2 - y1);\n                } else {\n                    m.translate(t[1], t[2]);\n                }\n            } else if (command == \"r\") {\n                if (tlen == 2) {\n                    bb = bb || bbox;\n                    m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.rotate(t[1], x2, y2);\n                    } else {\n                        m.rotate(t[1], t[2], t[3]);\n                    }\n                }\n            } else if (command == \"s\") {\n                if (tlen == 2 || tlen == 3) {\n                    bb = bb || bbox;\n                    m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.scale(t[1], t[1], x2, y2);\n                    } else {\n                        m.scale(t[1], t[1], t[2], t[3]);\n                    }\n                } else if (tlen == 5) {\n                    if (absolute) {\n                        x2 = inver.x(t[3], t[4]);\n                        y2 = inver.y(t[3], t[4]);\n                        m.scale(t[1], t[2], x2, y2);\n                    } else {\n                        m.scale(t[1], t[2], t[3], t[4]);\n                    }\n                }\n            } else if (command == \"m\" && tlen == 7) {\n                m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n            }\n        }\n    }\n    return m;\n}\nSnap._.transform2matrix = transform2matrix;\nSnap._unit2px = unit2px;\nvar contains = glob.doc.contains || glob.doc.compareDocumentPosition ?\n    function (a, b) {\n        var adown = a.nodeType == 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n            return a == bup || !!(bup && bup.nodeType == 1 && (\n                adown.contains ?\n                    adown.contains(bup) :\n                    a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16\n            ));\n    } :\n    function (a, b) {\n        if (b) {\n            while (b) {\n                b = b.parentNode;\n                if (b == a) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\nfunction getSomeDefs(el) {\n    var p = el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) ||\n            el.node.parentNode && wrap(el.node.parentNode) ||\n            Snap.select(\"svg\") ||\n            Snap(0, 0),\n        pdefs = p.select(\"defs\"),\n        defs  = pdefs == null ? false : pdefs.node;\n    if (!defs) {\n        defs = make(\"defs\", p.node).node;\n    }\n    return defs;\n}\nfunction getSomeSVG(el) {\n    return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n}\nSnap._.getSomeDefs = getSomeDefs;\nSnap._.getSomeSVG = getSomeSVG;\nfunction unit2px(el, name, value) {\n    var svg = getSomeSVG(el).node,\n        out = {},\n        mgr = svg.querySelector(\".svg---mgr\");\n    if (!mgr) {\n        mgr = $(\"rect\");\n        $(mgr, {x: -9e9, y: -9e9, width: 10, height: 10, \"class\": \"svg---mgr\", fill: \"none\"});\n        svg.appendChild(mgr);\n    }\n    function getW(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {width: val});\n        try {\n            return mgr.getBBox().width;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function getH(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {height: val});\n        try {\n            return mgr.getBBox().height;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function set(nam, f) {\n        if (name == null) {\n            out[nam] = f(el.attr(nam) || 0);\n        } else if (nam == name) {\n            out = f(value == null ? el.attr(nam) || 0 : value);\n        }\n    }\n    switch (el.type) {\n        case \"rect\":\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        case \"image\":\n            set(\"width\", getW);\n            set(\"height\", getH);\n        case \"text\":\n            set(\"x\", getW);\n            set(\"y\", getH);\n        break;\n        case \"circle\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"r\", getW);\n        break;\n        case \"ellipse\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        break;\n        case \"line\":\n            set(\"x1\", getW);\n            set(\"x2\", getW);\n            set(\"y1\", getH);\n            set(\"y2\", getH);\n        break;\n        case \"marker\":\n            set(\"refX\", getW);\n            set(\"markerWidth\", getW);\n            set(\"refY\", getH);\n            set(\"markerHeight\", getH);\n        break;\n        case \"radialGradient\":\n            set(\"fx\", getW);\n            set(\"fy\", getH);\n        break;\n        case \"tspan\":\n            set(\"dx\", getW);\n            set(\"dy\", getH);\n        break;\n        default:\n            set(name, getW);\n    }\n    svg.removeChild(mgr);\n    return out;\n}\n/*\\\n * Snap.select\n [ method ]\n **\n * Wraps a DOM element specified by CSS selector as @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.select = function (query) {\n    query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n    return wrap(glob.doc.querySelector(query));\n};\n/*\\\n * Snap.selectAll\n [ method ]\n **\n * Wraps DOM elements specified by CSS selector as set or array of @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.selectAll = function (query) {\n    var nodelist = glob.doc.querySelectorAll(query),\n        set = (Snap.set || Array)();\n    for (var i = 0; i < nodelist.length; i++) {\n        set.push(wrap(nodelist[i]));\n    }\n    return set;\n};\n\nfunction add2group(list) {\n    if (!is(list, \"array\")) {\n        list = Array.prototype.slice.call(arguments, 0);\n    }\n    var i = 0,\n        j = 0,\n        node = this.node;\n    while (this[i]) delete this[i++];\n    for (i = 0; i < list.length; i++) {\n        if (list[i].type == \"set\") {\n            list[i].forEach(function (el) {\n                node.appendChild(el.node);\n            });\n        } else {\n            node.appendChild(list[i].node);\n        }\n    }\n    var children = node.childNodes;\n    for (i = 0; i < children.length; i++) {\n        this[j++] = wrap(children[i]);\n    }\n    return this;\n}\n// Hub garbage collector every 10s\nsetInterval(function () {\n    for (var key in hub) if (hub[has](key)) {\n        var el = hub[key],\n            node = el.node;\n        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n            delete hub[key];\n        }\n    }\n}, 1e4);\nfunction Element(el) {\n    if (el.snap in hub) {\n        return hub[el.snap];\n    }\n    var svg;\n    try {\n        svg = el.ownerSVGElement;\n    } catch(e) {}\n    /*\\\n     * Element.node\n     [ property (object) ]\n     **\n     * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n     > Usage\n     | // draw a circle at coordinate 10,10 with radius of 10\n     | var c = paper.circle(10, 10, 10);\n     | c.node.onclick = function () {\n     |     c.attr(\"fill\", \"red\");\n     | };\n    \\*/\n    this.node = el;\n    if (svg) {\n        this.paper = new Paper(svg);\n    }\n    /*\\\n     * Element.type\n     [ property (string) ]\n     **\n     * SVG tag name of the given element.\n    \\*/\n    this.type = el.tagName || el.nodeName;\n    var id = this.id = ID(this);\n    this.anims = {};\n    this._ = {\n        transform: []\n    };\n    el.snap = id;\n    hub[id] = this;\n    if (this.type == \"g\") {\n        this.add = add2group;\n    }\n    if (this.type in {g: 1, mask: 1, pattern: 1, symbol: 1}) {\n        for (var method in Paper.prototype) if (Paper.prototype[has](method)) {\n            this[method] = Paper.prototype[method];\n        }\n    }\n}\n   /*\\\n     * Element.attr\n     [ method ]\n     **\n     * Gets or sets given attributes of the element.\n     **\n     - params (object) contains key-value pairs of attributes you want to set\n     * or\n     - param (string) name of the attribute\n     = (Element) the current element\n     * or\n     = (string) value of attribute\n     > Usage\n     | el.attr({\n     |     fill: \"#fc0\",\n     |     stroke: \"#000\",\n     |     strokeWidth: 2, // CamelCase...\n     |     \"fill-opacity\": 0.5, // or dash-separated names\n     |     width: \"*=2\" // prefixed values\n     | });\n     | console.log(el.attr(\"fill\")); // #fc0\n     * Prefixed values in format `\"+=10\"` supported. All four operations\n     * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n     * and `-`: `\"+=2em\"`.\n    \\*/\n    Element.prototype.attr = function (params, value) {\n        var el = this,\n            node = el.node;\n        if (!params) {\n            if (node.nodeType != 1) {\n                return {\n                    text: node.nodeValue\n                };\n            }\n            var attr = node.attributes,\n                out = {};\n            for (var i = 0, ii = attr.length; i < ii; i++) {\n                out[attr[i].nodeName] = attr[i].nodeValue;\n            }\n            return out;\n        }\n        if (is(params, \"string\")) {\n            if (arguments.length > 1) {\n                var json = {};\n                json[params] = value;\n                params = json;\n            } else {\n                return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n            }\n        }\n        for (var att in params) {\n            if (params[has](att)) {\n                eve(\"snap.util.attr.\" + att, el, params[att]);\n            }\n        }\n        return el;\n    };\n/*\\\n * Snap.parse\n [ method ]\n **\n * Parses SVG fragment and converts it into a @Fragment\n **\n - svg (string) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.parse = function (svg) {\n    var f = glob.doc.createDocumentFragment(),\n        full = true,\n        div = glob.doc.createElement(\"div\");\n    svg = Str(svg);\n    if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n        svg = \"<svg>\" + svg + \"</svg>\";\n        full = false;\n    }\n    div.innerHTML = svg;\n    svg = div.getElementsByTagName(\"svg\")[0];\n    if (svg) {\n        if (full) {\n            f = svg;\n        } else {\n            while (svg.firstChild) {\n                f.appendChild(svg.firstChild);\n            }\n        }\n    }\n    return new Fragment(f);\n};\nfunction Fragment(frag) {\n    this.node = frag;\n}\n/*\\\n * Snap.fragment\n [ method ]\n **\n * Creates a DOM fragment from a given list of elements or strings\n **\n - varargs (…) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.fragment = function () {\n    var args = Array.prototype.slice.call(arguments, 0),\n        f = glob.doc.createDocumentFragment();\n    for (var i = 0, ii = args.length; i < ii; i++) {\n        var item = args[i];\n        if (item.node && item.node.nodeType) {\n            f.appendChild(item.node);\n        }\n        if (item.nodeType) {\n            f.appendChild(item);\n        }\n        if (typeof item == \"string\") {\n            f.appendChild(Snap.parse(item).node);\n        }\n    }\n    return new Fragment(f);\n};\n\nfunction make(name, parent) {\n    var res = $(name);\n    parent.appendChild(res);\n    var el = wrap(res);\n    return el;\n}\nfunction Paper(w, h) {\n    var res,\n        desc,\n        defs,\n        proto = Paper.prototype;\n    if (w && w.tagName && w.tagName.toLowerCase() == \"svg\") {\n        if (w.snap in hub) {\n            return hub[w.snap];\n        }\n        var doc = w.ownerDocument;\n        res = new Element(w);\n        desc = w.getElementsByTagName(\"desc\")[0];\n        defs = w.getElementsByTagName(\"defs\")[0];\n        if (!desc) {\n            desc = $(\"desc\");\n            desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n            res.node.appendChild(desc);\n        }\n        if (!defs) {\n            defs = $(\"defs\");\n            res.node.appendChild(defs);\n        }\n        res.defs = defs;\n        for (var key in proto) if (proto[has](key)) {\n            res[key] = proto[key];\n        }\n        res.paper = res.root = res;\n    } else {\n        res = make(\"svg\", glob.doc.body);\n        $(res.node, {\n            height: h,\n            version: 1.1,\n            width: w,\n            xmlns: xmlns\n        });\n    }\n    return res;\n}\nfunction wrap(dom) {\n    if (!dom) {\n        return dom;\n    }\n    if (dom instanceof Element || dom instanceof Fragment) {\n        return dom;\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n        return new Paper(dom);\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n        return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n    }\n    return new Element(dom);\n}\n\nSnap._.make = make;\nSnap._.wrap = wrap;\n/*\\\n * Paper.el\n [ method ]\n **\n * Creates an element on paper with a given name and no attributes\n **\n - name (string) tag name\n - attr (object) attributes\n = (Element) the current element\n > Usage\n | var c = paper.circle(10, 10, 10); // is the same as...\n | var c = paper.el(\"circle\").attr({\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n | // and the same as\n | var c = paper.el(\"circle\", {\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n\\*/\nPaper.prototype.el = function (name, attr) {\n    var el = make(name, this.node);\n    attr && el.attr(attr);\n    return el;\n};\n/*\\\n * Element.children\n [ method ]\n **\n * Returns array of all the children of the element.\n = (array) array of Elements\n\\*/\nElement.prototype.children = function () {\n    var out = [],\n        ch = this.node.childNodes;\n    for (var i = 0, ii = ch.length; i < ii; i++) {\n        out[i] = Snap(ch[i]);\n    }\n    return out;\n};\nfunction jsonFiller(root, o) {\n    for (var i = 0, ii = root.length; i < ii; i++) {\n        var item = {\n                type: root[i].type,\n                attr: root[i].attr()\n            },\n            children = root[i].children();\n        o.push(item);\n        if (children.length) {\n            jsonFiller(children, item.childNodes = []);\n        }\n    }\n}\n/*\\\n * Element.toJSON\n [ method ]\n **\n * Returns object representation of the given element and all its children.\n = (object) in format\n o {\n o     type (string) this.type,\n o     attr (object) attributes map,\n o     childNodes (array) optional array of children in the same format\n o }\n\\*/\nElement.prototype.toJSON = function () {\n    var out = [];\n    jsonFiller([this], out);\n    return out[0];\n};\n// default\neve.on(\"snap.util.getattr\", function () {\n    var att = eve.nt();\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    var css = att.replace(/[A-Z]/g, function (letter) {\n        return \"-\" + letter.toLowerCase();\n    });\n    if (cssAttr[has](css)) {\n        return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n    } else {\n        return $(this.node, att);\n    }\n});\nvar cssAttr = {\n    \"alignment-baseline\": 0,\n    \"baseline-shift\": 0,\n    \"clip\": 0,\n    \"clip-path\": 0,\n    \"clip-rule\": 0,\n    \"color\": 0,\n    \"color-interpolation\": 0,\n    \"color-interpolation-filters\": 0,\n    \"color-profile\": 0,\n    \"color-rendering\": 0,\n    \"cursor\": 0,\n    \"direction\": 0,\n    \"display\": 0,\n    \"dominant-baseline\": 0,\n    \"enable-background\": 0,\n    \"fill\": 0,\n    \"fill-opacity\": 0,\n    \"fill-rule\": 0,\n    \"filter\": 0,\n    \"flood-color\": 0,\n    \"flood-opacity\": 0,\n    \"font\": 0,\n    \"font-family\": 0,\n    \"font-size\": 0,\n    \"font-size-adjust\": 0,\n    \"font-stretch\": 0,\n    \"font-style\": 0,\n    \"font-variant\": 0,\n    \"font-weight\": 0,\n    \"glyph-orientation-horizontal\": 0,\n    \"glyph-orientation-vertical\": 0,\n    \"image-rendering\": 0,\n    \"kerning\": 0,\n    \"letter-spacing\": 0,\n    \"lighting-color\": 0,\n    \"marker\": 0,\n    \"marker-end\": 0,\n    \"marker-mid\": 0,\n    \"marker-start\": 0,\n    \"mask\": 0,\n    \"opacity\": 0,\n    \"overflow\": 0,\n    \"pointer-events\": 0,\n    \"shape-rendering\": 0,\n    \"stop-color\": 0,\n    \"stop-opacity\": 0,\n    \"stroke\": 0,\n    \"stroke-dasharray\": 0,\n    \"stroke-dashoffset\": 0,\n    \"stroke-linecap\": 0,\n    \"stroke-linejoin\": 0,\n    \"stroke-miterlimit\": 0,\n    \"stroke-opacity\": 0,\n    \"stroke-width\": 0,\n    \"text-anchor\": 0,\n    \"text-decoration\": 0,\n    \"text-rendering\": 0,\n    \"unicode-bidi\": 0,\n    \"visibility\": 0,\n    \"word-spacing\": 0,\n    \"writing-mode\": 0\n};\n\neve.on(\"snap.util.attr\", function (value) {\n    var att = eve.nt(),\n        attr = {};\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    attr[att] = value;\n    var style = att.replace(/-(\\w)/gi, function (all, letter) {\n            return letter.toUpperCase();\n        }),\n        css = att.replace(/[A-Z]/g, function (letter) {\n            return \"-\" + letter.toLowerCase();\n        });\n    if (cssAttr[has](css)) {\n        this.node.style[style] = value == null ? E : value;\n    } else {\n        $(this.node, attr);\n    }\n});\n(function (proto) {}(Paper.prototype));\n\n// simple ajax\n/*\\\n * Snap.ajax\n [ method ]\n **\n * Simple implementation of Ajax\n **\n - url (string) URL\n - postData (object|string) data for post request\n - callback (function) callback\n - scope (object) #optional scope of callback\n * or\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n = (XMLHttpRequest) the XMLHttpRequest object, just in case\n\\*/\nSnap.ajax = function (url, postData, callback, scope){\n    var req = new XMLHttpRequest,\n        id = ID();\n    if (req) {\n        if (is(postData, \"function\")) {\n            scope = callback;\n            callback = postData;\n            postData = null;\n        } else if (is(postData, \"object\")) {\n            var pd = [];\n            for (var key in postData) if (postData.hasOwnProperty(key)) {\n                pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n            }\n            postData = pd.join(\"&\");\n        }\n        req.open(postData ? \"POST\" : \"GET\", url, true);\n        if (postData) {\n            req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        }\n        if (callback) {\n            eve.once(\"snap.ajax.\" + id + \".0\", callback);\n            eve.once(\"snap.ajax.\" + id + \".200\", callback);\n            eve.once(\"snap.ajax.\" + id + \".304\", callback);\n        }\n        req.onreadystatechange = function() {\n            if (req.readyState != 4) return;\n            eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n        };\n        if (req.readyState == 4) {\n            return req;\n        }\n        req.send(postData);\n        return req;\n    }\n};\n/*\\\n * Snap.load\n [ method ]\n **\n * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n **\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n\\*/\nSnap.load = function (url, callback, scope) {\n    Snap.ajax(url, function (req) {\n        var f = Snap.parse(req.responseText);\n        scope ? callback.call(scope, f) : callback(f);\n    });\n};\nvar getOffset = function (elem) {\n    var box = elem.getBoundingClientRect(),\n        doc = elem.ownerDocument,\n        body = doc.body,\n        docElem = doc.documentElement,\n        clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n        top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n    return {\n        y: top,\n        x: left\n    };\n};\n/*\\\n * Snap.getElementByPoint\n [ method ]\n **\n * Returns you topmost element under given point.\n **\n = (object) Snap element object\n - x (number) x coordinate from the top left corner of the window\n - y (number) y coordinate from the top left corner of the window\n > Usage\n | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n\\*/\nSnap.getElementByPoint = function (x, y) {\n    var paper = this,\n        svg = paper.canvas,\n        target = glob.doc.elementFromPoint(x, y);\n    if (glob.win.opera && target.tagName == \"svg\") {\n        var so = getOffset(target),\n            sr = target.createSVGRect();\n        sr.x = x - so.x;\n        sr.y = y - so.y;\n        sr.width = sr.height = 1;\n        var hits = target.getIntersectionList(sr, null);\n        if (hits.length) {\n            target = hits[hits.length - 1];\n        }\n    }\n    if (!target) {\n        return null;\n    }\n    return wrap(target);\n};\n/*\\\n * Snap.plugin\n [ method ]\n **\n * Let you write plugins. You pass in a function with five arguments, like this:\n | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n |     Snap.newmethod = function () {};\n |     Element.prototype.newmethod = function () {};\n |     Paper.prototype.newmethod = function () {};\n | });\n * Inside the function you have access to all main objects (and their\n * prototypes). This allow you to extend anything you want.\n **\n - f (function) your plugin body\n\\*/\nSnap.plugin = function (f) {\n    f(Snap, Element, Paper, glob, Fragment);\n};\nglob.win.Snap = Snap;\nreturn Snap;\n}(window || this));\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        unit2px = Snap._unit2px,\n        $ = Snap._.$,\n        make = Snap._.make,\n        getSomeDefs = Snap._.getSomeDefs,\n        has = \"hasOwnProperty\",\n        wrap = Snap._.wrap;\n    /*\\\n     * Element.getBBox\n     [ method ]\n     **\n     * Returns the bounding box descriptor for the given element\n     **\n     = (object) bounding box descriptor:\n     o {\n     o     cx: (number) x of the center,\n     o     cy: (number) x of the center,\n     o     h: (number) height,\n     o     height: (number) height,\n     o     path: (string) path command for the box,\n     o     r0: (number) radius of a circle that fully encloses the box,\n     o     r1: (number) radius of the smallest circle that can be enclosed,\n     o     r2: (number) radius of the largest circle that can be enclosed,\n     o     vb: (string) box as a viewbox command,\n     o     w: (number) width,\n     o     width: (number) width,\n     o     x2: (number) x of the right side,\n     o     x: (number) x of the left side,\n     o     y2: (number) y of the bottom edge,\n     o     y: (number) y of the top edge\n     o }\n    \\*/\n    elproto.getBBox = function (isWithoutTransform) {\n        if (this.type == \"tspan\") {\n            return Snap._.box(this.node.getClientRects().item(0));\n        }\n        if (!Snap.Matrix || !Snap.path) {\n            return this.node.getBBox();\n        }\n        var el = this,\n            m = new Snap.Matrix;\n        if (el.removed) {\n            return Snap._.box();\n        }\n        while (el.type == \"use\") {\n            if (!isWithoutTransform) {\n                m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n            }\n            if (el.original) {\n                el = el.original;\n            } else {\n                var href = el.attr(\"xlink:href\");\n                el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n            }\n        }\n        var _ = el._,\n            pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n        try {\n            if (isWithoutTransform) {\n                _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n                return Snap._.box(_.bboxwt);\n            } else {\n                el.realPath = pathfinder(el);\n                el.matrix = el.transform().localMatrix;\n                _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n                return Snap._.box(_.bbox);\n            }\n        } catch (e) {\n            // Firefox doesn’t give you bbox of hidden element\n            return Snap._.box();\n        }\n    };\n    var propString = function () {\n        return this.string;\n    };\n    function extractTransform(el, tstr) {\n        if (tstr == null) {\n            var doReturn = true;\n            if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n                tstr = el.node.getAttribute(\"gradientTransform\");\n            } else if (el.type == \"pattern\") {\n                tstr = el.node.getAttribute(\"patternTransform\");\n            } else {\n                tstr = el.node.getAttribute(\"transform\");\n            }\n            if (!tstr) {\n                return new Snap.Matrix;\n            }\n            tstr = Snap._.svgTransform2string(tstr);\n        } else {\n            if (!Snap._.rgTransform.test(tstr)) {\n                tstr = Snap._.svgTransform2string(tstr);\n            } else {\n                tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || \"\");\n            }\n            if (is(tstr, \"array\")) {\n                tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n            }\n            el._.transform = tstr;\n        }\n        var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n        if (doReturn) {\n            return m;\n        } else {\n            el.matrix = m;\n        }\n    }\n    /*\\\n     * Element.transform\n     [ method ]\n     **\n     * Gets or sets transformation of the element\n     **\n     - tstr (string) transform string in Snap or SVG format\n     = (Element) the current element\n     * or\n     = (object) transformation descriptor:\n     o {\n     o     string (string) transform string,\n     o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n     o     localMatrix (Matrix) matrix of transformations applied only to the element,\n     o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n     o     global (string) global transformation as string,\n     o     local (string) local transformation as string,\n     o     toString (function) returns `string` property\n     o }\n    \\*/\n    elproto.transform = function (tstr) {\n        var _ = this._;\n        if (tstr == null) {\n            var papa = this,\n                global = new Snap.Matrix(this.node.getCTM()),\n                local = extractTransform(this),\n                ms = [local],\n                m = new Snap.Matrix,\n                i,\n                localString = local.toTransformString(),\n                string = Str(local) == Str(this.matrix) ?\n                            Str(_.transform) : localString;\n            while (papa.type != \"svg\" && (papa = papa.parent())) {\n                ms.push(extractTransform(papa));\n            }\n            i = ms.length;\n            while (i--) {\n                m.add(ms[i]);\n            }\n            return {\n                string: string,\n                globalMatrix: global,\n                totalMatrix: m,\n                localMatrix: local,\n                diffMatrix: global.clone().add(local.invert()),\n                global: global.toTransformString(),\n                total: m.toTransformString(),\n                local: localString,\n                toString: propString\n            };\n        }\n        if (tstr instanceof Snap.Matrix) {\n            this.matrix = tstr;\n            this._.transform = tstr.toTransformString();\n        } else {\n            extractTransform(this, tstr);\n        }\n\n        if (this.node) {\n            if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n                $(this.node, {gradientTransform: this.matrix});\n            } else if (this.type == \"pattern\") {\n                $(this.node, {patternTransform: this.matrix});\n            } else {\n                $(this.node, {transform: this.matrix});\n            }\n        }\n\n        return this;\n    };\n    /*\\\n     * Element.parent\n     [ method ]\n     **\n     * Returns the element's parent\n     **\n     = (Element) the parent element\n    \\*/\n    elproto.parent = function () {\n        return wrap(this.node.parentNode);\n    };\n    /*\\\n     * Element.append\n     [ method ]\n     **\n     * Appends the given element to current one\n     **\n     - el (Element|Set) element to append\n     = (Element) the parent element\n    \\*/\n    /*\\\n     * Element.add\n     [ method ]\n     **\n     * See @Element.append\n    \\*/\n    elproto.append = elproto.add = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this;\n                el.forEach(function (el) {\n                    it.add(el);\n                });\n                return this;\n            }\n            el = wrap(el);\n            this.node.appendChild(el.node);\n            el.paper = this.paper;\n        }\n        return this;\n    };\n    /*\\\n     * Element.appendTo\n     [ method ]\n     **\n     * Appends the current element to the given one\n     **\n     - el (Element) parent element to append to\n     = (Element) the child element\n    \\*/\n    elproto.appendTo = function (el) {\n        if (el) {\n            el = wrap(el);\n            el.append(this);\n        }\n        return this;\n    };\n    /*\\\n     * Element.prepend\n     [ method ]\n     **\n     * Prepends the given element to the current one\n     **\n     - el (Element) element to prepend\n     = (Element) the parent element\n    \\*/\n    elproto.prepend = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this,\n                    first;\n                el.forEach(function (el) {\n                    if (first) {\n                        first.after(el);\n                    } else {\n                        it.prepend(el);\n                    }\n                    first = el;\n                });\n                return this;\n            }\n            el = wrap(el);\n            var parent = el.parent();\n            this.node.insertBefore(el.node, this.node.firstChild);\n            this.add && this.add();\n            el.paper = this.paper;\n            this.parent() && this.parent().add();\n            parent && parent.add();\n        }\n        return this;\n    };\n    /*\\\n     * Element.prependTo\n     [ method ]\n     **\n     * Prepends the current element to the given one\n     **\n     - el (Element) parent element to prepend to\n     = (Element) the child element\n    \\*/\n    elproto.prependTo = function (el) {\n        el = wrap(el);\n        el.prepend(this);\n        return this;\n    };\n    /*\\\n     * Element.before\n     [ method ]\n     **\n     * Inserts given element before the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.before = function (el) {\n        if (el.type == \"set\") {\n            var it = this;\n            el.forEach(function (el) {\n                var parent = el.parent();\n                it.node.parentNode.insertBefore(el.node, it.node);\n                parent && parent.add();\n            });\n            this.parent().add();\n            return this;\n        }\n        el = wrap(el);\n        var parent = el.parent();\n        this.node.parentNode.insertBefore(el.node, this.node);\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.after\n     [ method ]\n     **\n     * Inserts given element after the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.after = function (el) {\n        el = wrap(el);\n        var parent = el.parent();\n        if (this.node.nextSibling) {\n            this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n        } else {\n            this.node.parentNode.appendChild(el.node);\n        }\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.insertBefore\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertBefore = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.insertAfter\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertAfter = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.remove\n     [ method ]\n     **\n     * Removes element from the DOM\n     = (Element) the detached element\n    \\*/\n    elproto.remove = function () {\n        var parent = this.parent();\n        this.node.parentNode && this.node.parentNode.removeChild(this.node);\n        delete this.paper;\n        this.removed = true;\n        parent && parent.add();\n        return this;\n    };\n    /*\\\n     * Element.select\n     [ method ]\n     **\n     * Gathers the nested @Element matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Element) result of query selection\n    \\*/\n    elproto.select = function (query) {\n        return wrap(this.node.querySelector(query));\n    };\n    /*\\\n     * Element.selectAll\n     [ method ]\n     **\n     * Gathers nested @Element objects matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Set|array) result of query selection\n    \\*/\n    elproto.selectAll = function (query) {\n        var nodelist = this.node.querySelectorAll(query),\n            set = (Snap.set || Array)();\n        for (var i = 0; i < nodelist.length; i++) {\n            set.push(wrap(nodelist[i]));\n        }\n        return set;\n    };\n    /*\\\n     * Element.asPX\n     [ method ]\n     **\n     * Returns given attribute of the element as a `px` value (not %, em, etc.)\n     **\n     - attr (string) attribute name\n     - value (string) #optional attribute value\n     = (Element) result of query selection\n    \\*/\n    elproto.asPX = function (attr, value) {\n        if (value == null) {\n            value = this.attr(attr);\n        }\n        return +unit2px(this, attr, value);\n    };\n    // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n    /*\\\n     * Element.use\n     [ method ]\n     **\n     * Creates a `<use>` element linked to the current element\n     **\n     = (Element) the `<use>` element\n    \\*/\n    elproto.use = function () {\n        var use,\n            id = this.node.id;\n        if (!id) {\n            id = this.id;\n            $(this.node, {\n                id: id\n            });\n        }\n        if (this.type == \"linearGradient\" || this.type == \"radialGradient\" ||\n            this.type == \"pattern\") {\n            use = make(this.type, this.node.parentNode);\n        } else {\n            use = make(\"use\", this.node.parentNode);\n        }\n        $(use.node, {\n            \"xlink:href\": \"#\" + id\n        });\n        use.original = this;\n        return use;\n    };\n    function fixids(el) {\n        var els = el.selectAll(\"*\"),\n            it,\n            url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n            ids = [],\n            uses = {};\n        function urltest(it, name) {\n            var val = $(it.node, name);\n            val = val && val.match(url);\n            val = val && val[2];\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    var attr = {};\n                    attr[name] = Snap.url(id);\n                    $(it.node, attr);\n                });\n            }\n        }\n        function linktest(it) {\n            var val = $(it.node, \"xlink:href\");\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    it.attr(\"xlink:href\", \"#\" + id);\n                });\n            }\n        }\n        for (var i = 0, ii = els.length; i < ii; i++) {\n            it = els[i];\n            urltest(it, \"fill\");\n            urltest(it, \"stroke\");\n            urltest(it, \"filter\");\n            urltest(it, \"mask\");\n            urltest(it, \"clip-path\");\n            linktest(it);\n            var oldid = $(it.node, \"id\");\n            if (oldid) {\n                $(it.node, {id: it.id});\n                ids.push({\n                    old: oldid,\n                    id: it.id\n                });\n            }\n        }\n        for (i = 0, ii = ids.length; i < ii; i++) {\n            var fs = uses[ids[i].old];\n            if (fs) {\n                for (var j = 0, jj = fs.length; j < jj; j++) {\n                    fs[j](ids[i].id);\n                }\n            }\n        }\n    }\n    /*\\\n     * Element.clone\n     [ method ]\n     **\n     * Creates a clone of the element and inserts it after the element\n     **\n     = (Element) the clone\n    \\*/\n    elproto.clone = function () {\n        var clone = wrap(this.node.cloneNode(true));\n        if ($(clone.node, \"id\")) {\n            $(clone.node, {id: clone.id});\n        }\n        fixids(clone);\n        clone.insertAfter(this);\n        return clone;\n    };\n    /*\\\n     * Element.toDefs\n     [ method ]\n     **\n     * Moves element to the shared `<defs>` area\n     **\n     = (Element) the element\n    \\*/\n    elproto.toDefs = function () {\n        var defs = getSomeDefs(this);\n        defs.appendChild(this.node);\n        return this;\n    };\n    /*\\\n     * Element.toPattern\n     [ method ]\n     **\n     * Creates a `<pattern>` element from the current element\n     **\n     * To create a pattern you have to specify the pattern rect:\n     - x (string|number)\n     - y (string|number)\n     - width (string|number)\n     - height (string|number)\n     = (Element) the `<pattern>` element\n     * You can use pattern later on as an argument for `fill` attribute:\n     | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n     |         fill: \"none\",\n     |         stroke: \"#bada55\",\n     |         strokeWidth: 5\n     |     }).pattern(0, 0, 10, 10),\n     |     c = paper.circle(200, 200, 100);\n     | c.attr({\n     |     fill: p\n     | });\n    \\*/\n    elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n        var p = make(\"pattern\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        $(p.node, {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            patternUnits: \"userSpaceOnUse\",\n            id: p.id,\n            viewBox: [x, y, width, height].join(\" \")\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n// SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n// SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n    /*\\\n     * Element.marker\n     [ method ]\n     **\n     * Creates a `<marker>` element from the current element\n     **\n     * To create a marker you have to specify the bounding rect and reference point:\n     - x (number)\n     - y (number)\n     - width (number)\n     - height (number)\n     - refX (number)\n     - refY (number)\n     = (Element) the `<marker>` element\n     * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n    \\*/\n    // TODO add usage for markers\n    elproto.marker = function (x, y, width, height, refX, refY) {\n        var p = make(\"marker\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            refX = x.refX || x.cx;\n            refY = x.refY || x.cy;\n            x = x.x;\n        }\n        $(p.node, {\n            viewBox: [x, y, width, height].join(\" \"),\n            markerWidth: width,\n            markerHeight: height,\n            orient: \"auto\",\n            refX: refX || 0,\n            refY: refY || 0,\n            id: p.id\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n    var eldata = {};\n    /*\\\n     * Element.data\n     [ method ]\n     **\n     * Adds or retrieves given value associated with given key. (Don’t confuse\n     * with `data-` attributes)\n     *\n     * See also @Element.removeData\n     - key (string) key to store data\n     - value (any) #optional value to store\n     = (object) @Element\n     * or, if value is not specified:\n     = (any) value\n     > Usage\n     | for (var i = 0, i < 5, i++) {\n     |     paper.circle(10 + 15 * i, 10, 10)\n     |          .attr({fill: \"#000\"})\n     |          .data(\"i\", i)\n     |          .click(function () {\n     |             alert(this.data(\"i\"));\n     |          });\n     | }\n    \\*/\n    elproto.data = function (key, value) {\n        var data = eldata[this.id] = eldata[this.id] || {};\n        if (arguments.length == 0){\n            eve(\"snap.data.get.\" + this.id, this, data, null);\n            return data;\n        }\n        if (arguments.length == 1) {\n            if (Snap.is(key, \"object\")) {\n                for (var i in key) if (key[has](i)) {\n                    this.data(i, key[i]);\n                }\n                return this;\n            }\n            eve(\"snap.data.get.\" + this.id, this, data[key], key);\n            return data[key];\n        }\n        data[key] = value;\n        eve(\"snap.data.set.\" + this.id, this, value, key);\n        return this;\n    };\n    /*\\\n     * Element.removeData\n     [ method ]\n     **\n     * Removes value associated with an element by given key.\n     * If key is not provided, removes all the data of the element.\n     - key (string) #optional key\n     = (object) @Element\n    \\*/\n    elproto.removeData = function (key) {\n        if (key == null) {\n            eldata[this.id] = {};\n        } else {\n            eldata[this.id] && delete eldata[this.id][key];\n        }\n        return this;\n    };\n    /*\\\n     * Element.outerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n     *\n     * See also @Element.innerSVG\n     = (string) SVG code for the element\n    \\*/\n    /*\\\n     * Element.toString\n     [ method ]\n     **\n     * See @Element.outerSVG\n    \\*/\n    elproto.outerSVG = elproto.toString = toString(1);\n    /*\\\n     * Element.innerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n     = (string) SVG code for the element\n    \\*/\n    elproto.innerSVG = toString();\n    function toString(type) {\n        return function () {\n            var res = type ? \"<\" + this.type : \"\",\n                attr = this.node.attributes,\n                chld = this.node.childNodes;\n            if (type) {\n                for (var i = 0, ii = attr.length; i < ii; i++) {\n                    res += \" \" + attr[i].name + '=\"' +\n                            attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n                }\n            }\n            if (chld.length) {\n                type && (res += \">\");\n                for (i = 0, ii = chld.length; i < ii; i++) {\n                    if (chld[i].nodeType == 3) {\n                        res += chld[i].nodeValue;\n                    } else if (chld[i].nodeType == 1) {\n                        res += wrap(chld[i]).toString();\n                    }\n                }\n                type && (res += \"</\" + this.type + \">\");\n            } else {\n                type && (res += \"/>\");\n            }\n            return res;\n        };\n    }\n    elproto.toDataURL = function () {\n        if (window && window.btoa) {\n            var bb = this.getBBox(),\n                svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n                x: +bb.x.toFixed(3),\n                y: +bb.y.toFixed(3),\n                width: +bb.width.toFixed(3),\n                height: +bb.height.toFixed(3),\n                contents: this.outerSVG()\n            });\n            return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n        }\n    };\n    /*\\\n     * Fragment.select\n     [ method ]\n     **\n     * See @Element.select\n    \\*/\n    Fragment.prototype.select = elproto.select;\n    /*\\\n     * Fragment.selectAll\n     [ method ]\n     **\n     * See @Element.selectAll\n    \\*/\n    Fragment.prototype.selectAll = elproto.selectAll;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var objectToString = Object.prototype.toString,\n        Str = String,\n        math = Math,\n        E = \"\";\n    function Matrix(a, b, c, d, e, f) {\n        if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n            this.a = a.a;\n            this.b = a.b;\n            this.c = a.c;\n            this.d = a.d;\n            this.e = a.e;\n            this.f = a.f;\n            return;\n        }\n        if (a != null) {\n            this.a = +a;\n            this.b = +b;\n            this.c = +c;\n            this.d = +d;\n            this.e = +e;\n            this.f = +f;\n        } else {\n            this.a = 1;\n            this.b = 0;\n            this.c = 0;\n            this.d = 1;\n            this.e = 0;\n            this.f = 0;\n        }\n    }\n    (function (matrixproto) {\n        /*\\\n         * Matrix.add\n         [ method ]\n         **\n         * Adds the given matrix to existing one\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        matrixproto.add = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.add(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + b * this.c,\n                bNew = a * this.b + b * this.d;\n            this.e += e * this.a + f * this.c;\n            this.f += e * this.b + f * this.d;\n            this.c = c * this.a + d * this.c;\n            this.d = c * this.b + d * this.d;\n\n            this.a = aNew;\n            this.b = bNew;\n            return this;\n        };\n        /*\\\n         * Matrix.multLeft\n         [ method ]\n         **\n         * Multiplies a passed affine transform to the left: M * this.\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        Matrix.prototype.multLeft = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.multLeft(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + c * this.b,\n                cNew = a * this.c + c * this.d,\n                eNew = a * this.e + c * this.f + e;\n            this.b = b * this.a + d * this.b;\n            this.d = b * this.c + d * this.d;\n            this.f = b * this.e + d * this.f + f;\n\n            this.a = aNew;\n            this.c = cNew;\n            this.e = eNew;\n            return this;\n        };\n        /*\\\n         * Matrix.invert\n         [ method ]\n         **\n         * Returns an inverted version of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.invert = function () {\n            var me = this,\n                x = me.a * me.d - me.b * me.c;\n            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n        };\n        /*\\\n         * Matrix.clone\n         [ method ]\n         **\n         * Returns a copy of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.clone = function () {\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n        };\n        /*\\\n         * Matrix.translate\n         [ method ]\n         **\n         * Translate the matrix\n         - x (number) horizontal offset distance\n         - y (number) vertical offset distance\n        \\*/\n        matrixproto.translate = function (x, y) {\n            this.e += x * this.a + y * this.c;\n            this.f += x * this.b + y * this.d;\n            return this;\n        };\n        /*\\\n         * Matrix.scale\n         [ method ]\n         **\n         * Scales the matrix\n         - x (number) amount to be scaled, with `1` resulting in no change\n         - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n         - cx (number) #optional horizontal origin point from which to scale\n         - cy (number) #optional vertical origin point from which to scale\n         * Default cx, cy is the middle point of the element.\n        \\*/\n        matrixproto.scale = function (x, y, cx, cy) {\n            y == null && (y = x);\n            (cx || cy) && this.translate(cx, cy);\n            this.a *= x;\n            this.b *= x;\n            this.c *= y;\n            this.d *= y;\n            (cx || cy) && this.translate(-cx, -cy);\n            return this;\n        };\n        /*\\\n         * Matrix.rotate\n         [ method ]\n         **\n         * Rotates the matrix\n         - a (number) angle of rotation, in degrees\n         - x (number) horizontal origin point from which to rotate\n         - y (number) vertical origin point from which to rotate\n        \\*/\n        matrixproto.rotate = function (a, x, y) {\n            a = Snap.rad(a);\n            x = x || 0;\n            y = y || 0;\n            var cos = +math.cos(a).toFixed(9),\n                sin = +math.sin(a).toFixed(9);\n            this.add(cos, sin, -sin, cos, x, y);\n            return this.add(1, 0, 0, 1, -x, -y);\n        };\n        /*\\\n         * Matrix.skewX\n         [ method ]\n         **\n         * Skews the matrix along the x-axis\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skewX = function (x) {\n            return this.skew(x, 0);\n        };\n        /*\\\n         * Matrix.skewY\n         [ method ]\n         **\n         * Skews the matrix along the y-axis\n         - y (number) Angle to skew along the y-axis (in degrees).\n        \\*/\n        matrixproto.skewY = function (y) {\n            return this.skew(0, y);\n        };\n        /*\\\n         * Matrix.skew\n         [ method ]\n         **\n         * Skews the matrix\n         - y (number) Angle to skew along the y-axis (in degrees).\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skew = function (x, y) {\n            x = x || 0;\n            y = y || 0;\n            x = Snap.rad(x);\n            y = Snap.rad(y);\n            var c = math.tan(x).toFixed(9);\n            var b = math.tan(y).toFixed(9);\n            return this.add(1, b, c, 1, 0, 0);\n        };\n        /*\\\n         * Matrix.x\n         [ method ]\n         **\n         * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n         - x (number)\n         - y (number)\n         = (number) x\n        \\*/\n        matrixproto.x = function (x, y) {\n            return x * this.a + y * this.c + this.e;\n        };\n        /*\\\n         * Matrix.y\n         [ method ]\n         **\n         * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n         - x (number)\n         - y (number)\n         = (number) y\n        \\*/\n        matrixproto.y = function (x, y) {\n            return x * this.b + y * this.d + this.f;\n        };\n        matrixproto.get = function (i) {\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n        };\n        matrixproto.toString = function () {\n            return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n        };\n        matrixproto.offset = function () {\n            return [this.e.toFixed(4), this.f.toFixed(4)];\n        };\n        function norm(a) {\n            return a[0] * a[0] + a[1] * a[1];\n        }\n        function normalize(a) {\n            var mag = math.sqrt(norm(a));\n            a[0] && (a[0] /= mag);\n            a[1] && (a[1] /= mag);\n        }\n        /*\\\n         * Matrix.determinant\n         [ method ]\n         **\n         * Finds determinant of the given matrix.\n         = (number) determinant\n        \\*/\n        matrixproto.determinant = function () {\n            return this.a * this.d - this.b * this.c;\n        };\n        /*\\\n         * Matrix.split\n         [ method ]\n         **\n         * Splits matrix into primitive transformations\n         = (object) in format:\n         o dx (number) translation by x\n         o dy (number) translation by y\n         o scalex (number) scale by x\n         o scaley (number) scale by y\n         o shear (number) shear\n         o rotate (number) rotation in deg\n         o isSimple (boolean) could it be represented via simple transformations\n        \\*/\n        matrixproto.split = function () {\n            var out = {};\n            // translation\n            out.dx = this.e;\n            out.dy = this.f;\n\n            // scale and shear\n            var row = [[this.a, this.b], [this.c, this.d]];\n            out.scalex = math.sqrt(norm(row[0]));\n            normalize(row[0]);\n\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\n            out.scaley = math.sqrt(norm(row[1]));\n            normalize(row[1]);\n            out.shear /= out.scaley;\n\n            if (this.determinant() < 0) {\n                out.scalex = -out.scalex;\n            }\n\n            // rotation\n            var sin = row[0][1],\n                cos = row[1][1];\n            if (cos < 0) {\n                out.rotate = Snap.deg(math.acos(cos));\n                if (sin < 0) {\n                    out.rotate = 360 - out.rotate;\n                }\n            } else {\n                out.rotate = Snap.deg(math.asin(sin));\n            }\n\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n            return out;\n        };\n        /*\\\n         * Matrix.toTransformString\n         [ method ]\n         **\n         * Returns transform string that represents given matrix\n         = (string) transform string\n        \\*/\n        matrixproto.toTransformString = function (shorter) {\n            var s = shorter || this.split();\n            if (!+s.shear.toFixed(9)) {\n                s.scalex = +s.scalex.toFixed(4);\n                s.scaley = +s.scaley.toFixed(4);\n                s.rotate = +s.rotate.toFixed(4);\n                return  (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) +\n                        (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E) +\n                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E);\n            } else {\n                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n            }\n        };\n    })(Matrix.prototype);\n    /*\\\n     * Snap.Matrix\n     [ method ]\n     **\n     * Matrix constructor, extend on your own risk.\n     * To create matrices use @Snap.matrix.\n    \\*/\n    Snap.Matrix = Matrix;\n    /*\\\n     * Snap.matrix\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns a matrix based on the given parameters\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - svgMatrix (SVGMatrix)\n     = (object) @Matrix\n    \\*/\n    Snap.matrix = function (a, b, c, d, e, f) {\n        return new Matrix(a, b, c, d, e, f);\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var has = \"hasOwnProperty\",\n        make = Snap._.make,\n        wrap = Snap._.wrap,\n        is = Snap.is,\n        getSomeDefs = Snap._.getSomeDefs,\n        reURLValue = /^url\\((['\"]?)([^)]+)\\1\\)$/,\n        $ = Snap._.$,\n        URL = Snap.url,\n        Str = String,\n        separator = Snap._.separator,\n        E = \"\";\n    /*\\\n     * Snap.deurl\n     [ method ]\n     **\n     * Unwraps path from `\"url(<path>)\"`.\n     - value (string) url path\n     = (string) unwrapped path\n    \\*/\n    Snap.deurl = function (value) {\n        var res = String(value).match(reURLValue);\n        return res ? res[2] : value;\n    }\n    // Attributes event handlers\n    eve.on(\"snap.util.attr.mask\", function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value.type == \"mask\") {\n                var mask = value;\n            } else {\n                mask = make(\"mask\", getSomeDefs(this));\n                mask.node.appendChild(value.node);\n            }\n            !mask.node.id && $(mask.node, {\n                id: mask.id\n            });\n            $(this.node, {\n                mask: URL(mask.id)\n            });\n        }\n    });\n    (function (clipIt) {\n        eve.on(\"snap.util.attr.clip\", clipIt);\n        eve.on(\"snap.util.attr.clip-path\", clipIt);\n        eve.on(\"snap.util.attr.clipPath\", clipIt);\n    }(function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            var clip,\n                node = value.node;\n            while (node) {\n                if (node.nodeName === \"clipPath\") {\n                    clip = new Element(node);\n                    break;\n                }\n                if (node.nodeName === \"svg\") {\n                    clip = undefined;\n                    break;\n                }\n                node = node.parentNode;\n            }\n            if (!clip) {\n                clip = make(\"clipPath\", getSomeDefs(this));\n                clip.node.appendChild(value.node);\n                !clip.node.id && $(clip.node, {\n                    id: clip.id\n                });\n            }\n            $(this.node, {\n                \"clip-path\": URL(clip.node.id || clip.id)\n            });\n        }\n    }));\n    function fillStroke(name) {\n        return function (value) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1 &&\n                (value.node.firstChild.tagName == \"radialGradient\" ||\n                value.node.firstChild.tagName == \"linearGradient\" ||\n                value.node.firstChild.tagName == \"pattern\")) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value instanceof Element) {\n                if (value.type == \"radialGradient\" || value.type == \"linearGradient\"\n                   || value.type == \"pattern\") {\n                    if (!value.node.id) {\n                        $(value.node, {\n                            id: value.id\n                        });\n                    }\n                    var fill = URL(value.node.id);\n                } else {\n                    fill = value.attr(name);\n                }\n            } else {\n                fill = Snap.color(value);\n                if (fill.error) {\n                    var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n                    if (grad) {\n                        if (!grad.node.id) {\n                            $(grad.node, {\n                                id: grad.id\n                            });\n                        }\n                        fill = URL(grad.node.id);\n                    } else {\n                        fill = value;\n                    }\n                } else {\n                    fill = Str(fill);\n                }\n            }\n            var attrs = {};\n            attrs[name] = fill;\n            $(this.node, attrs);\n            this.node.style[name] = E;\n        };\n    }\n    eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n    eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n    var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n    eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n        string = Str(string);\n        var tokens = string.match(gradrg);\n        if (!tokens) {\n            return null;\n        }\n        var type = tokens[1],\n            params = tokens[2],\n            stops = tokens[3];\n        params = params.split(/\\s*,\\s*/).map(function (el) {\n            return +el == el ? +el : el;\n        });\n        if (params.length == 1 && params[0] == 0) {\n            params = [];\n        }\n        stops = stops.split(\"-\");\n        stops = stops.map(function (el) {\n            el = el.split(\":\");\n            var out = {\n                color: el[0]\n            };\n            if (el[1]) {\n                out.offset = parseFloat(el[1]);\n            }\n            return out;\n        });\n        var len = stops.length,\n            start = 0,\n            j = 0;\n        function seed(i, end) {\n            var step = (end - start) / (i - j);\n            for (var k = j; k < i; k++) {\n                stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n            }\n            j = i;\n            start = end;\n        }\n        len--;\n        for (var i = 0; i < len; i++) if (\"offset\" in stops[i]) {\n            seed(i, stops[i].offset);\n        }\n        stops[len].offset = stops[len].offset || 100;\n        seed(len, stops[len].offset);\n        return {\n            type: type,\n            params: params,\n            stops: stops\n        };\n    });\n\n    eve.on(\"snap.util.attr.d\", function (value) {\n        eve.stop();\n        if (is(value, \"array\") && is(value[0], \"array\")) {\n            value = Snap.path.toString.call(value);\n        }\n        value = Str(value);\n        if (value.match(/[ruo]/i)) {\n            value = Snap.path.toAbsolute(value);\n        }\n        $(this.node, {d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.#text\", function (value) {\n        eve.stop();\n        value = Str(value);\n        var txt = glob.doc.createTextNode(value);\n        while (this.node.firstChild) {\n            this.node.removeChild(this.node.firstChild);\n        }\n        this.node.appendChild(txt);\n    })(-1);\n    eve.on(\"snap.util.attr.path\", function (value) {\n        eve.stop();\n        this.attr({d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.class\", function (value) {\n        eve.stop();\n        this.node.className.baseVal = value;\n    })(-1);\n    eve.on(\"snap.util.attr.viewBox\", function (value) {\n        var vb;\n        if (is(value, \"object\") && \"x\" in value) {\n            vb = [value.x, value.y, value.width, value.height].join(\" \");\n        } else if (is(value, \"array\")) {\n            vb = value.join(\" \");\n        } else {\n            vb = value;\n        }\n        $(this.node, {\n            viewBox: vb\n        });\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.transform\", function (value) {\n        this.transform(value);\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.r\", function (value) {\n        if (this.type == \"rect\") {\n            eve.stop();\n            $(this.node, {\n                rx: value,\n                ry: value\n            });\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.textpath\", function (value) {\n        eve.stop();\n        if (this.type == \"text\") {\n            var id, tp, node;\n            if (!value && this.textPath) {\n                tp = this.textPath;\n                while (tp.node.firstChild) {\n                    this.node.appendChild(tp.node.firstChild);\n                }\n                tp.remove();\n                delete this.textPath;\n                return;\n            }\n            if (is(value, \"string\")) {\n                var defs = getSomeDefs(this),\n                    path = wrap(defs.parentNode).path(value);\n                defs.appendChild(path.node);\n                id = path.id;\n                path.attr({id: id});\n            } else {\n                value = wrap(value);\n                if (value instanceof Element) {\n                    id = value.attr(\"id\");\n                    if (!id) {\n                        id = value.id;\n                        value.attr({id: id});\n                    }\n                }\n            }\n            if (id) {\n                tp = this.textPath;\n                node = this.node;\n                if (tp) {\n                    tp.attr({\"xlink:href\": \"#\" + id});\n                } else {\n                    tp = $(\"textPath\", {\n                        \"xlink:href\": \"#\" + id\n                    });\n                    while (node.firstChild) {\n                        tp.appendChild(node.firstChild);\n                    }\n                    node.appendChild(tp);\n                    this.textPath = wrap(tp);\n                }\n            }\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.text\", function (value) {\n        if (this.type == \"text\") {\n            var i = 0,\n                node = this.node,\n                tuner = function (chunk) {\n                    var out = $(\"tspan\");\n                    if (is(chunk, \"array\")) {\n                        for (var i = 0; i < chunk.length; i++) {\n                            out.appendChild(tuner(chunk[i]));\n                        }\n                    } else {\n                        out.appendChild(glob.doc.createTextNode(chunk));\n                    }\n                    out.normalize && out.normalize();\n                    return out;\n                };\n            while (node.firstChild) {\n                node.removeChild(node.firstChild);\n            }\n            var tuned = tuner(value);\n            while (tuned.firstChild) {\n                node.appendChild(tuned.firstChild);\n            }\n        }\n        eve.stop();\n    })(-1);\n    function setFontSize(value) {\n        eve.stop();\n        if (value == +value) {\n            value += \"px\";\n        }\n        this.node.style.fontSize = value;\n    }\n    eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n    eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n\n\n    eve.on(\"snap.util.getattr.transform\", function () {\n        eve.stop();\n        return this.transform();\n    })(-1);\n    eve.on(\"snap.util.getattr.textpath\", function () {\n        eve.stop();\n        return this.textPath;\n    })(-1);\n    // Markers\n    (function () {\n        function getter(end) {\n            return function () {\n                eve.stop();\n                var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n                if (style == \"none\") {\n                    return style;\n                } else {\n                    return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n                }\n            };\n        }\n        function setter(end) {\n            return function (value) {\n                eve.stop();\n                var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n                if (value == \"\" || !value) {\n                    this.node.style[name] = \"none\";\n                    return;\n                }\n                if (value.type == \"marker\") {\n                    var id = value.node.id;\n                    if (!id) {\n                        $(value.node, {id: value.id});\n                    }\n                    this.node.style[name] = URL(id);\n                    return;\n                }\n            };\n        }\n        eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n    }());\n    eve.on(\"snap.util.getattr.r\", function () {\n        if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n            eve.stop();\n            return $(this.node, \"rx\");\n        }\n    })(-1);\n    function textExtract(node) {\n        var out = [];\n        var children = node.childNodes;\n        for (var i = 0, ii = children.length; i < ii; i++) {\n            var chi = children[i];\n            if (chi.nodeType == 3) {\n                out.push(chi.nodeValue);\n            }\n            if (chi.tagName == \"tspan\") {\n                if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n                    out.push(chi.firstChild.nodeValue);\n                } else {\n                    out.push(textExtract(chi));\n                }\n            }\n        }\n        return out;\n    }\n    eve.on(\"snap.util.getattr.text\", function () {\n        if (this.type == \"text\" || this.type == \"tspan\") {\n            eve.stop();\n            var out = textExtract(this.node);\n            return out.length == 1 ? out[0] : out;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.#text\", function () {\n        return this.node.textContent;\n    })(-1);\n    eve.on(\"snap.util.getattr.fill\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.fill\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.stroke\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.stroke\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.viewBox\", function () {\n        eve.stop();\n        var vb = $(this.node, \"viewBox\");\n        if (vb) {\n            vb = vb.split(separator);\n            return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.points\", function () {\n        var p = $(this.node, \"points\");\n        eve.stop();\n        if (p) {\n            return p.split(separator);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.path\", function () {\n        var p = $(this.node, \"d\");\n        eve.stop();\n        return p;\n    })(-1);\n    eve.on(\"snap.util.getattr.class\", function () {\n        return this.node.className.baseVal;\n    })(-1);\n    function getFontSize() {\n        eve.stop();\n        return this.node.style.fontSize;\n    }\n    eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n    eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var rgNotSpace = /\\S+/g,\n        rgBadSpace = /[\\t\\r\\n\\f]/g,\n        rgTrim = /(^\\s+|\\s+$)/g,\n        Str = String,\n        elproto = Element.prototype;\n    /*\\\n     * Element.addClass\n     [ method ]\n     **\n     * Adds given class name or list of class names to the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.addClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n\n        if (classes.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (!~pos) {\n                    curClasses.push(clazz);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.removeClass\n     [ method ]\n     **\n     * Removes given class name or list of class names from the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.removeClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        if (curClasses.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (~pos) {\n                    curClasses.splice(pos, 1);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.hasClass\n     [ method ]\n     **\n     * Checks if the element has a given class name in the list of class names applied to it.\n     - value (string) class name\n     **\n     = (boolean) `true` if the element has given class\n    \\*/\n    elproto.hasClass = function (value) {\n        var elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [];\n        return !!~curClasses.indexOf(value);\n    };\n    /*\\\n     * Element.toggleClass\n     [ method ]\n     **\n     * Add or remove one or more classes from the element, depending on either\n     * the class’s presence or the value of the `flag` argument.\n     - value (string) class name or space separated list of class names\n     - flag (boolean) value to determine whether the class should be added or removed\n     **\n     = (Element) original element.\n    \\*/\n    elproto.toggleClass = function (value, flag) {\n        if (flag != null) {\n            if (flag) {\n                return this.addClass(value);\n            } else {\n                return this.removeClass(value);\n            }\n        }\n        var classes = (value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        j = 0;\n        while (clazz = classes[j++]) {\n            pos = curClasses.indexOf(clazz);\n            if (~pos) {\n                curClasses.splice(pos, 1);\n            } else {\n                curClasses.push(clazz);\n            }\n        }\n\n        finalValue = curClasses.join(\" \");\n        if (className != finalValue) {\n            elem.className.baseVal = finalValue;\n        }\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var operators = {\n            \"+\": function (x, y) {\n                    return x + y;\n                },\n            \"-\": function (x, y) {\n                    return x - y;\n                },\n            \"/\": function (x, y) {\n                    return x / y;\n                },\n            \"*\": function (x, y) {\n                    return x * y;\n                }\n        },\n        Str = String,\n        reUnit = /[a-z]+$/i,\n        reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    eve.on(\"snap.util.attr\", function (val) {\n        var plus = Str(val).match(reAddon);\n        if (plus) {\n            var evnt = eve.nt(),\n                name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n                a = this.attr(name),\n                atr = {};\n            eve.stop();\n            var unit = plus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[plus[1]];\n            if (aUnit && aUnit == unit) {\n                val = op(parseFloat(a), +plus[2]);\n            } else {\n                a = this.asPX(name);\n                val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n            }\n            if (isNaN(a) || isNaN(val)) {\n                return;\n            }\n            atr[name] = val;\n            this.attr(atr);\n        }\n    })(-10);\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this,\n            bplus = Str(b).match(reAddon);\n        if (bplus) {\n            eve.stop();\n            var unit = bplus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[bplus[1]];\n            if (aUnit && aUnit == unit) {\n                return {\n                    from: parseFloat(a),\n                    to: op(parseFloat(a), +bplus[2]),\n                    f: getUnit(aUnit)\n                };\n            } else {\n                a = this.asPX(name);\n                return {\n                    from: a,\n                    to: op(a, this.asPX(name, bplus[2] + unit)),\n                    f: getNumber\n                };\n            }\n        }\n    })(-10);\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var proto = Paper.prototype,\n        is = Snap.is;\n    /*\\\n     * Paper.rect\n     [ method ]\n     *\n     * Draws a rectangle\n     **\n     - x (number) x coordinate of the top left corner\n     - y (number) y coordinate of the top left corner\n     - width (number) width\n     - height (number) height\n     - rx (number) #optional horizontal radius for rounded corners, default is 0\n     - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n     = (object) the `rect` element\n     **\n     > Usage\n     | // regular rectangle\n     | var c = paper.rect(10, 10, 50, 50);\n     | // rectangle with rounded corners\n     | var c = paper.rect(40, 40, 50, 50, 10);\n    \\*/\n    proto.rect = function (x, y, w, h, rx, ry) {\n        var attr;\n        if (ry == null) {\n            ry = rx;\n        }\n        if (is(x, \"object\") && x == \"[object Object]\") {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                width: w,\n                height: h\n            };\n            if (rx != null) {\n                attr.rx = rx;\n                attr.ry = ry;\n            }\n        }\n        return this.el(\"rect\", attr);\n    };\n    /*\\\n     * Paper.circle\n     [ method ]\n     **\n     * Draws a circle\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - r (number) radius\n     = (object) the `circle` element\n     **\n     > Usage\n     | var c = paper.circle(50, 50, 40);\n    \\*/\n    proto.circle = function (cx, cy, r) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr = {\n                cx: cx,\n                cy: cy,\n                r: r\n            };\n        }\n        return this.el(\"circle\", attr);\n    };\n\n    var preload = (function () {\n        function onerror() {\n            this.parentNode.removeChild(this);\n        }\n        return function (src, f) {\n            var img = glob.doc.createElement(\"img\"),\n                body = glob.doc.body;\n            img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n            img.onload = function () {\n                f.call(img);\n                img.onload = img.onerror = null;\n                body.removeChild(img);\n            };\n            img.onerror = onerror;\n            body.appendChild(img);\n            img.src = src;\n        };\n    }());\n\n    /*\\\n     * Paper.image\n     [ method ]\n     **\n     * Places an image on the surface\n     **\n     - src (string) URI of the source image\n     - x (number) x offset position\n     - y (number) y offset position\n     - width (number) width of the image\n     - height (number) height of the image\n     = (object) the `image` element\n     * or\n     = (object) Snap element object with type `image`\n     **\n     > Usage\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n    \\*/\n    proto.image = function (src, x, y, width, height) {\n        var el = this.el(\"image\");\n        if (is(src, \"object\") && \"src\" in src) {\n            el.attr(src);\n        } else if (src != null) {\n            var set = {\n                \"xlink:href\": src,\n                preserveAspectRatio: \"none\"\n            };\n            if (x != null && y != null) {\n                set.x = x;\n                set.y = y;\n            }\n            if (width != null && height != null) {\n                set.width = width;\n                set.height = height;\n            } else {\n                preload(src, function () {\n                    Snap._.$(el.node, {\n                        width: this.offsetWidth,\n                        height: this.offsetHeight\n                    });\n                });\n            }\n            Snap._.$(el.node, set);\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ellipse\n     [ method ]\n     **\n     * Draws an ellipse\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - rx (number) horizontal radius\n     - ry (number) vertical radius\n     = (object) the `ellipse` element\n     **\n     > Usage\n     | var c = paper.ellipse(50, 50, 40, 20);\n    \\*/\n    proto.ellipse = function (cx, cy, rx, ry) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr ={\n                cx: cx,\n                cy: cy,\n                rx: rx,\n                ry: ry\n            };\n        }\n        return this.el(\"ellipse\", attr);\n    };\n    // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n    /*\\\n     * Paper.path\n     [ method ]\n     **\n     * Creates a `<path>` element using the given string as the path's definition\n     - pathString (string) #optional path string in SVG format\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n     | \"M10,20L30,40\"\n     * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n     *\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n     * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n     * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n     > Usage\n     | var c = paper.path(\"M10 10L90 90\");\n     | // draw a diagonal line:\n     | // move to 10,10, line to 90,90\n    \\*/\n    proto.path = function (d) {\n        var attr;\n        if (is(d, \"object\") && !is(d, \"array\")) {\n            attr = d;\n        } else if (d) {\n            attr = {d: d};\n        }\n        return this.el(\"path\", attr);\n    };\n    /*\\\n     * Paper.g\n     [ method ]\n     **\n     * Creates a group element\n     **\n     - varargs (…) #optional elements to nest within the group\n     = (object) the `g` element\n     **\n     > Usage\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g(c2, c1); // note that the order of elements is different\n     * or\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g();\n     | g.add(c2, c1);\n    \\*/\n    /*\\\n     * Paper.group\n     [ method ]\n     **\n     * See @Paper.g\n    \\*/\n    proto.group = proto.g = function (first) {\n        var attr,\n            el = this.el(\"g\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.svg\n     [ method ]\n     **\n     * Creates a nested SVG element.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `svg` element\n     **\n    \\*/\n    proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n        var attrs = {};\n        if (is(x, \"object\") && y == null) {\n            attrs = x;\n        } else {\n            if (x != null) {\n                attrs.x = x;\n            }\n            if (y != null) {\n                attrs.y = y;\n            }\n            if (width != null) {\n                attrs.width = width;\n            }\n            if (height != null) {\n                attrs.height = height;\n            }\n            if (vbx != null && vby != null && vbw != null && vbh != null) {\n                attrs.viewBox = [vbx, vby, vbw, vbh];\n            }\n        }\n        return this.el(\"svg\", attrs);\n    };\n    /*\\\n     * Paper.mask\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a mask.\n     **\n     = (object) the `mask` element\n     **\n    \\*/\n    proto.mask = function (first) {\n        var attr,\n            el = this.el(\"mask\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ptrn\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `pattern` element\n     **\n    \\*/\n    proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n        if (is(x, \"object\")) {\n            var attr = x;\n        } else {\n            attr = {patternUnits: \"userSpaceOnUse\"};\n            if (x) {\n                attr.x = x;\n            }\n            if (y) {\n                attr.y = y;\n            }\n            if (width != null) {\n                attr.width = width;\n            }\n            if (height != null) {\n                attr.height = height;\n            }\n            if (vx != null && vy != null && vw != null && vh != null) {\n                attr.viewBox = [vx, vy, vw, vh];\n            } else {\n                attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n            }\n        }\n        return this.el(\"pattern\", attr);\n    };\n    /*\\\n     * Paper.use\n     [ method ]\n     **\n     * Creates a <use> element.\n     - id (string) @optional id of element to link\n     * or\n     - id (Element) @optional element to link\n     **\n     = (object) the `use` element\n     **\n    \\*/\n    proto.use = function (id) {\n        if (id != null) {\n            if (id instanceof Element) {\n                if (!id.attr(\"id\")) {\n                    id.attr({id: Snap._.id(id)});\n                }\n                id = id.attr(\"id\");\n            }\n            if (String(id).charAt() == \"#\") {\n                id = id.substring(1);\n            }\n            return this.el(\"use\", {\"xlink:href\": \"#\" + id});\n        } else {\n            return Element.prototype.use.call(this);\n        }\n    };\n    /*\\\n     * Paper.symbol\n     [ method ]\n     **\n     * Creates a <symbol> element.\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     = (object) the `symbol` element\n     **\n    \\*/\n    proto.symbol = function (vx, vy, vw, vh) {\n        var attr = {};\n        if (vx != null && vy != null && vw != null && vh != null) {\n            attr.viewBox = [vx, vy, vw, vh];\n        }\n\n        return this.el(\"symbol\", attr);\n    };\n    /*\\\n     * Paper.text\n     [ method ]\n     **\n     * Draws a text string\n     **\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n     = (object) the `text` element\n     **\n     > Usage\n     | var t1 = paper.text(50, 50, \"Snap\");\n     | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n     | // Text path usage\n     | t1.attr({textpath: \"M10,10L100,100\"});\n     | // or\n     | var pth = paper.path(\"M10,10L100,100\");\n     | t1.attr({textpath: pth});\n    \\*/\n    proto.text = function (x, y, text) {\n        var attr = {};\n        if (is(x, \"object\")) {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                text: text || \"\"\n            };\n        }\n        return this.el(\"text\", attr);\n    };\n    /*\\\n     * Paper.line\n     [ method ]\n     **\n     * Draws a line\n     **\n     - x1 (number) x coordinate position of the start\n     - y1 (number) y coordinate position of the start\n     - x2 (number) x coordinate position of the end\n     - y2 (number) y coordinate position of the end\n     = (object) the `line` element\n     **\n     > Usage\n     | var t1 = paper.line(50, 50, 100, 100);\n    \\*/\n    proto.line = function (x1, y1, x2, y2) {\n        var attr = {};\n        if (is(x1, \"object\")) {\n            attr = x1;\n        } else if (x1 != null) {\n            attr = {\n                x1: x1,\n                x2: x2,\n                y1: y1,\n                y2: y2\n            };\n        }\n        return this.el(\"line\", attr);\n    };\n    /*\\\n     * Paper.polyline\n     [ method ]\n     **\n     * Draws a polyline\n     **\n     - points (array) array of points\n     * or\n     - varargs (…) points\n     = (object) the `polyline` element\n     **\n     > Usage\n     | var p1 = paper.polyline([10, 10, 100, 100]);\n     | var p2 = paper.polyline(10, 10, 100, 100);\n    \\*/\n    proto.polyline = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polyline\", attr);\n    };\n    /*\\\n     * Paper.polygon\n     [ method ]\n     **\n     * Draws a polygon. See @Paper.polyline\n    \\*/\n    proto.polygon = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polygon\", attr);\n    };\n    // gradients\n    (function () {\n        var $ = Snap._.$;\n        // gradients' helpers\n        /*\\\n         * Element.stops\n         [ method ]\n         **\n         * Only for gradients!\n         * Returns array of gradient stops elements.\n         = (array) the stops array.\n        \\*/\n        function Gstops() {\n            return this.selectAll(\"stop\");\n        }\n        /*\\\n         * Element.addStop\n         [ method ]\n         **\n         * Only for gradients!\n         * Adds another stop to the gradient.\n         - color (string) stops color\n         - offset (number) stops offset 0..100\n         = (object) gradient element\n        \\*/\n        function GaddStop(color, offset) {\n            var stop = $(\"stop\"),\n                attr = {\n                    offset: +offset + \"%\"\n                };\n            color = Snap.color(color);\n            attr[\"stop-color\"] = color.hex;\n            if (color.opacity < 1) {\n                attr[\"stop-opacity\"] = color.opacity;\n            }\n            $(stop, attr);\n            var stops = this.stops(),\n                inserted;\n            for (var i = 0; i < stops.length; i++) {\n                var stopOffset = parseFloat(stops[i].attr(\"offset\"));\n                if (stopOffset > offset) {\n                    this.node.insertBefore(stop, stops[i].node);\n                    inserted = true;\n                    break;\n                }\n            }\n            if (!inserted) {\n                this.node.appendChild(stop);\n            }\n            return this;\n        }\n        function GgetBBox() {\n            if (this.type == \"linearGradient\") {\n                var x1 = $(this.node, \"x1\") || 0,\n                    x2 = $(this.node, \"x2\") || 1,\n                    y1 = $(this.node, \"y1\") || 0,\n                    y2 = $(this.node, \"y2\") || 0;\n                return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n            } else {\n                var cx = this.node.cx || .5,\n                    cy = this.node.cy || .5,\n                    r = this.node.r || 0;\n                return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n            }\n        }\n        /*\\\n         * Element.setStops\n         [ method ]\n         **\n         * Only for gradients!\n         * Updates stops of the gradient based on passed gradient descriptor. See @Ppaer.gradient\n         - str (string) gradient descriptor part after `()`.\n         = (object) gradient element\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         | g.setStops(\"#fff-#000-#f00-#fc0\");\n        \\*/\n        function GsetStops(str) {\n            var grad = str,\n                stops = this.stops();\n            if (typeof str == \"string\") {\n                grad = eve(\"snap.util.grad.parse\", null, \"l(0,0,0,1)\" + str).firstDefined().stops;\n            }\n            if (!Snap.is(grad, \"array\")) {\n                return;\n            }\n            for (var i = 0; i < stops.length; i++) {\n                if (grad[i]) {\n                    var color = Snap.color(grad[i].color),\n                        attr = {\"offset\": grad[i].offset + \"%\"};\n                    attr[\"stop-color\"] = color.hex;\n                    if (color.opacity < 1) {\n                        attr[\"stop-opacity\"] = color.opacity;\n                    }\n                    stops[i].attr(attr);\n                } else {\n                    stops[i].remove();\n                }\n            }\n            for (i = stops.length; i < grad.length; i++) {\n                this.addStop(grad[i].color, grad[i].offset);\n            }\n            return this;\n        }\n        function gradient(defs, str) {\n            var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n                el;\n            if (!grad) {\n                return null;\n            }\n            grad.params.unshift(defs);\n            if (grad.type.toLowerCase() == \"l\") {\n                el = gradientLinear.apply(0, grad.params);\n            } else {\n                el = gradientRadial.apply(0, grad.params);\n            }\n            if (grad.type != grad.type.toLowerCase()) {\n                $(el.node, {\n                    gradientUnits: \"userSpaceOnUse\"\n                });\n            }\n            var stops = grad.stops,\n                len = stops.length;\n            for (var i = 0; i < len; i++) {\n                var stop = stops[i];\n                el.addStop(stop.color, stop.offset);\n            }\n            return el;\n        }\n        function gradientLinear(defs, x1, y1, x2, y2) {\n            var el = Snap._.make(\"linearGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            el.setStops = GsetStops;\n            if (x1 != null) {\n                $(el.node, {\n                    x1: x1,\n                    y1: y1,\n                    x2: x2,\n                    y2: y2\n                });\n            }\n            return el;\n        }\n        function gradientRadial(defs, cx, cy, r, fx, fy) {\n            var el = Snap._.make(\"radialGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            if (cx != null) {\n                $(el.node, {\n                    cx: cx,\n                    cy: cy,\n                    r: r\n                });\n            }\n            if (fx != null && fy != null) {\n                $(el.node, {\n                    fx: fx,\n                    fy: fy\n                });\n            }\n            return el;\n        }\n        /*\\\n         * Paper.gradient\n         [ method ]\n         **\n         * Creates a gradient element\n         **\n         - gradient (string) gradient descriptor\n         > Gradient Descriptor\n         * The gradient descriptor is an expression formatted as\n         * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n         * either linear or radial.  The uppercase `L` or `R` letters\n         * indicate absolute coordinates offset from the SVG surface.\n         * Lowercase `l` or `r` letters indicate coordinates\n         * calculated relative to the element to which the gradient is\n         * applied.  Coordinates specify a linear gradient vector as\n         * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n         * `r` and optional `fx`, `fy` specifying a focal point away\n         * from the center of the circle. Specify `<colors>` as a list\n         * of dash-separated CSS color values.  Each color may be\n         * followed by a custom offset value, separated with a colon\n         * character.\n         > Examples\n         * Linear gradient, relative from top-left corner to bottom-right\n         * corner, from black through red to white:\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         * Linear gradient, absolute from (0, 0) to (100, 100), from black\n         * through red at 25% to white:\n         | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n         * Radial gradient, relative from the center of the element with radius\n         * half the width, from black to white:\n         | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n         * To apply the gradient:\n         | paper.circle(50, 50, 40).attr({\n         |     fill: g\n         | });\n         = (object) the `gradient` element\n        \\*/\n        proto.gradient = function (str) {\n            return gradient(this.defs, str);\n        };\n        proto.gradientLinear = function (x1, y1, x2, y2) {\n            return gradientLinear(this.defs, x1, y1, x2, y2);\n        };\n        proto.gradientRadial = function (cx, cy, r, fx, fy) {\n            return gradientRadial(this.defs, cx, cy, r, fx, fy);\n        };\n        /*\\\n         * Paper.toString\n         [ method ]\n         **\n         * Returns SVG code for the @Paper\n         = (string) SVG code for the @Paper\n        \\*/\n        proto.toString = function () {\n            var doc = this.node.ownerDocument,\n                f = doc.createDocumentFragment(),\n                d = doc.createElement(\"div\"),\n                svg = this.node.cloneNode(true),\n                res;\n            f.appendChild(d);\n            d.appendChild(svg);\n            Snap._.$(svg, {xmlns: \"http://www.w3.org/2000/svg\"});\n            res = d.innerHTML;\n            f.removeChild(f.firstChild);\n            return res;\n        };\n        /*\\\n         * Paper.toDataURL\n         [ method ]\n         **\n         * Returns SVG code for the @Paper as Data URI string.\n         = (string) Data URI string\n        \\*/\n        proto.toDataURL = function () {\n            if (window && window.btoa) {\n                return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n            }\n        };\n        /*\\\n         * Paper.clear\n         [ method ]\n         **\n         * Removes all child nodes of the paper, except <defs>.\n        \\*/\n        proto.clear = function () {\n            var node = this.node.firstChild,\n                next;\n            while (node) {\n                next = node.nextSibling;\n                if (node.tagName != \"defs\") {\n                    node.parentNode.removeChild(node);\n                } else {\n                    proto.clear.call({node: node});\n                }\n                node = next;\n            }\n        };\n    }());\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        clone = Snap._.clone,\n        has = \"hasOwnProperty\",\n        p2s = /,?([a-z]),?/gi,\n        toFloat = parseFloat,\n        math = Math,\n        PI = math.PI,\n        mmin = math.min,\n        mmax = math.max,\n        pow = math.pow,\n        abs = math.abs;\n    function paths(ps) {\n        var p = paths.ps = paths.ps || {};\n        if (p[ps]) {\n            p[ps].sleep = 100;\n        } else {\n            p[ps] = {\n                sleep: 100\n            };\n        }\n        setTimeout(function () {\n            for (var key in p) if (p[has](key) && key != ps) {\n                p[key].sleep--;\n                !p[key].sleep && delete p[key];\n            }\n        });\n        return p[ps];\n    }\n    function box(x, y, width, height) {\n        if (x == null) {\n            x = y = width = height = 0;\n        }\n        if (y == null) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            w: width,\n            height: height,\n            h: height,\n            x2: x + width,\n            y2: y + height,\n            cx: x + width / 2,\n            cy: y + height / 2,\n            r1: math.min(width, height) / 2,\n            r2: math.max(width, height) / 2,\n            r0: math.sqrt(width * width + height * height) / 2,\n            path: rectPath(x, y, width, height),\n            vb: [x, y, width, height].join(\" \")\n        };\n    }\n    function toString() {\n        return this.join(\",\").replace(p2s, \"$1\");\n    }\n    function pathClone(pathArray) {\n        var res = clone(pathArray);\n        res.toString = toString;\n        return res;\n    }\n    function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n        if (length == null) {\n            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n        } else {\n            return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y,\n                getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n        }\n    }\n    function getLengthFactory(istotal, subpath) {\n        function O(val) {\n            return +(+val).toFixed(3);\n        }\n        return Snap._.cacher(function (path, length, onlystart) {\n            if (path instanceof Element) {\n                path = path.attr(\"d\");\n            }\n            path = path2curve(path);\n            var x, y, p, l, sp = \"\", subpaths = {}, point,\n                len = 0;\n            for (var i = 0, ii = path.length; i < ii; i++) {\n                p = path[i];\n                if (p[0] == \"M\") {\n                    x = +p[1];\n                    y = +p[2];\n                } else {\n                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                    if (len + l > length) {\n                        if (subpath && !subpaths.start) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            sp += [\n                                \"C\" + O(point.start.x),\n                                O(point.start.y),\n                                O(point.m.x),\n                                O(point.m.y),\n                                O(point.x),\n                                O(point.y)\n                            ];\n                            if (onlystart) {return sp;}\n                            subpaths.start = sp;\n                            sp = [\n                                \"M\" + O(point.x),\n                                O(point.y) + \"C\" + O(point.n.x),\n                                O(point.n.y),\n                                O(point.end.x),\n                                O(point.end.y),\n                                O(p[5]),\n                                O(p[6])\n                            ].join();\n                            len += l;\n                            x = +p[5];\n                            y = +p[6];\n                            continue;\n                        }\n                        if (!istotal && !subpath) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            return point;\n                        }\n                    }\n                    len += l;\n                    x = +p[5];\n                    y = +p[6];\n                }\n                sp += p.shift() + p;\n            }\n            subpaths.end = sp;\n            point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n            return point;\n        }, null, Snap._.clone);\n    }\n    var getTotalLength = getLengthFactory(1),\n        getPointAtLength = getLengthFactory(),\n        getSubpathsAtLength = getLengthFactory(0, 1);\n    function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t,\n            t13 = pow(t1, 3),\n            t12 = pow(t1, 2),\n            t2 = t * t,\n            t3 = t2 * t,\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n            ax = t1 * p1x + t * c1x,\n            ay = t1 * p1y + t * c1y,\n            cx = t1 * c2x + t * p2x,\n            cy = t1 * c2y + t * p2y,\n            alpha = 90 - math.atan2(mx - nx, my - ny) * 180 / PI;\n        // (mx > nx || my < ny) && (alpha += 180);\n        return {\n            x: x,\n            y: y,\n            m: {x: mx, y: my},\n            n: {x: nx, y: ny},\n            start: {x: ax, y: ay},\n            end: {x: cx, y: cy},\n            alpha: alpha\n        };\n    }\n    function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n        if (!Snap.is(p1x, \"array\")) {\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n        }\n        var bbox = curveDim.apply(null, p1x);\n        return box(\n            bbox.min.x,\n            bbox.min.y,\n            bbox.max.x - bbox.min.x,\n            bbox.max.y - bbox.min.y\n        );\n    }\n    function isPointInsideBBox(bbox, x, y) {\n        return  x >= bbox.x &&\n                x <= bbox.x + bbox.width &&\n                y >= bbox.y &&\n                y <= bbox.y + bbox.height;\n    }\n    function isBBoxIntersect(bbox1, bbox2) {\n        bbox1 = box(bbox1);\n        bbox2 = box(bbox2);\n        return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\n            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\n                || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\n                || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n    }\n    function base3(t, p1, p2, p3, p4) {\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n        return t * t2 - 3 * p1 + 3 * p2;\n    }\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n        if (z == null) {\n            z = 1;\n        }\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\n        var z2 = z / 2,\n            n = 12,\n            Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\n            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n            sum = 0;\n        for (var i = 0; i < n; i++) {\n            var ct = z2 * Tvalues[i] + z2,\n                xbase = base3(ct, x1, x2, x3, x4),\n                ybase = base3(ct, y1, y2, y3, y4),\n                comb = xbase * xbase + ybase * ybase;\n            sum += Cvalues[i] * math.sqrt(comb);\n        }\n        return z2 * sum;\n    }\n    function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n            return;\n        }\n        var t = 1,\n            step = t / 2,\n            t2 = t - step,\n            l,\n            e = .01;\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        while (abs(l - ll) > e) {\n            step /= 2;\n            t2 += (l < ll ? 1 : -1) * step;\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        }\n        return t2;\n    }\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (\n            mmax(x1, x2) < mmin(x3, x4) ||\n            mmin(x1, x2) > mmax(x3, x4) ||\n            mmax(y1, y2) < mmin(y3, y4) ||\n            mmin(y1, y2) > mmax(y3, y4)\n        ) {\n            return;\n        }\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n        if (!denominator) {\n            return;\n        }\n        var px = nx / denominator,\n            py = ny / denominator,\n            px2 = +px.toFixed(2),\n            py2 = +py.toFixed(2);\n        if (\n            px2 < +mmin(x1, x2).toFixed(2) ||\n            px2 > +mmax(x1, x2).toFixed(2) ||\n            px2 < +mmin(x3, x4).toFixed(2) ||\n            px2 > +mmax(x3, x4).toFixed(2) ||\n            py2 < +mmin(y1, y2).toFixed(2) ||\n            py2 > +mmax(y1, y2).toFixed(2) ||\n            py2 < +mmin(y3, y4).toFixed(2) ||\n            py2 > +mmax(y3, y4).toFixed(2)\n        ) {\n            return;\n        }\n        return {x: px, y: py};\n    }\n    function inter(bez1, bez2) {\n        return interHelper(bez1, bez2);\n    }\n    function interCount(bez1, bez2) {\n        return interHelper(bez1, bez2, 1);\n    }\n    function interHelper(bez1, bez2, justCount) {\n        var bbox1 = bezierBBox(bez1),\n            bbox2 = bezierBBox(bez2);\n        if (!isBBoxIntersect(bbox1, bbox2)) {\n            return justCount ? 0 : [];\n        }\n        var l1 = bezlen.apply(0, bez1),\n            l2 = bezlen.apply(0, bez2),\n            n1 = ~~(l1 / 8),\n            n2 = ~~(l2 / 8),\n            dots1 = [],\n            dots2 = [],\n            xy = {},\n            res = justCount ? 0 : [];\n        for (var i = 0; i < n1 + 1; i++) {\n            var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n            dots1.push({x: p.x, y: p.y, t: i / n1});\n        }\n        for (i = 0; i < n2 + 1; i++) {\n            p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n            dots2.push({x: p.x, y: p.y, t: i / n2});\n        }\n        for (i = 0; i < n1; i++) {\n            for (var j = 0; j < n2; j++) {\n                var di = dots1[i],\n                    di1 = dots1[i + 1],\n                    dj = dots2[j],\n                    dj1 = dots2[j + 1],\n                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n                if (is) {\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n                        continue;\n                    }\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n                    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n                        if (justCount) {\n                            res++;\n                        } else {\n                            res.push({\n                                x: is.x,\n                                y: is.y,\n                                t1: t1,\n                                t2: t2\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function pathIntersection(path1, path2) {\n        return interPathHelper(path1, path2);\n    }\n    function pathIntersectionNumber(path1, path2) {\n        return interPathHelper(path1, path2, 1);\n    }\n    function interPathHelper(path1, path2, justCount) {\n        path1 = path2curve(path1);\n        path2 = path2curve(path2);\n        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n            res = justCount ? 0 : [];\n        for (var i = 0, ii = path1.length; i < ii; i++) {\n            var pi = path1[i];\n            if (pi[0] == \"M\") {\n                x1 = x1m = pi[1];\n                y1 = y1m = pi[2];\n            } else {\n                if (pi[0] == \"C\") {\n                    bez1 = [x1, y1].concat(pi.slice(1));\n                    x1 = bez1[6];\n                    y1 = bez1[7];\n                } else {\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n                    x1 = x1m;\n                    y1 = y1m;\n                }\n                for (var j = 0, jj = path2.length; j < jj; j++) {\n                    var pj = path2[j];\n                    if (pj[0] == \"M\") {\n                        x2 = x2m = pj[1];\n                        y2 = y2m = pj[2];\n                    } else {\n                        if (pj[0] == \"C\") {\n                            bez2 = [x2, y2].concat(pj.slice(1));\n                            x2 = bez2[6];\n                            y2 = bez2[7];\n                        } else {\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                            x2 = x2m;\n                            y2 = y2m;\n                        }\n                        var intr = interHelper(bez1, bez2, justCount);\n                        if (justCount) {\n                            res += intr;\n                        } else {\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\n                                intr[k].segment1 = i;\n                                intr[k].segment2 = j;\n                                intr[k].bez1 = bez1;\n                                intr[k].bez2 = bez2;\n                            }\n                            res = res.concat(intr);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function isPointInsidePath(path, x, y) {\n        var bbox = pathBBox(path);\n        return isPointInsideBBox(bbox, x, y) &&\n               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n    }\n    function pathBBox(path) {\n        var pth = paths(path);\n        if (pth.bbox) {\n            return clone(pth.bbox);\n        }\n        if (!path) {\n            return box();\n        }\n        path = path2curve(path);\n        var x = 0,\n            y = 0,\n            X = [],\n            Y = [],\n            p;\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            p = path[i];\n            if (p[0] == \"M\") {\n                x = p[1];\n                y = p[2];\n                X.push(x);\n                Y.push(y);\n            } else {\n                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                X = X.concat(dim.min.x, dim.max.x);\n                Y = Y.concat(dim.min.y, dim.max.y);\n                x = p[5];\n                y = p[6];\n            }\n        }\n        var xmin = mmin.apply(0, X),\n            ymin = mmin.apply(0, Y),\n            xmax = mmax.apply(0, X),\n            ymax = mmax.apply(0, Y),\n            bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n        pth.bbox = clone(bb);\n        return bb;\n    }\n    function rectPath(x, y, w, h, r) {\n        if (r) {\n            return [\n                [\"M\", +x + +r, y],\n                [\"l\", w - r * 2, 0],\n                [\"a\", r, r, 0, 0, 1, r, r],\n                [\"l\", 0, h - r * 2],\n                [\"a\", r, r, 0, 0, 1, -r, r],\n                [\"l\", r * 2 - w, 0],\n                [\"a\", r, r, 0, 0, 1, -r, -r],\n                [\"l\", 0, r * 2 - h],\n                [\"a\", r, r, 0, 0, 1, r, -r],\n                [\"z\"]\n            ];\n        }\n        var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n        res.toString = toString;\n        return res;\n    }\n    function ellipsePath(x, y, rx, ry, a) {\n        if (a == null && ry == null) {\n            ry = rx;\n        }\n        x = +x;\n        y = +y;\n        rx = +rx;\n        ry = +ry;\n        if (a != null) {\n            var rad = Math.PI / 180,\n                x1 = x + rx * Math.cos(-ry * rad),\n                x2 = x + rx * Math.cos(-a * rad),\n                y1 = y + rx * Math.sin(-ry * rad),\n                y2 = y + rx * Math.sin(-a * rad),\n                res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n        } else {\n            res = [\n                [\"M\", x, y],\n                [\"m\", 0, -ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry],\n                [\"z\"]\n            ];\n        }\n        res.toString = toString;\n        return res;\n    }\n    var unit2px = Snap._unit2px,\n        getPath = {\n        path: function (el) {\n            return el.attr(\"path\");\n        },\n        circle: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx, attr.cy, attr.r);\n        },\n        ellipse: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n        },\n        rect: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n        },\n        image: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n        },\n        line: function (el) {\n            return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n        },\n        polyline: function (el) {\n            return \"M\" + el.attr(\"points\");\n        },\n        polygon: function (el) {\n            return \"M\" + el.attr(\"points\") + \"z\";\n        },\n        deflt: function (el) {\n            var bbox = el.node.getBBox();\n            return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n        }\n    };\n    function pathToRelative(pathArray) {\n        var pth = paths(pathArray),\n            lowerCase = String.prototype.toLowerCase;\n        if (pth.rel) {\n            return pathClone(pth.rel);\n        }\n        if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0;\n        if (pathArray[0][0] == \"M\") {\n            x = pathArray[0][1];\n            y = pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res.push([\"M\", x, y]);\n        }\n        for (var i = start, ii = pathArray.length; i < ii; i++) {\n            var r = res[i] = [],\n                pa = pathArray[i];\n            if (pa[0] != lowerCase.call(pa[0])) {\n                r[0] = lowerCase.call(pa[0]);\n                switch (r[0]) {\n                    case \"a\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +(pa[6] - x).toFixed(3);\n                        r[7] = +(pa[7] - y).toFixed(3);\n                        break;\n                    case \"v\":\n                        r[1] = +(pa[1] - y).toFixed(3);\n                        break;\n                    case \"m\":\n                        mx = pa[1];\n                        my = pa[2];\n                    default:\n                        for (var j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +(pa[j] - (j % 2 ? x : y)).toFixed(3);\n                        }\n                }\n            } else {\n                r = res[i] = [];\n                if (pa[0] == \"m\") {\n                    mx = pa[1] + x;\n                    my = pa[2] + y;\n                }\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    res[i][k] = pa[k];\n                }\n            }\n            var len = res[i].length;\n            switch (res[i][0]) {\n                case \"z\":\n                    x = mx;\n                    y = my;\n                    break;\n                case \"h\":\n                    x += +res[i][len - 1];\n                    break;\n                case \"v\":\n                    y += +res[i][len - 1];\n                    break;\n                default:\n                    x += +res[i][len - 2];\n                    y += +res[i][len - 1];\n            }\n        }\n        res.toString = toString;\n        pth.rel = pathClone(res);\n        return res;\n    }\n    function pathToAbsolute(pathArray) {\n        var pth = paths(pathArray);\n        if (pth.abs) {\n            return pathClone(pth.abs);\n        }\n        if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) { // rough assumption\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        if (!pathArray || !pathArray.length) {\n            return [[\"M\", 0, 0]];\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0,\n            pa0;\n        if (pathArray[0][0] == \"M\") {\n            x = +pathArray[0][1];\n            y = +pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res[0] = [\"M\", x, y];\n        }\n        var crz = pathArray.length == 3 &&\n            pathArray[0][0] == \"M\" &&\n            pathArray[1][0].toUpperCase() == \"R\" &&\n            pathArray[2][0].toUpperCase() == \"Z\";\n        for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n            res.push(r = []);\n            pa = pathArray[i];\n            pa0 = pa[0];\n            if (pa0 != pa0.toUpperCase()) {\n                r[0] = pa0.toUpperCase();\n                switch (r[0]) {\n                    case \"A\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +pa[6] + x;\n                        r[7] = +pa[7] + y;\n                        break;\n                    case \"V\":\n                        r[1] = +pa[1] + y;\n                        break;\n                    case \"H\":\n                        r[1] = +pa[1] + x;\n                        break;\n                    case \"R\":\n                        var dots = [x, y].concat(pa.slice(1));\n                        for (var j = 2, jj = dots.length; j < jj; j++) {\n                            dots[j] = +dots[j] + x;\n                            dots[++j] = +dots[j] + y;\n                        }\n                        res.pop();\n                        res = res.concat(catmullRom2bezier(dots, crz));\n                        break;\n                    case \"O\":\n                        res.pop();\n                        dots = ellipsePath(x, y, pa[1], pa[2]);\n                        dots.push(dots[0]);\n                        res = res.concat(dots);\n                        break;\n                    case \"U\":\n                        res.pop();\n                        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                        r = [\"U\"].concat(res[res.length - 1].slice(-2));\n                        break;\n                    case \"M\":\n                        mx = +pa[1] + x;\n                        my = +pa[2] + y;\n                    default:\n                        for (j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +pa[j] + (j % 2 ? x : y);\n                        }\n                }\n            } else if (pa0 == \"R\") {\n                dots = [x, y].concat(pa.slice(1));\n                res.pop();\n                res = res.concat(catmullRom2bezier(dots, crz));\n                r = [\"R\"].concat(pa.slice(-2));\n            } else if (pa0 == \"O\") {\n                res.pop();\n                dots = ellipsePath(x, y, pa[1], pa[2]);\n                dots.push(dots[0]);\n                res = res.concat(dots);\n            } else if (pa0 == \"U\") {\n                res.pop();\n                res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                r = [\"U\"].concat(res[res.length - 1].slice(-2));\n            } else {\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    r[k] = pa[k];\n                }\n            }\n            pa0 = pa0.toUpperCase();\n            if (pa0 != \"O\") {\n                switch (r[0]) {\n                    case \"Z\":\n                        x = +mx;\n                        y = +my;\n                        break;\n                    case \"H\":\n                        x = r[1];\n                        break;\n                    case \"V\":\n                        y = r[1];\n                        break;\n                    case \"M\":\n                        mx = r[r.length - 2];\n                        my = r[r.length - 1];\n                    default:\n                        x = r[r.length - 2];\n                        y = r[r.length - 1];\n                }\n            }\n        }\n        res.toString = toString;\n        pth.abs = pathClone(res);\n        return res;\n    }\n    function l2c(x1, y1, x2, y2) {\n        return [x1, y1, x2, y2, x2, y2];\n    }\n    function q2c(x1, y1, ax, ay, x2, y2) {\n        var _13 = 1 / 3,\n            _23 = 2 / 3;\n        return [\n                _13 * x1 + _23 * ax,\n                _13 * y1 + _23 * ay,\n                _13 * x2 + _23 * ax,\n                _13 * y2 + _23 * ay,\n                x2,\n                y2\n            ];\n    }\n    function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n        // for more information of where this math came from visit:\n        // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n        var _120 = PI * 120 / 180,\n            rad = PI / 180 * (+angle || 0),\n            res = [],\n            xy,\n            rotate = Snap._.cacher(function (x, y, rad) {\n                var X = x * math.cos(rad) - y * math.sin(rad),\n                    Y = x * math.sin(rad) + y * math.cos(rad);\n                return {x: X, y: Y};\n            });\n        if (!rx || !ry) {\n            return [x1, y1, x2, y2, x2, y2];\n        }\n        if (!recursive) {\n            xy = rotate(x1, y1, -rad);\n            x1 = xy.x;\n            y1 = xy.y;\n            xy = rotate(x2, y2, -rad);\n            x2 = xy.x;\n            y2 = xy.y;\n            var cos = math.cos(PI / 180 * angle),\n                sin = math.sin(PI / 180 * angle),\n                x = (x1 - x2) / 2,\n                y = (y1 - y2) / 2;\n            var h = x * x / (rx * rx) + y * y / (ry * ry);\n            if (h > 1) {\n                h = math.sqrt(h);\n                rx = h * rx;\n                ry = h * ry;\n            }\n            var rx2 = rx * rx,\n                ry2 = ry * ry,\n                k = (large_arc_flag == sweep_flag ? -1 : 1) *\n                    math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n                cx = k * rx * y / ry + (x1 + x2) / 2,\n                cy = k * -ry * x / rx + (y1 + y2) / 2,\n                f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n                f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n            f1 = x1 < cx ? PI - f1 : f1;\n            f2 = x2 < cx ? PI - f2 : f2;\n            f1 < 0 && (f1 = PI * 2 + f1);\n            f2 < 0 && (f2 = PI * 2 + f2);\n            if (sweep_flag && f1 > f2) {\n                f1 = f1 - PI * 2;\n            }\n            if (!sweep_flag && f2 > f1) {\n                f2 = f2 - PI * 2;\n            }\n        } else {\n            f1 = recursive[0];\n            f2 = recursive[1];\n            cx = recursive[2];\n            cy = recursive[3];\n        }\n        var df = f2 - f1;\n        if (abs(df) > _120) {\n            var f2old = f2,\n                x2old = x2,\n                y2old = y2;\n            f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n            x2 = cx + rx * math.cos(f2);\n            y2 = cy + ry * math.sin(f2);\n            res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n        }\n        df = f2 - f1;\n        var c1 = math.cos(f1),\n            s1 = math.sin(f1),\n            c2 = math.cos(f2),\n            s2 = math.sin(f2),\n            t = math.tan(df / 4),\n            hx = 4 / 3 * rx * t,\n            hy = 4 / 3 * ry * t,\n            m1 = [x1, y1],\n            m2 = [x1 + hx * s1, y1 - hy * c1],\n            m3 = [x2 + hx * s2, y2 - hy * c2],\n            m4 = [x2, y2];\n        m2[0] = 2 * m1[0] - m2[0];\n        m2[1] = 2 * m1[1] - m2[1];\n        if (recursive) {\n            return [m2, m3, m4].concat(res);\n        } else {\n            res = [m2, m3, m4].concat(res).join().split(\",\");\n            var newres = [];\n            for (var i = 0, ii = res.length; i < ii; i++) {\n                newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n            }\n            return newres;\n        }\n    }\n    function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t;\n        return {\n            x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n            y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n        };\n    }\n\n    // Returns bounding box of cubic bezier curve.\n    // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // Original version: NISHIO Hirokazu\n    // Modifications: https://github.com/timo22345\n    function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n        var tvalues = [],\n            bounds = [[], []],\n            a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n        for (var i = 0; i < 2; ++i) {\n            if (i == 0) {\n                b = 6 * x0 - 12 * x1 + 6 * x2;\n                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                c = 3 * x1 - 3 * x0;\n            } else {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n            }\n            if (abs(a) < 1e-12) {\n                if (abs(b) < 1e-12) {\n                    continue;\n                }\n                t = -c / b;\n                if (0 < t && t < 1) {\n                    tvalues.push(t);\n                }\n                continue;\n            }\n            b2ac = b * b - 4 * c * a;\n            sqrtb2ac = math.sqrt(b2ac);\n            if (b2ac < 0) {\n                continue;\n            }\n            t1 = (-b + sqrtb2ac) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n            }\n            t2 = (-b - sqrtb2ac) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n            }\n        }\n\n        var x, y, j = tvalues.length,\n            jlen = j,\n            mt;\n        while (j--) {\n            t = tvalues[j];\n            mt = 1 - t;\n            bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n            bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n        }\n\n        bounds[0][jlen] = x0;\n        bounds[1][jlen] = y0;\n        bounds[0][jlen + 1] = x3;\n        bounds[1][jlen + 1] = y3;\n        bounds[0].length = bounds[1].length = jlen + 2;\n\n\n        return {\n          min: {x: mmin.apply(0, bounds[0]), y: mmin.apply(0, bounds[1])},\n          max: {x: mmax.apply(0, bounds[0]), y: mmax.apply(0, bounds[1])}\n        };\n    }\n\n    function path2curve(path, path2) {\n        var pth = !path2 && paths(path);\n        if (!path2 && pth.curve) {\n            return pathClone(pth.curve);\n        }\n        var p = pathToAbsolute(path),\n            p2 = path2 && pathToAbsolute(path2),\n            attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            processPath = function (path, d, pcom) {\n                var nx, ny;\n                if (!path) {\n                    return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n                }\n                !(path[0] in {T: 1, Q: 1}) && (d.qx = d.qy = null);\n                switch (path[0]) {\n                    case \"M\":\n                        d.X = path[1];\n                        d.Y = path[2];\n                        break;\n                    case \"A\":\n                        path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n                        break;\n                    case \"S\":\n                        if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n                            nx = d.x * 2 - d.bx;          // And reflect the previous\n                            ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n                        }\n                        else {                            // or some else or nothing\n                            nx = d.x;\n                            ny = d.y;\n                        }\n                        path = [\"C\", nx, ny].concat(path.slice(1));\n                        break;\n                    case \"T\":\n                        if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n                            d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n                            d.qy = d.y * 2 - d.qy;        // to case \"S\".\n                        }\n                        else {                            // or something else or nothing\n                            d.qx = d.x;\n                            d.qy = d.y;\n                        }\n                        path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                        break;\n                    case \"Q\":\n                        d.qx = path[1];\n                        d.qy = path[2];\n                        path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                        break;\n                    case \"L\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n                        break;\n                    case \"H\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n                        break;\n                    case \"V\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n                        break;\n                    case \"Z\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n                        break;\n                }\n                return path;\n            },\n            fixArc = function (pp, i) {\n                if (pp[i].length > 7) {\n                    pp[i].shift();\n                    var pi = pp[i];\n                    while (pi.length) {\n                        pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n                        p2 && (pcoms2[i] = \"A\"); // the same as above\n                        pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n                    }\n                    pp.splice(i, 1);\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            fixM = function (path1, path2, a1, a2, i) {\n                if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n                    path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n                    a1.bx = 0;\n                    a1.by = 0;\n                    a1.x = path1[i][1];\n                    a1.y = path1[i][2];\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            pcoms1 = [], // path commands of original path p\n            pcoms2 = [], // path commands of original path p2\n            pfirst = \"\", // temporary holder for original path command\n            pcom = \"\"; // holder for previous path command of original path\n        for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n            p[i] && (pfirst = p[i][0]); // save current path command\n\n            if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n            {\n                pcoms1[i] = pfirst; // Save current path command\n                i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\n            }\n            p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n            if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n            // which may produce multiple C:s\n            // so we have to make sure that C is also C in original path\n\n            fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n            if (p2) { // the same procedures is done to p2\n                p2[i] && (pfirst = p2[i][0]);\n                if (pfirst != \"C\") {\n                    pcoms2[i] = pfirst;\n                    i && (pcom = pcoms2[i - 1]);\n                }\n                p2[i] = processPath(p2[i], attrs2, pcom);\n\n                if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n                    pcoms2[i] = \"C\";\n                }\n\n                fixArc(p2, i);\n            }\n            fixM(p, p2, attrs, attrs2, i);\n            fixM(p2, p, attrs2, attrs, i);\n            var seg = p[i],\n                seg2 = p2 && p2[i],\n                seglen = seg.length,\n                seg2len = p2 && seg2.length;\n            attrs.x = seg[seglen - 2];\n            attrs.y = seg[seglen - 1];\n            attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n            attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n            attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n            attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n            attrs2.x = p2 && seg2[seg2len - 2];\n            attrs2.y = p2 && seg2[seg2len - 1];\n        }\n        if (!p2) {\n            pth.curve = pathClone(p);\n        }\n        return p2 ? [p, p2] : p;\n    }\n    function mapPath(path, matrix) {\n        if (!matrix) {\n            return path;\n        }\n        var x, y, i, j, ii, jj, pathi;\n        path = path2curve(path);\n        for (i = 0, ii = path.length; i < ii; i++) {\n            pathi = path[i];\n            for (j = 1, jj = pathi.length; j < jj; j += 2) {\n                x = matrix.x(pathi[j], pathi[j + 1]);\n                y = matrix.y(pathi[j], pathi[j + 1]);\n                pathi[j] = x;\n                pathi[j + 1] = y;\n            }\n        }\n        return path;\n    }\n\n    // http://schepers.cc/getting-to-the-point\n    function catmullRom2bezier(crp, z) {\n        var d = [];\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n            var p = [\n                        {x: +crp[i - 2], y: +crp[i - 1]},\n                        {x: +crp[i],     y: +crp[i + 1]},\n                        {x: +crp[i + 2], y: +crp[i + 3]},\n                        {x: +crp[i + 4], y: +crp[i + 5]}\n                    ];\n            if (z) {\n                if (!i) {\n                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n                } else if (iLen - 4 == i) {\n                    p[3] = {x: +crp[0], y: +crp[1]};\n                } else if (iLen - 2 == i) {\n                    p[2] = {x: +crp[0], y: +crp[1]};\n                    p[3] = {x: +crp[2], y: +crp[3]};\n                }\n            } else {\n                if (iLen - 4 == i) {\n                    p[3] = p[2];\n                } else if (!i) {\n                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n                }\n            }\n            d.push([\"C\",\n                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n                  p[2].x,\n                  p[2].y\n            ]);\n        }\n\n        return d;\n    }\n\n    // export\n    Snap.path = paths;\n\n    /*\\\n     * Snap.path.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the given path in pixels\n     **\n     - path (string) SVG path string\n     **\n     = (number) length\n    \\*/\n    Snap.path.getTotalLength = getTotalLength;\n    /*\\\n     * Snap.path.getPointAtLength\n     [ method ]\n     **\n     * Returns the coordinates of the point located at the given length along the given path\n     **\n     - path (string) SVG path string\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    Snap.path.getPointAtLength = getPointAtLength;\n    /*\\\n     * Snap.path.getSubpath\n     [ method ]\n     **\n     * Returns the subpath of a given path between given start and end lengths\n     **\n     - path (string) SVG path string\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    Snap.path.getSubpath = function (path, from, to) {\n        if (this.getTotalLength(path) - to < 1e-6) {\n            return getSubpathsAtLength(path, from).end;\n        }\n        var a = getSubpathsAtLength(path, to, 1);\n        return from ? getSubpathsAtLength(a, from).end : a;\n    };\n    /*\\\n     * Element.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the path in pixels (only works for `path` elements)\n     = (number) length\n    \\*/\n    elproto.getTotalLength = function () {\n        if (this.node.getTotalLength) {\n            return this.node.getTotalLength();\n        }\n    };\n    // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n    /*\\\n     * Element.getPointAtLength\n     [ method ]\n     **\n     * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n     **\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    elproto.getPointAtLength = function (length) {\n        return getPointAtLength(this.attr(\"d\"), length);\n    };\n    // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n    /*\\\n     * Element.getSubpath\n     [ method ]\n     **\n     * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n     **\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    elproto.getSubpath = function (from, to) {\n        return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n    };\n    Snap._.box = box;\n    /*\\\n     * Snap.path.findDotsAtSegment\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds dot coordinates on the given cubic beziér curve at the given t\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     - t (number) position on the curve (0..1)\n     = (object) point information in format:\n     o {\n     o     x: (number) x coordinate of the point,\n     o     y: (number) y coordinate of the point,\n     o     m: {\n     o         x: (number) x coordinate of the left anchor,\n     o         y: (number) y coordinate of the left anchor\n     o     },\n     o     n: {\n     o         x: (number) x coordinate of the right anchor,\n     o         y: (number) y coordinate of the right anchor\n     o     },\n     o     start: {\n     o         x: (number) x coordinate of the start of the curve,\n     o         y: (number) y coordinate of the start of the curve\n     o     },\n     o     end: {\n     o         x: (number) x coordinate of the end of the curve,\n     o         y: (number) y coordinate of the end of the curve\n     o     },\n     o     alpha: (number) angle of the curve derivative at the point\n     o }\n    \\*/\n    Snap.path.findDotsAtSegment = findDotsAtSegment;\n    /*\\\n     * Snap.path.bezierBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given cubic beziér curve\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     * or\n     - bez (array) array of six points for beziér curve\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.bezierBBox = bezierBBox;\n    /*\\\n     * Snap.path.isPointInsideBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside bounding box\n     - bbox (string) bounding box\n     - x (string) x coordinate of the point\n     - y (string) y coordinate of the point\n     = (boolean) `true` if point is inside\n    \\*/\n    Snap.path.isPointInsideBBox = isPointInsideBBox;\n    Snap.closest = function (x, y, X, Y) {\n        var r = 100,\n            b = box(x - r / 2, y - r / 2, r, r),\n            inside = [],\n            getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n                return {\n                    x: X[i].x,\n                    y: X[i].y\n                };\n            } : function (i) {\n                return {\n                    x: X[i],\n                    y: Y[i]\n                };\n            },\n            found = 0;\n        while (r <= 1e6 && !found) {\n            for (var i = 0, ii = X.length; i < ii; i++) {\n                var xy = getter(i);\n                if (isPointInsideBBox(b, xy.x, xy.y)) {\n                    found++;\n                    inside.push(xy);\n                    break;\n                }\n            }\n            if (!found) {\n                r *= 2;\n                b = box(x - r / 2, y - r / 2, r, r)\n            }\n        }\n        if (r == 1e6) {\n            return;\n        }\n        var len = Infinity,\n            res;\n        for (i = 0, ii = inside.length; i < ii; i++) {\n            var l = Snap.len(x, y, inside[i].x, inside[i].y);\n            if (len > l) {\n                len = l;\n                inside[i].len = l;\n                res = inside[i];\n            }\n        }\n        return res;\n    };\n    /*\\\n     * Snap.path.isBBoxIntersect\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if two bounding boxes intersect\n     - bbox1 (string) first bounding box\n     - bbox2 (string) second bounding box\n     = (boolean) `true` if bounding boxes intersect\n    \\*/\n    Snap.path.isBBoxIntersect = isBBoxIntersect;\n    /*\\\n     * Snap.path.intersection\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds intersections of two paths\n     - path1 (string) path string\n     - path2 (string) path string\n     = (array) dots of intersection\n     o [\n     o     {\n     o         x: (number) x coordinate of the point,\n     o         y: (number) y coordinate of the point,\n     o         t1: (number) t value for segment of path1,\n     o         t2: (number) t value for segment of path2,\n     o         segment1: (number) order number for segment of path1,\n     o         segment2: (number) order number for segment of path2,\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n     o     }\n     o ]\n    \\*/\n    Snap.path.intersection = pathIntersection;\n    Snap.path.intersectionNumber = pathIntersectionNumber;\n    /*\\\n     * Snap.path.isPointInside\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside a given closed path.\n     *\n     * Note: fill mode doesn’t affect the result of this method.\n     - path (string) path string\n     - x (number) x of the point\n     - y (number) y of the point\n     = (boolean) `true` if point is inside the path\n    \\*/\n    Snap.path.isPointInside = isPointInsidePath;\n    /*\\\n     * Snap.path.getBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given path\n     - path (string) path string\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.getBBox = pathBBox;\n    Snap.path.get = getPath;\n    /*\\\n     * Snap.path.toRelative\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into relative values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toRelative = pathToRelative;\n    /*\\\n     * Snap.path.toAbsolute\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into absolute values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toAbsolute = pathToAbsolute;\n    /*\\\n     * Snap.path.toCubic\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to a new path where all segments are cubic beziér curves\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments\n    \\*/\n    Snap.path.toCubic = path2curve;\n    /*\\\n     * Snap.path.map\n     [ method ]\n     **\n     * Transform the path string with the given matrix\n     - path (string) path string\n     - matrix (object) see @Matrix\n     = (string) transformed path string\n    \\*/\n    Snap.path.map = mapPath;\n    Snap.path.toString = toString;\n    Snap.path.clone = pathClone;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var mmax = Math.max,\n        mmin = Math.min;\n\n    // Set\n    var Set = function (items) {\n        this.items = [];\n\tthis.bindings = {};\n        this.length = 0;\n        this.type = \"set\";\n        if (items) {\n            for (var i = 0, ii = items.length; i < ii; i++) {\n                if (items[i]) {\n                    this[this.items.length] = this.items[this.items.length] = items[i];\n                    this.length++;\n                }\n            }\n        }\n    },\n    setproto = Set.prototype;\n    /*\\\n     * Set.push\n     [ method ]\n     **\n     * Adds each argument to the current set\n     = (object) original element\n    \\*/\n    setproto.push = function () {\n        var item,\n            len;\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\n            item = arguments[i];\n            if (item) {\n                len = this.items.length;\n                this[len] = this.items[len] = item;\n                this.length++;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.pop\n     [ method ]\n     **\n     * Removes last element and returns it\n     = (object) element\n    \\*/\n    setproto.pop = function () {\n        this.length && delete this[this.length--];\n        return this.items.pop();\n    };\n    /*\\\n     * Set.forEach\n     [ method ]\n     **\n     * Executes given function for each element in the set\n     *\n     * If the function returns `false`, the loop stops running.\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Set object\n    \\*/\n    setproto.forEach = function (callback, thisArg) {\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            if (callback.call(thisArg, this.items[i], i) === false) {\n                return this;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.animate\n     [ method ]\n     **\n     * Animates each element in set in sync.\n     *\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     * or\n     - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n     > Usage\n     | // animate all elements in set to radius 10\n     | set.animate({r: 10}, 500, mina.easein);\n     | // or\n     | // animate first element to radius 10, but second to radius 20 and in different time\n     | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n     = (Element) the current element\n    \\*/\n    setproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Snap._.Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = easing.dur;\n            attrs = attrs.attr;\n        }\n        var args = arguments;\n        if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n            var each = true;\n        }\n        var begin,\n            handler = function () {\n                if (begin) {\n                    this.b = begin;\n                } else {\n                    begin = this.b;\n                }\n            },\n            cb = 0,\n            set = this,\n            callbacker = callback && function () {\n                if (++cb == set.length) {\n                    callback.call(this);\n                }\n            };\n        return this.forEach(function (el, i) {\n            eve.once(\"snap.animcreated.\" + el.id, handler);\n            if (each) {\n                args[i] && el.animate.apply(el, args[i]);\n            } else {\n                el.animate(attrs, ms, easing, callbacker);\n            }\n        });\n    };\n    /*\\\n     * Set.remove\n     [ method ]\n     **\n     * Removes all children of the set.\n     *\n     = (object) Set object\n    \\*/\n    setproto.remove = function () {\n        while (this.length) {\n            this.pop().remove();\n        }\n        return this;\n    };\n    /*\\\n     * Set.bind\n     [ method ]\n     **\n     * Specifies how to handle a specific attribute when applied\n     * to a set.\n     *\n     **\n     - attr (string) attribute name\n     - callback (function) function to run\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     - eattr (string) attribute on the element to bind the attribute to\n     = (object) Set object\n    \\*/\n    setproto.bind = function (attr, a, b) {\n        var data = {};\n        if (typeof a == \"function\") {\n            this.bindings[attr] = a;\n        } else {\n            var aname = b || attr;\n            this.bindings[attr] = function (v) {\n                data[aname] = v;\n                a.attr(data);\n            };\n        }\n        return this;\n    };\n    /*\\\n     * Set.attr\n     [ method ]\n     **\n     * Equivalent of @Element.attr.\n     = (object) Set object\n    \\*/\n    setproto.attr = function (value) {\n        var unbound = {};\n        for (var k in value) {\n            if (this.bindings[k]) {\n                this.bindings[k](value[k]);\n            } else {\n                unbound[k] = value[k];\n            }\n        }\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            this.items[i].attr(unbound);\n        }\n        return this;\n    };\n    /*\\\n     * Set.clear\n     [ method ]\n     **\n     * Removes all elements from the set\n    \\*/\n    setproto.clear = function () {\n        while (this.length) {\n            this.pop();\n        }\n    };\n    /*\\\n     * Set.splice\n     [ method ]\n     **\n     * Removes range of elements from the set\n     **\n     - index (number) position of the deletion\n     - count (number) number of element to remove\n     - insertion… (object) #optional elements to insert\n     = (object) set elements that were deleted\n    \\*/\n    setproto.splice = function (index, count, insertion) {\n        index = index < 0 ? mmax(this.length + index, 0) : index;\n        count = mmax(0, mmin(this.length - index, count));\n        var tail = [],\n            todel = [],\n            args = [],\n            i;\n        for (i = 2; i < arguments.length; i++) {\n            args.push(arguments[i]);\n        }\n        for (i = 0; i < count; i++) {\n            todel.push(this[index + i]);\n        }\n        for (; i < this.length - index; i++) {\n            tail.push(this[index + i]);\n        }\n        var arglen = args.length;\n        for (i = 0; i < arglen + tail.length; i++) {\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n        }\n        i = this.items.length = this.length -= count - arglen;\n        while (this[i]) {\n            delete this[i++];\n        }\n        return new Set(todel);\n    };\n    /*\\\n     * Set.exclude\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     - element (object) element to remove\n     = (boolean) `true` if object was found and removed from the set\n    \\*/\n    setproto.exclude = function (el) {\n        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n            this.splice(i, 1);\n            return true;\n        }\n        return false;\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Inserts set elements after given element.\n     **\n     - element (object) set will be inserted after this element\n     = (object) Set object\n    \\*/\n    setproto.insertAfter = function (el) {\n        var i = this.items.length;\n        while (i--) {\n            this.items[i].insertAfter(el);\n        }\n        return this;\n    };\n    /*\\\n     * Set.getBBox\n     [ method ]\n     **\n     * Union of all bboxes of the set. See @Element.getBBox.\n     = (object) bounding box descriptor. See @Element.getBBox.\n    \\*/\n    setproto.getBBox = function () {\n        var x = [],\n            y = [],\n            x2 = [],\n            y2 = [];\n        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n            var box = this.items[i].getBBox();\n            x.push(box.x);\n            y.push(box.y);\n            x2.push(box.x + box.width);\n            y2.push(box.y + box.height);\n        }\n        x = mmin.apply(0, x);\n        y = mmin.apply(0, y);\n        x2 = mmax.apply(0, x2);\n        y2 = mmax.apply(0, y2);\n        return {\n            x: x,\n            y: y,\n            x2: x2,\n            y2: y2,\n            width: x2 - x,\n            height: y2 - y,\n            cx: x + (x2 - x) / 2,\n            cy: y + (y2 - y) / 2\n        };\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Creates a clone of the set.\n     **\n     = (object) New Set object\n    \\*/\n    setproto.clone = function (s) {\n        s = new Set;\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            s.push(this.items[i].clone());\n        }\n        return s;\n    };\n    setproto.toString = function () {\n        return \"Snap\\u2018s set\";\n    };\n    setproto.type = \"set\";\n    // export\n    /*\\\n     * Snap.Set\n     [ property ]\n     **\n     * Set constructor.\n    \\*/\n    Snap.Set = Set;\n    /*\\\n     * Snap.set\n     [ method ]\n     **\n     * Creates a set and fills it with list of arguments.\n     **\n     = (object) New Set object\n     | var r = paper.rect(0, 0, 10, 10),\n     |     s1 = Snap.set(), // empty set\n     |     s2 = Snap.set(r, paper.circle(100, 100, 20)); // prefilled set\n    \\*/\n    Snap.set = function () {\n        var set = new Set;\n        if (arguments.length) {\n            set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n        }\n        return set;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var names = {},\n        reUnit = /[%a-z]+$/i,\n        Str = String;\n    names.stroke = names.fill = \"colour\";\n    function getEmpty(item) {\n        var l = item[0];\n        switch (l.toLowerCase()) {\n            case \"t\": return [l, 0, 0];\n            case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n            case \"r\": if (item.length == 4) {\n                return [l, 0, item[2], item[3]];\n            } else {\n                return [l, 0];\n            }\n            case \"s\": if (item.length == 5) {\n                return [l, 1, 1, item[3], item[4]];\n            } else if (item.length == 3) {\n                return [l, 1, 1];\n            } else {\n                return [l, 1];\n            }\n        }\n    }\n    function equaliseTransform(t1, t2, getBBox) {\n        t1 = t1 || new Snap.Matrix;\n        t2 = t2 || new Snap.Matrix;\n        t1 = Snap.parseTransformString(t1.toTransformString()) || [];\n        t2 = Snap.parseTransformString(t2.toTransformString()) || [];\n        var maxlength = Math.max(t1.length, t2.length),\n            from = [],\n            to = [],\n            i = 0, j, jj,\n            tt1, tt2;\n        for (; i < maxlength; i++) {\n            tt1 = t1[i] || getEmpty(t2[i]);\n            tt2 = t2[i] || getEmpty(tt1);\n            if (tt1[0] != tt2[0] ||\n                tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3]) ||\n                tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4])\n                ) {\n                    t1 = Snap._.transform2matrix(t1, getBBox());\n                    t2 = Snap._.transform2matrix(t2, getBBox());\n                    from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n                    to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n                    break;\n            }\n            from[i] = [];\n            to[i] = [];\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n                j in tt1 && (from[i][j] = tt1[j]);\n                j in tt2 && (to[i][j] = tt2[j]);\n            }\n        }\n        return {\n            from: path2array(from),\n            to: path2array(to),\n            f: getPath(from)\n        };\n    }\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    function getViewBox(val) {\n        return val.join(\" \");\n    }\n    function getColour(clr) {\n        return Snap.rgb(clr[0], clr[1], clr[2], clr[3]);\n    }\n    function getPath(path) {\n        var k = 0, i, ii, j, jj, out, a, b = [];\n        for (i = 0, ii = path.length; i < ii; i++) {\n            out = \"[\";\n            a = ['\"' + path[i][0] + '\"'];\n            for (j = 1, jj = path[i].length; j < jj; j++) {\n                a[j] = \"val[\" + k++ + \"]\";\n            }\n            out += a + \"]\";\n            b[i] = out;\n        }\n        return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n    }\n    function path2array(path) {\n        var out = [];\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            for (var j = 1, jj = path[i].length; j < jj; j++) {\n                out.push(path[i][j]);\n            }\n        }\n        return out;\n    }\n    function isNumeric(obj) {\n        return isFinite(obj);\n    }\n    function arrayEqual(arr1, arr2) {\n        if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n            return false;\n        }\n        return arr1.toString() == arr2.toString();\n    }\n    Element.prototype.equal = function (name, b) {\n        return eve(\"snap.util.equal\", this, name, b).firstDefined();\n    };\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this;\n        if (names[name] == \"colour\") {\n            A = Snap.color(a);\n            B = Snap.color(b);\n            return {\n                from: [A.r, A.g, A.b, A.opacity],\n                to: [B.r, B.g, B.b, B.opacity],\n                f: getColour\n            };\n        }\n        if (name == \"viewBox\") {\n            A = this.attr(name).vb.split(\" \").map(Number);\n            B = b.split(\" \").map(Number);\n            return {\n                from: A,\n                to: B,\n                f: getViewBox\n            };\n        }\n        if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n            if (typeof b == \"string\") {\n                b = Str(b).replace(/\\.{3}|\\u2026/g, a);\n            }\n            a = this.matrix;\n            if (!Snap._.rgTransform.test(b)) {\n                b = Snap._.transform2matrix(Snap._.svgTransform2string(b), this.getBBox());\n            } else {\n                b = Snap._.transform2matrix(b, this.getBBox());\n            }\n            return equaliseTransform(a, b, function () {\n                return el.getBBox(1);\n            });\n        }\n        if (name == \"d\" || name == \"path\") {\n            A = Snap.path.toCubic(a, b);\n            return {\n                from: path2array(A[0]),\n                to: path2array(A[1]),\n                f: getPath(A[0])\n            };\n        }\n        if (name == \"points\") {\n            A = Str(a).split(Snap._.separator);\n            B = Str(b).split(Snap._.separator);\n            return {\n                from: A,\n                to: B,\n                f: function (val) { return val; }\n            };\n        }\n        if (isNumeric(a) && isNumeric(b)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getNumber\n            };\n        }\n        var aUnit = a.match(reUnit),\n            bUnit = Str(b).match(reUnit);\n        if (aUnit && arrayEqual(aUnit, bUnit)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getUnit(aUnit)\n            };\n        } else {\n            return {\n                from: this.asPX(name),\n                to: this.asPX(name, b),\n                f: getNumber\n            };\n        }\n    });\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n    has = \"hasOwnProperty\",\n    supportsTouch = \"createTouch\" in glob.doc,\n    events = [\n        \"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\",\n        \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\",\n        \"touchcancel\"\n    ],\n    touchMap = {\n        mousedown: \"touchstart\",\n        mousemove: \"touchmove\",\n        mouseup: \"touchend\"\n    },\n    getScroll = function (xy, el) {\n        var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n            doc = el && el.node ? el.node.ownerDocument : glob.doc;\n        return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n    },\n    preventDefault = function () {\n        this.returnValue = false;\n    },\n    preventTouch = function () {\n        return this.originalEvent.preventDefault();\n    },\n    stopPropagation = function () {\n        this.cancelBubble = true;\n    },\n    stopTouch = function () {\n        return this.originalEvent.stopPropagation();\n    },\n    addEvent = function (obj, type, fn, element) {\n        var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n            f = function (e) {\n                var scrollY = getScroll(\"y\", element),\n                    scrollX = getScroll(\"x\", element);\n                if (supportsTouch && touchMap[has](type)) {\n                    for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n                        if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n                            var olde = e;\n                            e = e.targetTouches[i];\n                            e.originalEvent = olde;\n                            e.preventDefault = preventTouch;\n                            e.stopPropagation = stopTouch;\n                            break;\n                        }\n                    }\n                }\n                var x = e.clientX + scrollX,\n                    y = e.clientY + scrollY;\n                return fn.call(element, e, x, y);\n            };\n\n        if (type !== realName) {\n            obj.addEventListener(type, f, false);\n        }\n\n        obj.addEventListener(realName, f, false);\n\n        return function () {\n            if (type !== realName) {\n                obj.removeEventListener(type, f, false);\n            }\n\n            obj.removeEventListener(realName, f, false);\n            return true;\n        };\n    },\n    drag = [],\n    dragMove = function (e) {\n        var x = e.clientX,\n            y = e.clientY,\n            scrollY = getScroll(\"y\"),\n            scrollX = getScroll(\"x\"),\n            dragi,\n            j = drag.length;\n        while (j--) {\n            dragi = drag[j];\n            if (supportsTouch) {\n                var i = e.touches && e.touches.length,\n                    touch;\n                while (i--) {\n                    touch = e.touches[i];\n                    if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n                        x = touch.clientX;\n                        y = touch.clientY;\n                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n                        break;\n                    }\n                }\n            } else {\n                e.preventDefault();\n            }\n            var node = dragi.el.node,\n                o,\n                next = node.nextSibling,\n                parent = node.parentNode,\n                display = node.style.display;\n            // glob.win.opera && parent.removeChild(node);\n            // node.style.display = \"none\";\n            // o = dragi.el.paper.getElementByPoint(x, y);\n            // node.style.display = display;\n            // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n            // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n            x += scrollX;\n            y += scrollY;\n            eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n        }\n    },\n    dragUp = function (e) {\n        Snap.unmousemove(dragMove).unmouseup(dragUp);\n        var i = drag.length,\n            dragi;\n        while (i--) {\n            dragi = drag[i];\n            dragi.el._drag = {};\n            eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n            eve.off(\"snap.drag.*.\" + dragi.el.id);\n        }\n        drag = [];\n    };\n    /*\\\n     * Element.click\n     [ method ]\n     **\n     * Adds a click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unclick\n     [ method ]\n     **\n     * Removes a click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.dblclick\n     [ method ]\n     **\n     * Adds a double click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.undblclick\n     [ method ]\n     **\n     * Removes a double click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousedown\n     [ method ]\n     **\n     * Adds a mousedown event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousedown\n     [ method ]\n     **\n     * Removes a mousedown event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousemove\n     [ method ]\n     **\n     * Adds a mousemove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousemove\n     [ method ]\n     **\n     * Removes a mousemove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseout\n     [ method ]\n     **\n     * Adds a mouseout event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseout\n     [ method ]\n     **\n     * Removes a mouseout event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseover\n     [ method ]\n     **\n     * Adds a mouseover event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseover\n     [ method ]\n     **\n     * Removes a mouseover event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseup\n     [ method ]\n     **\n     * Adds a mouseup event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseup\n     [ method ]\n     **\n     * Removes a mouseup event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchstart\n     [ method ]\n     **\n     * Adds a touchstart event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchstart\n     [ method ]\n     **\n     * Removes a touchstart event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchmove\n     [ method ]\n     **\n     * Adds a touchmove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchmove\n     [ method ]\n     **\n     * Removes a touchmove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchend\n     [ method ]\n     **\n     * Adds a touchend event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchend\n     [ method ]\n     **\n     * Removes a touchend event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchcancel\n     [ method ]\n     **\n     * Adds a touchcancel event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchcancel\n     [ method ]\n     **\n     * Removes a touchcancel event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    for (var i = events.length; i--;) {\n        (function (eventName) {\n            Snap[eventName] = elproto[eventName] = function (fn, scope) {\n                if (Snap.is(fn, \"function\")) {\n                    this.events = this.events || [];\n                    this.events.push({\n                        name: eventName,\n                        f: fn,\n                        unbind: addEvent(this.node || document, eventName, fn, scope || this)\n                    });\n                } else {\n                    for (var i = 0, ii = this.events.length; i < ii; i++) if (this.events[i].name == eventName) {\n                        try {\n                            this.events[i].f.call(this);\n                        } catch (e) {}\n                    }\n                }\n                return this;\n            };\n            Snap[\"un\" + eventName] =\n            elproto[\"un\" + eventName] = function (fn) {\n                var events = this.events || [],\n                    l = events.length;\n                while (l--) if (events[l].name == eventName &&\n                               (events[l].f == fn || !fn)) {\n                    events[l].unbind();\n                    events.splice(l, 1);\n                    !events.length && delete this.events;\n                    return this;\n                }\n                return this;\n            };\n        })(events[i]);\n    }\n    /*\\\n     * Element.hover\n     [ method ]\n     **\n     * Adds hover event handlers to the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     - icontext (object) #optional context for hover in handler\n     - ocontext (object) #optional context for hover out handler\n     = (object) @Element\n    \\*/\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n    };\n    /*\\\n     * Element.unhover\n     [ method ]\n     **\n     * Removes hover event handlers from the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     = (object) @Element\n    \\*/\n    elproto.unhover = function (f_in, f_out) {\n        return this.unmouseover(f_in).unmouseout(f_out);\n    };\n    var draggable = [];\n    // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n    // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n    // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n    // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n    /*\\\n     * Element.drag\n     [ method ]\n     **\n     * Adds event handlers for an element's drag gesture\n     **\n     - onmove (function) handler for moving\n     - onstart (function) handler for drag start\n     - onend (function) handler for drag end\n     - mcontext (object) #optional context for moving handler\n     - scontext (object) #optional context for drag start handler\n     - econtext (object) #optional context for drag end handler\n     * Additionaly following `drag` events are triggered: `drag.start.<id>` on start, \n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element \n     * `drag.over.<id>` fires as well.\n     *\n     * Start event and start handler are called in specified context or in context of the element with following parameters:\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * Move event and move handler are called in specified context or in context of the element with following parameters:\n     o dx (number) shift by x from the start point\n     o dy (number) shift by y from the start point\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * End event and end handler are called in specified context or in context of the element with following parameters:\n     o event (object) DOM event object\n     = (object) @Element\n    \\*/\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n        var el = this;\n        if (!arguments.length) {\n            var origTransform;\n            return el.drag(function (dx, dy) {\n                this.attr({\n                    transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n                });\n            }, function () {\n                origTransform = this.transform().local;\n            });\n        }\n        function start(e, x, y) {\n            (e.originalEvent || e).preventDefault();\n            el._drag.x = x;\n            el._drag.y = y;\n            el._drag.id = e.identifier;\n            !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n            drag.push({el: el, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n            onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n            onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n            onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n            eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n        }\n        function init(e, x, y) {\n            eve(\"snap.draginit.\" + el.id, el, e, x, y);\n        }\n        eve.on(\"snap.draginit.\" + el.id, start);\n        el._drag = {};\n        draggable.push({el: el, start: start, init: init});\n        el.mousedown(init);\n        return el;\n    };\n    /*\n     * Element.onDragOver\n     [ method ]\n     **\n     * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n     - f (function) handler for event, first argument would be the element you are dragging over\n    \\*/\n    // elproto.onDragOver = function (f) {\n    //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n    // };\n    /*\\\n     * Element.undrag\n     [ method ]\n     **\n     * Removes all drag event handlers from the given element\n    \\*/\n    elproto.undrag = function () {\n        var i = draggable.length;\n        while (i--) if (draggable[i].el == this) {\n            this.unmousedown(draggable[i].init);\n            draggable.splice(i, 1);\n            eve.unbind(\"snap.drag.*.\" + this.id);\n            eve.unbind(\"snap.draginit.\" + this.id);\n        }\n        !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        pproto = Paper.prototype,\n        rgurl = /^\\s*url\\((.+)\\)/,\n        Str = String,\n        $ = Snap._.$;\n    Snap.filter = {};\n    /*\\\n     * Paper.filter\n     [ method ]\n     **\n     * Creates a `<filter>` element\n     **\n     - filstr (string) SVG fragment of filter provided as a string\n     = (object) @Element\n     * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n     > Usage\n     | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    pproto.filter = function (filstr) {\n        var paper = this;\n        if (paper.type != \"svg\") {\n            paper = paper.paper;\n        }\n        var f = Snap.parse(Str(filstr)),\n            id = Snap._.id(),\n            width = paper.node.offsetWidth,\n            height = paper.node.offsetHeight,\n            filter = $(\"filter\");\n        $(filter, {\n            id: id,\n            filterUnits: \"userSpaceOnUse\"\n        });\n        filter.appendChild(f.node);\n        paper.defs.appendChild(filter);\n        return new Element(filter);\n    };\n\n    eve.on(\"snap.util.getattr.filter\", function () {\n        eve.stop();\n        var p = $(this.node, \"filter\");\n        if (p) {\n            var match = Str(p).match(rgurl);\n            return match && Snap.select(match[1]);\n        }\n    });\n    eve.on(\"snap.util.attr.filter\", function (value) {\n        if (value instanceof Element && value.type == \"filter\") {\n            eve.stop();\n            var id = value.node.id;\n            if (!id) {\n                $(value.node, {id: value.id});\n                id = value.id;\n            }\n            $(this.node, {\n                filter: Snap.url(id)\n            });\n        }\n        if (!value || value == \"none\") {\n            eve.stop();\n            this.node.removeAttribute(\"filter\");\n        }\n    });\n    /*\\\n     * Snap.filter.blur\n     [ method ]\n     **\n     * Returns an SVG markup string for the blur filter\n     **\n     - x (number) amount of horizontal blur, in pixels\n     - y (number) #optional amount of vertical blur, in pixels\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.blur(5, 10)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.blur = function (x, y) {\n        if (x == null) {\n            x = 2;\n        }\n        var def = y == null ? x : [x, y];\n        return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n            def: def\n        });\n    };\n    Snap.filter.blur.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.shadow\n     [ method ]\n     **\n     * Returns an SVG markup string for the shadow filter\n     **\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - blur (number) #optional amount of blur\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * which makes blur default to `4`. Or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - opacity (number) #optional `0..1` opacity of the shadow\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.shadow(0, 2, .3)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n        if (opacity == null) {\n            if (color == null) {\n                opacity = blur;\n                blur = 4;\n                color = \"#000\";\n            } else {\n                opacity = color;\n                color = blur;\n                blur = 4;\n            }\n        }\n        if (blur == null) {\n            blur = 4;\n        }\n        if (opacity == null) {\n            opacity = 1;\n        }\n        if (dx == null) {\n            dx = 0;\n            dy = 2;\n        }\n        if (dy == null) {\n            dy = dx;\n        }\n        color = Snap.color(color);\n        return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n            color: color,\n            dx: dx,\n            dy: dy,\n            blur: blur,\n            opacity: opacity\n        });\n    };\n    Snap.filter.shadow.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.grayscale\n     [ method ]\n     **\n     * Returns an SVG markup string for the grayscale filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.grayscale = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n            a: 0.2126 + 0.7874 * (1 - amount),\n            b: 0.7152 - 0.7152 * (1 - amount),\n            c: 0.0722 - 0.0722 * (1 - amount),\n            d: 0.2126 - 0.2126 * (1 - amount),\n            e: 0.7152 + 0.2848 * (1 - amount),\n            f: 0.0722 - 0.0722 * (1 - amount),\n            g: 0.2126 - 0.2126 * (1 - amount),\n            h: 0.0722 + 0.9278 * (1 - amount)\n        });\n    };\n    Snap.filter.grayscale.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.sepia\n     [ method ]\n     **\n     * Returns an SVG markup string for the sepia filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.sepia = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n            a: 0.393 + 0.607 * (1 - amount),\n            b: 0.769 - 0.769 * (1 - amount),\n            c: 0.189 - 0.189 * (1 - amount),\n            d: 0.349 - 0.349 * (1 - amount),\n            e: 0.686 + 0.314 * (1 - amount),\n            f: 0.168 - 0.168 * (1 - amount),\n            g: 0.272 - 0.272 * (1 - amount),\n            h: 0.534 - 0.534 * (1 - amount),\n            i: 0.131 + 0.869 * (1 - amount)\n        });\n    };\n    Snap.filter.sepia.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.saturate\n     [ method ]\n     **\n     * Returns an SVG markup string for the saturate filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.saturate = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n            amount: 1 - amount\n        });\n    };\n    Snap.filter.saturate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.hueRotate\n     [ method ]\n     **\n     * Returns an SVG markup string for the hue-rotate filter\n     **\n     - angle (number) angle of rotation\n     = (string) filter representation\n    \\*/\n    Snap.filter.hueRotate = function (angle) {\n        angle = angle || 0;\n        return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n            angle: angle\n        });\n    };\n    Snap.filter.hueRotate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.invert\n     [ method ]\n     **\n     * Returns an SVG markup string for the invert filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.invert = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n//        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n        return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: 1 - amount\n        });\n    };\n    Snap.filter.invert.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.brightness\n     [ method ]\n     **\n     * Returns an SVG markup string for the brightness filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.brightness = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n            amount: amount\n        });\n    };\n    Snap.filter.brightness.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.contrast\n     [ method ]\n     **\n     * Returns an SVG markup string for the contrast filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.contrast = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: .5 - amount / 2\n        });\n    };\n    Snap.filter.contrast.toString = function () {\n        return this();\n    };\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var box = Snap._.box,\n        is = Snap.is,\n        firstLetter = /^[^a-z]*([tbmlrc])/i,\n        toString = function () {\n            return \"T\" + this.dx + \",\" + this.dy;\n        };\n    /*\\\n     * Element.getAlign\n     [ method ]\n     **\n     * Returns shift needed to align the element relatively to given element.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n     > Usage\n     | el.transform(el.getAlign(el2, \"top\"));\n     * or\n     | var dy = el.getAlign(el2, \"top\").dy;\n    \\*/\n    Element.prototype.getAlign = function (el, way) {\n        if (way == null && is(el, \"string\")) {\n            way = el;\n            el = null;\n        }\n        el = el || this.paper;\n        var bx = el.getBBox ? el.getBBox() : box(el),\n            bb = this.getBBox(),\n            out = {};\n        way = way && way.match(firstLetter);\n        way = way ? way[1].toLowerCase() : \"c\";\n        switch (way) {\n            case \"t\":\n                out.dx = 0;\n                out.dy = bx.y - bb.y;\n            break;\n            case \"b\":\n                out.dx = 0;\n                out.dy = bx.y2 - bb.y2;\n            break;\n            case \"m\":\n                out.dx = 0;\n                out.dy = bx.cy - bb.cy;\n            break;\n            case \"l\":\n                out.dx = bx.x - bb.x;\n                out.dy = 0;\n            break;\n            case \"r\":\n                out.dx = bx.x2 - bb.x2;\n                out.dy = 0;\n            break;\n            default:\n                out.dx = bx.cx - bb.cx;\n                out.dy = 0;\n            break;\n        }\n        out.toString = toString;\n        return out;\n    };\n    /*\\\n     * Element.align\n     [ method ]\n     **\n     * Aligns the element relatively to given one via transformation.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object) this element\n     > Usage\n     | el.align(el2, \"top\");\n     * or\n     | el.align(\"middle\");\n    \\*/\n    Element.prototype.align = function (el, way) {\n        return this.transform(\"...\" + this.getAlign(el, way));\n    };\n});\n\n// Copyright (c) 2016 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        has = \"hasOwnProperty\";\n    function slice(from, to, f) {\n        return function (arr) {\n            var res = arr.slice(from, to);\n            if (res.length == 1) {\n                res = res[0];\n            }\n            return f ? f(res) : res;\n        };\n    }\n    var Animation = function (attr, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        this.attr = attr;\n        this.dur = ms;\n        easing && (this.easing = easing);\n        callback && (this.callback = callback);\n    };\n    Snap._.Animation = Animation;\n    /*\\\n     * Snap.animation\n     [ method ]\n     **\n     * Creates an animation object\n     **\n     - attr (object) attributes of final destination\n     - duration (number) duration of the animation, in milliseconds\n     - easing (function) #optional one of easing functions of @mina or custom one\n     - callback (function) #optional callback function that fires when animation ends\n     = (object) animation object\n    \\*/\n    Snap.animation = function (attr, ms, easing, callback) {\n        return new Animation(attr, ms, easing, callback);\n    };\n    /*\\\n     * Element.inAnim\n     [ method ]\n     **\n     * Returns a set of animations that may be able to manipulate the current element\n     **\n     = (object) in format:\n     o {\n     o     anim (object) animation object,\n     o     mina (object) @mina object,\n     o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n    \\*/\n    elproto.inAnim = function () {\n        var el = this,\n            res = [];\n        for (var id in el.anims) if (el.anims[has](id)) {\n            (function (a) {\n                res.push({\n                    anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n                    mina: a,\n                    curStatus: a.status(),\n                    status: function (val) {\n                        return a.status(val);\n                    },\n                    stop: function () {\n                        a.stop();\n                    }\n                });\n            }(el.anims[id]));\n        }\n        return res;\n    };\n    /*\\\n     * Snap.animate\n     [ method ]\n     **\n     * Runs generic animation of one number into another with a caring function\n     **\n     - from (number|array) number or array of numbers\n     - to (number|array) number or array of numbers\n     - setter (function) caring function that accepts one number argument\n     - duration (number) duration, in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function to execute when animation ends\n     = (object) animation object in @mina format\n     o {\n     o     id (string) animation id, consider it read-only,\n     o     duration (function) gets or sets the duration of the animation,\n     o     easing (function) easing,\n     o     speed (function) gets or sets the speed of the animation,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n     | var rect = Snap().rect(0, 0, 10, 10);\n     | Snap.animate(0, 10, function (val) {\n     |     rect.attr({\n     |         x: val\n     |     });\n     | }, 1000);\n     | // in given context is equivalent to\n     | rect.animate({x: 10}, 1000);\n    \\*/\n    Snap.animate = function (from, to, setter, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        var now = mina.time(),\n            anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n        callback && eve.once(\"mina.finish.\" + anim.id, callback);\n        return anim;\n    };\n    /*\\\n     * Element.stop\n     [ method ]\n     **\n     * Stops all the animations for the current element\n     **\n     = (Element) the current element\n    \\*/\n    elproto.stop = function () {\n        var anims = this.inAnim();\n        for (var i = 0, ii = anims.length; i < ii; i++) {\n            anims[i].stop();\n        }\n        return this;\n    };\n    /*\\\n     * Element.animate\n     [ method ]\n     **\n     * Animates the given attributes of the element\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     = (Element) the current element\n    \\*/\n    elproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = attrs.dur;\n            attrs = attrs.attr;\n        }\n        var fkeys = [], tkeys = [], keys = {}, from, to, f, eq,\n            el = this;\n        for (var key in attrs) if (attrs[has](key)) {\n            if (el.equal) {\n                eq = el.equal(key, Str(attrs[key]));\n                from = eq.from;\n                to = eq.to;\n                f = eq.f;\n            } else {\n                from = +el.attr(key);\n                to = +attrs[key];\n            }\n            var len = is(from, \"array\") ? from.length : 1;\n            keys[key] = slice(fkeys.length, fkeys.length + len, f);\n            fkeys = fkeys.concat(from);\n            tkeys = tkeys.concat(to);\n        }\n        var now = mina.time(),\n            anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n                var attr = {};\n                for (var key in keys) if (keys[has](key)) {\n                    attr[key] = keys[key](val);\n                }\n                el.attr(attr);\n            }, easing);\n        el.anims[anim.id] = anim;\n        anim._attrs = attrs;\n        anim._callback = callback;\n        eve(\"snap.animcreated.\" + el.id, anim);\n        eve.once(\"mina.finish.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n            callback && callback.call(el);\n        });\n        eve.once(\"mina.stop.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n        });\n        return el;\n    };\n});\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    // Colours are from https://www.materialui.co\n    var red         = \"#ffebee#ffcdd2#ef9a9a#e57373#ef5350#f44336#e53935#d32f2f#c62828#b71c1c#ff8a80#ff5252#ff1744#d50000\",\n        pink        = \"#FCE4EC#F8BBD0#F48FB1#F06292#EC407A#E91E63#D81B60#C2185B#AD1457#880E4F#FF80AB#FF4081#F50057#C51162\",\n        purple      = \"#F3E5F5#E1BEE7#CE93D8#BA68C8#AB47BC#9C27B0#8E24AA#7B1FA2#6A1B9A#4A148C#EA80FC#E040FB#D500F9#AA00FF\",\n        deeppurple  = \"#EDE7F6#D1C4E9#B39DDB#9575CD#7E57C2#673AB7#5E35B1#512DA8#4527A0#311B92#B388FF#7C4DFF#651FFF#6200EA\",\n        indigo      = \"#E8EAF6#C5CAE9#9FA8DA#7986CB#5C6BC0#3F51B5#3949AB#303F9F#283593#1A237E#8C9EFF#536DFE#3D5AFE#304FFE\",\n        blue        = \"#E3F2FD#BBDEFB#90CAF9#64B5F6#64B5F6#2196F3#1E88E5#1976D2#1565C0#0D47A1#82B1FF#448AFF#2979FF#2962FF\",\n        lightblue   = \"#E1F5FE#B3E5FC#81D4FA#4FC3F7#29B6F6#03A9F4#039BE5#0288D1#0277BD#01579B#80D8FF#40C4FF#00B0FF#0091EA\",\n        cyan        = \"#E0F7FA#B2EBF2#80DEEA#4DD0E1#26C6DA#00BCD4#00ACC1#0097A7#00838F#006064#84FFFF#18FFFF#00E5FF#00B8D4\",\n        teal        = \"#E0F2F1#B2DFDB#80CBC4#4DB6AC#26A69A#009688#00897B#00796B#00695C#004D40#A7FFEB#64FFDA#1DE9B6#00BFA5\",\n        green       = \"#E8F5E9#C8E6C9#A5D6A7#81C784#66BB6A#4CAF50#43A047#388E3C#2E7D32#1B5E20#B9F6CA#69F0AE#00E676#00C853\",\n        lightgreen  = \"#F1F8E9#DCEDC8#C5E1A5#AED581#9CCC65#8BC34A#7CB342#689F38#558B2F#33691E#CCFF90#B2FF59#76FF03#64DD17\",\n        lime        = \"#F9FBE7#F0F4C3#E6EE9C#DCE775#D4E157#CDDC39#C0CA33#AFB42B#9E9D24#827717#F4FF81#EEFF41#C6FF00#AEEA00\",\n        yellow      = \"#FFFDE7#FFF9C4#FFF59D#FFF176#FFEE58#FFEB3B#FDD835#FBC02D#F9A825#F57F17#FFFF8D#FFFF00#FFEA00#FFD600\",\n        amber       = \"#FFF8E1#FFECB3#FFE082#FFD54F#FFCA28#FFC107#FFB300#FFA000#FF8F00#FF6F00#FFE57F#FFD740#FFC400#FFAB00\",\n        orange      = \"#FFF3E0#FFE0B2#FFCC80#FFB74D#FFA726#FF9800#FB8C00#F57C00#EF6C00#E65100#FFD180#FFAB40#FF9100#FF6D00\",\n        deeporange  = \"#FBE9E7#FFCCBC#FFAB91#FF8A65#FF7043#FF5722#F4511E#E64A19#D84315#BF360C#FF9E80#FF6E40#FF3D00#DD2C00\",\n        brown       = \"#EFEBE9#D7CCC8#BCAAA4#A1887F#8D6E63#795548#6D4C41#5D4037#4E342E#3E2723\",\n        grey        = \"#FAFAFA#F5F5F5#EEEEEE#E0E0E0#BDBDBD#9E9E9E#757575#616161#424242#212121\",\n        bluegrey    = \"#ECEFF1#CFD8DC#B0BEC5#90A4AE#78909C#607D8B#546E7A#455A64#37474F#263238\";\n    /*\\\n     * Snap.mui\n     [ property ]\n     **\n     * Contain Material UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.mui.deeppurple, stroke: Snap.mui.amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.mui = {};\n    /*\\\n     * Snap.flat\n     [ property ]\n     **\n     * Contain Flat UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.flat.carrot, stroke: Snap.flat.wetasphalt});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.flat = {};\n    function saveColor(colors) {\n        colors = colors.split(/(?=#)/);\n        var color = new String(colors[5]);\n        color[50] = colors[0];\n        color[100] = colors[1];\n        color[200] = colors[2];\n        color[300] = colors[3];\n        color[400] = colors[4];\n        color[500] = colors[5];\n        color[600] = colors[6];\n        color[700] = colors[7];\n        color[800] = colors[8];\n        color[900] = colors[9];\n        if (colors[10]) {\n            color.A100 = colors[10];\n            color.A200 = colors[11];\n            color.A400 = colors[12];\n            color.A700 = colors[13];\n        }\n        return color;\n    }\n    Snap.mui.red = saveColor(red);\n    Snap.mui.pink = saveColor(pink);\n    Snap.mui.purple = saveColor(purple);\n    Snap.mui.deeppurple = saveColor(deeppurple);\n    Snap.mui.indigo = saveColor(indigo);\n    Snap.mui.blue = saveColor(blue);\n    Snap.mui.lightblue = saveColor(lightblue);\n    Snap.mui.cyan = saveColor(cyan);\n    Snap.mui.teal = saveColor(teal);\n    Snap.mui.green = saveColor(green);\n    Snap.mui.lightgreen = saveColor(lightgreen);\n    Snap.mui.lime = saveColor(lime);\n    Snap.mui.yellow = saveColor(yellow);\n    Snap.mui.amber = saveColor(amber);\n    Snap.mui.orange = saveColor(orange);\n    Snap.mui.deeporange = saveColor(deeporange);\n    Snap.mui.brown = saveColor(brown);\n    Snap.mui.grey = saveColor(grey);\n    Snap.mui.bluegrey = saveColor(bluegrey);\n    Snap.flat.turquoise = \"#1abc9c\";\n    Snap.flat.greensea = \"#16a085\";\n    Snap.flat.sunflower = \"#f1c40f\";\n    Snap.flat.orange = \"#f39c12\";\n    Snap.flat.emerland = \"#2ecc71\";\n    Snap.flat.nephritis = \"#27ae60\";\n    Snap.flat.carrot = \"#e67e22\";\n    Snap.flat.pumpkin = \"#d35400\";\n    Snap.flat.peterriver = \"#3498db\";\n    Snap.flat.belizehole = \"#2980b9\";\n    Snap.flat.alizarin = \"#e74c3c\";\n    Snap.flat.pomegranate = \"#c0392b\";\n    Snap.flat.amethyst = \"#9b59b6\";\n    Snap.flat.wisteria = \"#8e44ad\";\n    Snap.flat.clouds = \"#ecf0f1\";\n    Snap.flat.silver = \"#bdc3c7\";\n    Snap.flat.wetasphalt = \"#34495e\";\n    Snap.flat.midnightblue = \"#2c3e50\";\n    Snap.flat.concrete = \"#95a5a6\";\n    Snap.flat.asbestos = \"#7f8c8d\";\n    /*\\\n     * Snap.importMUIColors\n     [ method ]\n     **\n     * Imports Material UI colours into global object.\n     | Snap.importMUIColors();\n     | Snap().rect(0, 0, 10, 10).attr({fill: deeppurple, stroke: amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.importMUIColors = function () {\n        for (var color in Snap.mui) {\n            if (Snap.mui.hasOwnProperty(color)) {\n                window[color] = Snap.mui[color];\n            }\n        }\n    };\n});\n\nmodule.exports = Snap\n","import D from \"DOMArray\";\nimport Instrument from \"./instrument\";\nimport { POC, C2D } from \"./geometry/angle\";\nimport Vector2D from \"./geometry/vector2d\";\nimport {\n  circle,\n  centeredText,\n  tick,\n  rectangle,\n  arc\n} from \"./graphics/primitives\";\nimport { arrowNeedle } from \"./needles\";\nimport { interval } from \"./utils/time\";\n\nimport Snap from \"snapsvg-cjs\";\n\n/**\n * Regardless of our DOM element size we will render using the constants below\n * and use a transform to scale the resulting SVG to the required size, without altering the aspect ratio\n */\n\n// inset of edges of element\nconst I = 0;\n// width and height\nconst W = 400;\nconst H = 400;\n// outer radius\nconst R = (Math.min(W, H) - I) / 2;\n// center\nconst CX = W / 2;\nconst CY = H / 2;\nconst CENTER = new Vector2D(CX, CY);\n\n// thickness of outer three rings of case\nconst CASE1 = 8;\nconst CASE2 = 10;\nconst CASE3 = 14;\n\n// outer radius of all tick marks\nconst TICK1 = R - (CASE1 + CASE2 + CASE3);\n// inner radius of small ticks\nconst TICK2 = TICK1 - 25;\n// inner radius of large ticks\nconst TICK3 = TICK1 - 40;\n\n// green arc radius and thickness\nconst ARC_WIDTH = 20;\nconst ARC_RADIUS = TICK2 + ARC_WIDTH / 2;\n\n// radius of  large digits marking hundreds of feet\nconst LABEL_RADIUS = TICK3 - 25;\n\n// hundreds needle, other needles are derived from these\nconst POINTER_SMALL_RADIUS = 40;\nconst POINTER_WIDTH = 10;\nconst POINTER_ARROW = 6;\nconst POINTER_RADIUS = TICK2 - POINTER_ARROW;\n\n// RPM limits and ranges\nconst MIN_RPM = 0;\nconst MAX_RPM = 3500;\nconst MIN_GREEN = 2100;\nconst MAX_GREEN = 2700;\nconst REDLINE = 2700;\n\n// angle at low stop of tacometer and angle sweep to the\n// max rpm point\nconst START_ANGLE = 145;\nconst ANGLE_SWEEP = 250;\n\n// dimensions of individual hours window\nconst HOUR_W = 24;\nconst HOUR_H = 30;\nconst HOUR_P = 8;\nconst HOUR_Y = CY + 70;\n\nexport default class TachometerAnalog extends Instrument {\n  constructor(options) {\n    super(\n      Object.assign(\n        {\n          width: W,\n          height: H\n        },\n        options\n      )\n    );\n\n    console.assert(\n      this.parentElement,\n      \"instrument requires a parent to attach to\"\n    );\n\n    this.template = D(`\n      <svg r=\"svg\" height=\"${W}\" width=\"${H}\" xmlns=\"http://www.w3.org/2000/svg\"></svg>\n    `);\n    this.template.zip(this);\n    this.snap = new Snap(this.svg.el);\n\n    this.renderImmutable();\n    this.renderText();\n    this.renderHours();\n    this.createNeedle();\n    this.setNeedle(this.airplane.rpm);\n\n    // listen for changes to the airplane\n    this.onAirplaneChanged = this.onAirplaneChanged.bind(this);\n    this.airplane.addListener(this.onAirplaneChanged);\n    this.addDisposable(() =>\n      this.airplane.removeListener(this.onAirplaneChanged)\n    );\n\n    this.template.appendTo(this.parentElement);\n  }\n\n  /**\n   * enter demonstration mode\n   */\n  demoStart() {\n    this.addLerp(\n      \"demo\",\n      interval(() => {\n        this.airplane.setRPM(MIN_RPM + (REDLINE - MIN_RPM) * Math.random());\n      }, 5000)\n    );\n  }\n\n  /**\n   * cancel demo mode\n   */\n  demoStop() {\n    this.cancelLerp(\"demo\");\n  }\n\n  /**\n   * render the non changing parts of the instrument\n   */\n  renderImmutable() {\n    this.renderCase();\n    this.renderDial();\n    this.renderShadow();\n  }\n\n  /**\n   * fixed text\n   */\n  renderText() {\n    centeredText(this.snap, new Vector2D(CX, CY - 55), \"RPM\", \"white\", \"24px\");\n    centeredText(\n      this.snap,\n      new Vector2D(CX, CY - 33),\n      \"X 100\",\n      \"white\",\n      \"14px\"\n    );\n  }\n\n  /**\n   * fake hours windows\n   */\n  renderHours() {\n    // five windows including 10ths\n    const n = 5;\n    const width = n * HOUR_W + (n - 1) * HOUR_P;\n    const left = CX - width / 2;\n    for (let i = 0; i < n; i += 1) {\n      const x = left + i * (HOUR_W + HOUR_P);\n      rectangle(\n        this.snap,\n        x,\n        HOUR_Y,\n        HOUR_W,\n        HOUR_H,\n        this.snap.gradient(`l(0, 0, 1, 1)#222:0-#666:100`),\n        1,\n        i === n - 1\n          ? \"whitesmoke\"\n          : this.snap.gradient(`l(0.5, 0, 0.5, 1)#000:0-#444:50-#000:100`),\n        3,\n        3\n      );\n      const position = new Vector2D(x + HOUR_W / 2, HOUR_Y + HOUR_H / 2);\n      centeredText(\n        this.snap,\n        position,\n        Math.floor(Math.random() * 10) % 10,\n        i === n - 1 ? \"black\" : \"white\",\n        \"20px\",\n        \"Verdana\"\n      );\n    }\n    centeredText(\n      this.snap,\n      new Vector2D(CX, HOUR_Y + HOUR_H + 12),\n      \"HOURS\",\n      \"white\",\n      \"14px\",\n      \"Verdana\"\n    );\n  }\n\n  /**\n   * render the shared three outer rings of the bezel\n   */\n  renderCase() {\n    // draw three outer rings of the instrument case\n    circle(\n      this.snap,\n      CENTER,\n      R - CASE1 / 2,\n      this.snap.gradient(`l(0, 0, 1, 1)#FFF:0-#888:20-#111:100`),\n      CASE1,\n      \"black\"\n    );\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 / 2),\n      this.snap.gradient(`l(0, 0, 1, 1)#111-#666`),\n      CASE2,\n      \"black\"\n    );\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 + CASE3 / 2),\n      this.snap.gradient(`l(0, 0, 1, 1)#000:0-#888:70-#FFF:100`),\n      CASE3,\n      this.snap.gradient(\"l(0, 0, 1, 1)#000:0-#222:100\")\n    );\n  }\n\n  /**\n   * render tick marks around face and numbers for 100's of feet\n   */\n  renderDial() {\n    // draw green arc under all ticks\n    arc(\n      this.snap,\n      CENTER,\n      ARC_RADIUS,\n      ARC_WIDTH,\n      0,\n      \"transparent\",\n      \"#00EE00\",\n      this.rpmToAngle(MIN_GREEN),\n      this.rpmToAngle(MAX_GREEN),\n      true\n    );\n    // draw small/large ticks across entire RPM range\n    for (let i = MIN_RPM; i <= MAX_RPM; i += 100) {\n      // large or small\n      if (i % 500 === 0) {\n        tick(this.snap, CENTER, this.rpmToAngle(i), TICK1, TICK3, 5, \"white\");\n        // draw RPM text and 500 intervals except and upper and lower limit\n        if (i > MIN_RPM && i < MAX_RPM) {\n          const position = POC(CENTER, LABEL_RADIUS, this.rpmToAngle(i));\n          centeredText(\n            this.snap,\n            position,\n            Math.floor(i / 100),\n            \"white\",\n            \"34px\",\n            \"Verdana\"\n          );\n        }\n      } else {\n        tick(this.snap, CENTER, this.rpmToAngle(i), TICK1, TICK2, 3, \"white\");\n      }\n    }\n    // draw redline\n    tick(this.snap, CENTER, this.rpmToAngle(REDLINE), TICK1, TICK3, 7, \"red\");\n  }\n\n  /**\n   * render an almost transparent gradient over the face to give the appearance of\n   * shadow and depth\n   */\n  renderShadow() {\n    // draw a radial gradient over the face to give a small hint of shadow from the case\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 + CASE3),\n      \"transparent\",\n      0,\n      this.snap.gradient(`r(0.5, 0.5, 0.5)transparent:85-rgba(0,0,0,0.6)`)\n    );\n  }\n\n  /**\n   * create the needle and center nut\n   */\n  createNeedle() {\n    this.needle = arrowNeedle(\n      this.snap,\n      POINTER_RADIUS,\n      POINTER_SMALL_RADIUS,\n      POINTER_ARROW,\n      POINTER_WIDTH\n    );\n    circle(this.snap, CENTER, 4, \"#888\", 1, \"black\");\n  }\n\n  /**\n   * update the needle\n   * @param airspeed\n   */\n  setNeedle(rpm) {\n    this.needle.setCenterAndAngle(CX, CY, this.rpmToAngle(rpm));\n  }\n\n  /**\n   * convert an RPM to an angle\n   * @param rpm\n   */\n  rpmToAngle(rpm) {\n    // clamp to limits\n    const v = Math.max(MIN_RPM, Math.min(MAX_RPM, rpm));\n    // normalize\n    const normalized = (v - MIN_RPM) / (MAX_RPM - MIN_RPM);\n    // angle\n    return (START_ANGLE + ANGLE_SWEEP * normalized) % 360;\n  }\n\n  /**\n   * a property of the airplane was changed\n   * @param airplane\n   */\n  onAirplaneChanged(airplane) {\n    console.assert(airplane === this.airplane, \"not our airplane\");\n    this.setNeedle(this.airplane.rpm);\n  }\n}\n","/**\n * round a real to given number of decimal places. This is much better than toFixed for the following reasons:\n *\n * round(1.005, 2) = 1.01 ( toFixed would give 1.00 )\n * round(2.00, 2 ) = 2 ( toFixed would give 2.00 )\n * @param value\n * @param decimals\n * @returns {number}\n */\nexport const round = (value, decimals) => {\n  return Number(Math.round(value + \"e\" + decimals) + \"e-\" + decimals);\n};\n\n// map an input value ( 0..1 ) to a non linear scale ( 0..maxValue ) where midvalue is the value\n// at the midpoint of the non linear scale. NOTE: Specifying a linear scale will produce an error.\n/**\n * map an input value 0..1 to a non linear scale 0..maxValue with a specified mid point\n *\n * @param inputValue\n * @param midValue\n * @param maxValue\n * @returns {number}\n */\nexport const nonLinearScale = (inputValue, midValue, maxValue) => {\n  let returnValue;\n  console.assert(\n    inputValue >= 0 && inputValue <= 1,\n    \"input value out of range\"\n  );\n  console.assert(\n    midValue > 0 || midValue < maxValue,\n    \"MidValue must be greater than 0 and less than MaxValue\"\n  );\n\n  // returnValue = A + B * Math.Exp(C * inputValue);\n  const M = maxValue / midValue;\n  const C = Math.log(Math.pow(M - 1, 2));\n  const B = maxValue / (Math.exp(C) - 1);\n  const A = -1 * B;\n  returnValue = A + B * Math.exp(C * inputValue);\n  // you will get NaN for a linear scale, so handle that edge case by returning the scaled linear value\n  if (isNaN(returnValue)) {\n    return maxValue * inputValue;\n  }\n  return returnValue;\n};\n\n/**\n * lerp from -> to over the given time. Returns a function that can be used to\n * cancel the lerp at any time. If sine based ease is used by default by can be disabled.\n * @param from\n * @param to\n * @param time\n * @param callback\n * @param ease\n * @returns {function()}\n */\nexport const lerp = (from, to, time, callback, ease = true) => {\n  console.assert(\n    isFinite(from) && isFinite(to) && isFinite(time) && time > 0,\n    \"invalid parameters\"\n  );\n\n  // time span over which to operate\n  const startTime = Date.now();\n  const endTime = startTime + time;\n\n  let requestId = 0;\n\n  const timer = () => {\n    let value = to;\n    const now = Date.now();\n    if (now < endTime) {\n      const delta = now - startTime;\n      const normalized = ease\n        ? Math.sin((delta / time) * (Math.PI / 2))\n        : delta / time;\n      value = from + normalized * (to - from);\n      requestId = requestAnimationFrame(timer);\n    } else {\n      requestId = 0;\n    }\n    callback(value);\n  };\n\n  requestId = requestAnimationFrame(timer);\n\n  return () => {\n    if (requestId) {\n      cancelAnimationFrame(requestId);\n    }\n  };\n};\n\n/**\n * TODO, gives this a shared requestAnimationFrame\n */\nexport class AnimatedValue {\n  constructor(value, options = {}) {\n    // assign our option\n    Object.assign(this, options, {\n      lowLimit: -Number.MAX_VALUE,\n      hiLimit: Number.MAX_VALUE,\n      time: 1000,\n      callback: () => {}\n    });\n    // the actual value with initial clamping\n    this.value = Math.max(this.lowLimit, Math.min(this.hiLimit, value));\n    // the current value of the animation\n    this.currentValue = value;\n  }\n\n  /**\n   * set the value and begin a lerp as necessary to reach it\n   * @param value\n   */\n  setValue(value) {\n    if (value !== this.value) {\n      this.cancelLerp();\n      this.value = Math.max(this.lowLimit, Math.min(this.hiLimit, value));\n      this.lerp = lerp(this.currentValue, this.value, this.time, v => {\n        this.currentValue = v;\n        this.callback(this.currentValue, this.value);\n      });\n    }\n  }\n\n  /**\n   * set the value with immediate effect, no animation\n   * @param value\n   */\n  setValueImmediate(value) {\n    this.value = Math.max(this.lowLimit, Math.min(this.hiLimit, value));\n    this.currentValue = value;\n    this.cancelLerp();\n    this.callback(this.currentValue, this.value);\n  }\n\n  /**\n   * cancel any current lerp\n   */\n  cancelLerp() {\n    if (this.lerp) {\n      this.lerp();\n      this.lerp = null;\n    }\n  }\n}\n","import D from \"DOMArray\";\nimport Instrument from \"./instrument\";\nimport { nonLinearScale } from \"./utils/math\";\nimport { POC, C2D } from \"./geometry/angle\";\nimport Vector2D from \"./geometry/vector2d\";\nimport { circle, centeredText, tick, arc } from \"./graphics/primitives\";\nimport { steppedNeedle } from \"./needles\";\nimport { interval } from \"./utils/time\";\nimport Snap from \"snapsvg-cjs\";\n\n/**\n * Regardless of our DOM element size we will render using the constants below\n * and use a transform to scale the resulting SVG to the required size, without altering the aspect ratio\n */\n\n// inset of edges of element\nconst I = 0;\n// width and height\nconst W = 400;\nconst H = 400;\n// outer radius\nconst R = (Math.min(W, H) - I) / 2;\n// center\nconst CX = W / 2;\nconst CY = H / 2;\nconst CENTER = new Vector2D(CX, CY);\n\n// thickness of outer three rings of case\nconst CASE1 = 8;\nconst CASE2 = 10;\nconst CASE3 = 14;\n\n// outer radius of all tick marks\nconst TICK1 = R - (CASE1 + CASE2 + CASE3);\n// inner radius of small ticks\nconst TICK2 = TICK1 - 40;\n// inner radius of large ticks\nconst TICK3 = TICK1 - 50;\n// radius of center of airspeed labels\nconst LABEL_RADIUS = TICK3 - 26;\n\n// width of range arcs\nconst ARC_WIDTH = 22;\n\n// width of range arcs\nconst FLAP_ARC_WIDTH = 18;\n\n// radius of white arc\nconst WHITE_ARC_RADIUS = TICK3 + ARC_WIDTH * 2 - ARC_WIDTH / 2 - 1;\n// green / yellow arcs\nconst ARC_RADIUS = TICK3 + ARC_WIDTH / 2;\n\n// max airspeed angle on face\nconst MAX_SPEED_ANGLE = 320;\n// airspeed at 6 o'clock\nconst MID_SPEED = 115;\n\nconst POINTER_SMALL_RADIUS = 40;\nconst POINTER_WIDTH = 14;\nconst POINTER_ARROW = 6;\nconst POINTER_RADIUS = WHITE_ARC_RADIUS + FLAP_ARC_WIDTH / 2 - POINTER_ARROW;\nconst POINTER_MID = POINTER_RADIUS * 0.65;\n\nexport default class AirspeedAnalog extends Instrument {\n  constructor(options) {\n    super(\n      Object.assign(\n        {\n          width: W,\n          height: H\n        },\n        options\n      )\n    );\n\n    console.assert(\n      this.parentElement,\n      \"instrument requires a parent to attach to\"\n    );\n\n    this.template = D(`\n      <svg r=\"svg\" height=\"${W}\" width=\"${H}\" xmlns=\"http://www.w3.org/2000/svg\"></svg>\n    `);\n    this.template.zip(this);\n    this.snap = new Snap(this.svg.el);\n\n    // figure out the airspeed closest to 12 o'clock. This is our minimum displayable speed\n    this.minimumDisplayableSpeed = 0;\n    let nearest = Number.MAX_VALUE;\n    for (let i = this.airplane.VS0; i >= 0; i -= 0.2) {\n      const angle = this.airspeedToAngle(i);\n      if (Math.abs(angle - 270) < nearest) {\n        this.minimumDisplayableSpeed = i;\n        nearest = Math.abs(angle - 270);\n      }\n    }\n\n    // initial render of instrument\n    this.renderImmutable();\n    this.createNeedle();\n\n    // set needle to default display position\n    this.setNeedle(this.airplane.airspeed);\n\n    // listen for changes to the airplane\n    this.onAirplaneChanged = this.onAirplaneChanged.bind(this);\n    this.airplane.addListener(this.onAirplaneChanged);\n    this.addDisposable(() =>\n      this.airplane.removeListener(this.onAirplaneChanged)\n    );\n\n    this.template.appendTo(this.parentElement);\n    this.addDisposable(() => this.template.remove());\n  }\n\n  /**\n   * enter demonstration mode\n   */\n  demoStart() {\n    this.addLerp(\n      \"demo\",\n      interval(() => {\n        const speed =\n          this.airplane.VS0 +\n          (this.airplane.VNE - this.airplane.VS0) * Math.random();\n        this.airplane.setAirspeed(speed);\n      }, 2000)\n    );\n  }\n\n  /**\n   * cancel demo mode\n   */\n  demoStop() {\n    this.cancelLerp(\"demo\");\n  }\n\n  /**\n   * render the non changing parts of the instrument\n   */\n  renderImmutable() {\n    this.renderCase();\n    this.renderSpeedArcs();\n    this.renderText();\n    this.renderTicks();\n    this.renderAirspeeds();\n    this.renderShadow();\n  }\n\n  /**\n   * render the shared three outer rings of the bezel\n   */\n  renderCase() {\n    // draw three outer rings of the instrument case\n    circle(\n      this.snap,\n      CENTER,\n      R - CASE1 / 2,\n      this.snap.gradient(`l(0, 0, 1, 1)#FFF:0-#888:20-#111:100`),\n      CASE1,\n      \"black\"\n    );\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 / 2),\n      this.snap.gradient(`l(0, 0, 1, 1)#111-#666`),\n      CASE2,\n      \"black\"\n    );\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 + CASE3 / 2),\n      this.snap.gradient(`l(0, 0, 1, 1)#000:0-#888:70-#FFF:100`),\n      CASE3,\n      this.snap.gradient(\"l(0, 0, 1, 1)#000:0-#222:100\")\n    );\n  }\n\n  /**\n   * render the three speed arcs ( white, green, yellow )\n   */\n  renderSpeedArcs() {\n    // draw the flap (white) normal ( green ) and caution ( yellow ) speed arcs\n    arc(\n      this.snap,\n      CENTER,\n      WHITE_ARC_RADIUS,\n      ARC_WIDTH,\n      0,\n      \"white\",\n      \"white\",\n      this.airspeedToAngle(this.airplane.VS0),\n      this.airspeedToAngle(this.airplane.VFE),\n      true\n    );\n\n    arc(\n      this.snap,\n      CENTER,\n      ARC_RADIUS,\n      ARC_WIDTH,\n      0,\n      \"transparent\",\n      \"#00EE00\",\n      this.airspeedToAngle(this.airplane.VS1),\n      this.airspeedToAngle(this.airplane.VNO),\n      true\n    );\n\n    arc(\n      this.snap,\n      CENTER,\n      ARC_RADIUS,\n      ARC_WIDTH,\n      0,\n      \"transparent\",\n      \"#FFDC00\",\n      this.airspeedToAngle(this.airplane.VNO),\n      this.airspeedToAngle(this.airplane.VNE),\n      true\n    );\n  }\n\n  /**\n   * render static text, KNOTS and AIR SPEED\n   */\n  renderText() {\n    // draw airspeeds and knots labels\n    centeredText(\n      this.snap,\n      new Vector2D(CX, CY + 50),\n      \"KNOTS\",\n      \"white\",\n      \"16px\"\n    );\n    centeredText(this.snap, new Vector2D(CX, 70), \"AIR\", \"white\", \"16px\");\n    centeredText(this.snap, new Vector2D(CX, 90), \"SPEED\", \"white\", \"16px\");\n  }\n\n  /**\n   * render the knots ( KIAS ) tick marks around the outside of the face.\n   */\n  renderTicks() {\n    // draw VS0 to MAX_SPEED in 10 knot intervals\n    for (\n      let i = this.airplane.VS0;\n      i <= this.airplane.MAX_DISPLAYED_SPEED;\n      i += 10\n    ) {\n      tick(\n        this.snap,\n        CENTER,\n        this.airspeedToAngle(i),\n        TICK1,\n        TICK3,\n        4,\n        \"white\"\n      );\n    }\n\n    // small ticks at 5 knot intervals\n    for (\n      let i = this.airplane.VS0 + 5;\n      i <= this.airplane.MAX_DISPLAYED_SPEED - 5;\n      i += 10\n    ) {\n      tick(\n        this.snap,\n        CENTER,\n        this.airspeedToAngle(i),\n        TICK1,\n        TICK2,\n        2,\n        \"white\"\n      );\n    }\n\n    // draw VNE tick mark\n    tick(\n      this.snap,\n      CENTER,\n      this.airspeedToAngle(this.airplane.VNE),\n      TICK1,\n      TICK3,\n      7,\n      \"red\"\n    );\n  }\n\n  /**\n   * rendered the numbers airspeeds\n   */\n  renderAirspeeds() {\n    // draw airspeed labels 40, 60, ... 200 in intervals of 20\n    for (\n      let i = this.airplane.VS0;\n      i <= this.airplane.MAX_DISPLAYED_SPEED;\n      i += 20\n    ) {\n      const position = POC(CENTER, LABEL_RADIUS, this.airspeedToAngle(i));\n      centeredText(this.snap, position, i, \"white\", \"24px\", \"Verdana\", \"bold\");\n    }\n  }\n\n  /**\n   * render an almost transparent gradient over the face to give the appearance of\n   * shadow and depth\n   */\n  renderShadow() {\n    // draw a radial gradient over the face to give a small hint of shadow from the case\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 + CASE3),\n      \"transparent\",\n      0,\n      this.snap.gradient(`r(0.5, 0.5, 0.5)transparent:85-rgba(0,0,0,0.6)`)\n    );\n  }\n\n  /**\n   * create the needle shape\n   */\n  createNeedle() {\n    this.needle = steppedNeedle(\n      this.snap,\n      POINTER_RADIUS,\n      POINTER_SMALL_RADIUS,\n      POINTER_MID,\n      POINTER_ARROW,\n      POINTER_WIDTH\n    );\n    circle(this.snap, CENTER, 4, \"#888\", 1, \"black\");\n  }\n\n  /**\n   * immediately set the needle to the given airspeed\n   * @param airspeed\n   */\n  setNeedle(airspeed) {\n    const angle = this.airspeedToAngle(\n      Math.max(this.minimumDisplayableSpeed, airspeed)\n    );\n    this.needle.setCenterAndAngle(CX, CY, angle);\n  }\n\n  /**\n   * convert the given airspeed ( KIAS ) into an angle in degrees.\n   * @param airspeed\n   * @returns {number}\n   */\n  airspeedToAngle(airspeed) {\n    console.assert(\n      airspeed >= 0 && airspeed <= this.airplane.MAX_DISPLAYED_SPEED,\n      \"airspeed out of range\"\n    );\n    // convert airspeed to 0..1\n    const normalized = airspeed / this.airplane.MAX_DISPLAYED_SPEED;\n    // get non linear value 0..MAX_SPEED\n    const nonLinear = nonLinearScale(\n      normalized,\n      MID_SPEED,\n      this.airplane.MAX_DISPLAYED_SPEED\n    );\n    // zero airspeed is actually starts at MAX_SPEED and goes clockwise\n    const circle = 360 * (nonLinear / this.airplane.MAX_DISPLAYED_SPEED);\n    return C2D((MAX_SPEED_ANGLE + circle) % 360);\n  }\n\n  /**\n   * a property of the airplane was changed\n   * @param airplane\n   */\n  onAirplaneChanged(airplane) {\n    console.assert(airplane === this.airplane, \"not our airplane\");\n    this.setNeedle(this.airplane.airspeed);\n  }\n}\n","export const colors = {\n  // standard palette\n  navy: \"#001f3f\",\n  blue: \"#0074D9\",\n  aqua: \"#7FDBFF\",\n  teal: \"#39CCCC\",\n  olive: \"#3D9970\",\n  green: \"#2ECC40\",\n  lime: \"#01FF70\",\n  yellow: \"#FFDC00\",\n  orange: \"#FF851B\",\n  red: \"#FF4136\",\n  maroon: \"#85144b\",\n  fuchsia: \"#F012BE\",\n  purple: \"#B10DC9\",\n  black: \"#111111\",\n  charcoal: \"#555\",\n  gray: \"#AAAAAA\",\n  silver: \"#DDDDDD\",\n  white: \"#FFFFFF\",\n\n  // used for example on the face of the attitude indicator\n  sky: \"#6ca3e3\",\n  earth: \"#67411a\",\n  // color for a compass / vor rose on a sectional\n  compassRose: \"#084e8a\"\n};\n","import D from \"DOMArray\";\nimport Disposable from \"../disposable\";\nimport Vector2D from \"../geometry/vector2d\";\n\n// native events we capture\nconst events = [\"mousemove\", \"mousedown\", \"mouseup\", \"mouseover\", \"mouseout\"];\n// synthetic events we produce. If can, optionally, register for these events.\n// If you do you will receive them whenever the node is the target of a\n// call to setCapture, release capture. This gives you a clean way of tracking\n// the start and end of capture.\n// NOTE: the callback for these events receive no parameters.\nconst sEvents = [\"setCapture\", \"releaseCapture\"];\n\nexport default class Mouse extends Disposable {\n  constructor() {\n    super();\n    // save some typing\n    this.d = document.documentElement;\n    // capture all events\n    this.handleEvent = this.handleEvent.bind(this);\n    events.forEach(name => {\n      this.d.addEventListener(name, this.handleEvent);\n    });\n    this.addDisposable(() => {\n      events.forEach(name =>\n        this.d.removeEventListener(name, this.handleEvent)\n      );\n    });\n    // map event name to listeners of that event ( ears )\n    this.hash = {};\n    // the node that current has the capture\n    this.captureNode = null;\n  }\n\n  /**\n   * event handler for all events\n   * @param e\n   */\n  handleEvent(e) {\n    // get all ears for this event\n    const ears = this.hash[e.type];\n    if (ears) {\n      ears.forEach(ear => {\n        // if capturing all events go to the captureNode\n        if (this.captureNode) {\n          ear.callback(e, this.eventToNode(ear.node, e), true);\n        } else {\n          // otherwise only if event targets the node or children of node as specified\n          if (\n            e.target === ear.node ||\n            (ear.includeDescendants && this.contains(e.target, ear.node))\n          ) {\n            ear.callback(e, this.eventToNode(ear.node, e), false);\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * get position of mouse in the coordinate system of the node.\n   * Both getBoundingClientRect and the clientX, clientY coordinate of mouse events are in\n   * viewport space so there is no need to convert into document/global space first.\n   * @param node\n   */\n  eventToNode(node, event) {\n    // viewport relative bounds of node\n    const box = node.getBoundingClientRect();\n    // clientX/Y are viewport relative, so just subtract the elements viewport bounds\n    return new Vector2D(event.clientX - box.x, event.clientY - box.y);\n  }\n\n  /**\n   * returns true if descendant really is a descendant of parent\n   * https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n   * @param ancestor\n   * @param descendant\n   */\n  contains(ancestor, descendant) {\n    const relationship = ancestor.compareDocumentPosition(descendant);\n    return relationship & 8;\n  }\n\n  /**\n   * register a listener for a given event and node. You can either include or exclude\n   * events to the descendants of the given node\n   * @param event\n   * @param node\n   * @param callback\n   * @param includeDescendants\n   */\n  register(event, node, callback, includeDescendants = true) {\n    // you can only register for one of our event\n    if (!this.hash[event]) {\n      this.hash[event] = [];\n    }\n    this.hash[event].push({\n      node,\n      callback,\n      includeDescendants\n    });\n  }\n\n  /**\n   * unregister a handler using the same parameters as were used to register it. Everything must match\n   * @param event\n   * @param node\n   * @param callback\n   * @param includeDescendants\n   */\n  unregister(event, node, callback, includeDescendants = true) {\n    console.assert(this.hash[event], \"nothing registered for this event\");\n    let removed = 0;\n    this.hash[event].forEach((record, index) => {\n      if (\n        record.node === node &&\n        record.callback === callback &&\n        record.includeDescendants === includeDescendants\n      ) {\n        this.hash[event].splice(index, 1);\n        // if this is the capture node then cancel capture\n        if (record.node === this.captureNode) {\n          this.releaseCapture();\n        }\n        removed += 1;\n      }\n    });\n    console.assert(\n      removed !== 1,\n      \"unregister did not match exactly one record\"\n    );\n  }\n\n  /**\n   * Return the listener for the named event and the given node\n   * @param eventName\n   * @param node\n   */\n  findNode(eventName, node) {\n    const list = this.hash[eventName];\n    if (list) {\n      return list.find(record => record.node === node);\n    }\n    return null;\n  }\n\n  /**\n   * send all events to the capture node until releaseCapture is called.\n   * @param node\n   */\n  setCapture(node) {\n    this.releaseCapture();\n    this.captureNode = node;\n    // find a listener for 'setCapture' for this node\n    const record = this.findNode(\"setCapture\", this.captureNode);\n    if (record) {\n      record.callback();\n    }\n  }\n\n  /**\n   * release the capture on the given node\n   */\n  releaseCapture() {\n    if (this.captureNode) {\n      // find a listener for 'releaseCapture' for this node\n      const record = this.findNode(\"releaseCapture\", this.captureNode);\n      if (record) {\n        record.callback();\n      }\n      this.captureNode = null;\n    }\n  }\n}\n","import Disposable from \"./disposable\";\nimport Animated from \"./animated\";\nimport D from \"DOMArray\";\nimport { POC, D2C, angleFrom, angularDelta } from \"./geometry/angle\";\nimport Vector2D from \"./geometry/vector2d\";\nimport {\n  tick,\n  circle,\n  rectangle,\n  centeredText,\n  leftText\n} from \"./graphics/primitives\";\nimport { colors } from \"./graphics/colors\";\nimport { lerp } from \"./utils/math\";\nimport { interval } from \"./utils/time\";\nimport Snap from \"snapsvg-cjs\";\nimport Mouse from \"./utils/mouse\";\n\n// outer beveled ring thickess\nconst CASE1 = 5;\n\n// anglular changes above this delta are ignored\nconst JITTER_THRESHOLD = 20;\n\n// scale when pop'ed out\nconst POP_SCALE = 1.25;\n\n/**\n * base class for all analog / digital instruments\n */\nexport default class Rotatable extends Animated {\n  constructor(options) {\n    super();\n    Object.assign(\n      this,\n      {\n        radius: 30,\n        text: \"\",\n        textColor: colors.white,\n        rotation: 0,\n        rotationCallback: null,\n        clickCallback: null,\n        gear: 1,\n        fontSize: \"16px\",\n        randomize: true,\n        popout: false,\n        popState: false\n      },\n      options\n    );\n    console.assert(this.snap, \"requires a snap paper\");\n    console.assert(\n      this.rotationCallback || this.clickCallback,\n      \"requires a rotation or click callback\"\n    );\n    this.center = new Vector2D(this.radius, this.radius);\n    this.randomOffset = this.randomize ? Math.random() * 360 : 0;\n    this.renderImmutable();\n  }\n\n  /**\n   * set the pop scale ana update\n   * @param s\n   */\n  setPopScale(s) {\n    this.scale = s;\n    this.addLerp(\n      \"scale\",\n      lerp(this.displayScale, this.scale, 200, (v) => {\n        this.displayScale = v;\n        this.updateTransform();\n        this.updateButtonColor();\n      })\n    );\n  }\n\n  renderImmutable() {\n    // group everything for centering on parent location and rotation\n    this.group = this.snap.group();\n    this.group.attr({\n      class: \"clickable\"\n    });\n\n    this.el = circle(\n      this.snap,\n      this.center,\n      this.radius - CASE1 / 2,\n      this.snap.gradient(`l(0, 0, 1, 1)#FFF:0-#888:20-#111:100`),\n      CASE1,\n      colors.black\n    );\n\n    this.text = centeredText(\n      this.snap,\n      this.center,\n      this.text,\n      this.textColor,\n      this.fontSize\n    );\n\n    // set initial position which might be random\n    this.text.attr({\n      transform: `r ${this.rotation + this.randomOffset} ${this.center.x} ${\n        this.center.y\n      }`\n    });\n\n    // this is a nearly invisible outer circle that enlarges the area which\n    // is responsive to clicks and touches. Useful on small screens and touch devices.\n    this.outer = circle(\n      this.snap,\n      this.center,\n      this.radius * 2,\n      \"none\",\n      0,\n      \"rgba(0, 0, 0, 0.001)\"\n    );\n\n    this.group.add(this.el, this.text, this.outer);\n\n    // setup mouse interactions\n    this.mouse = new Mouse();\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.mouse.register(\"mousemove\", this.group.node, this.onMouseMove);\n    this.mouse.register(\"mousedown\", this.group.node, this.onMouseDown);\n    this.mouse.register(\"mouseup\", this.group.node, this.onMouseUp);\n\n    // set default center\n    this.centerOn(this.center);\n\n    // set default scale\n    this.displayScale = this.popState ? POP_SCALE : 1;\n    this.setPopScale(this.displayScale);\n  }\n\n  /**\n   * set color of button face according to the currently displayed scale\n   * @param color\n   */\n  updateButtonColor() {\n    const normalized = (this.displayScale - 1) / (POP_SCALE - 1);\n    const gray = Math.floor(normalized * 92);\n    this.el.attr({\n      fill: `rgb(${gray}, ${gray}, ${gray})`\n    });\n  }\n\n  /**\n   *\n   * @param e\n   * @param local\n   */\n  onMouseDown(e, local) {\n    this.lastAngle = angleFrom(this.center, local);\n    this.mouse.setCapture(this.group.node);\n  }\n\n  /**\n   * mouse is released\n   * @param e\n   * @param local\n   */\n  onMouseUp(e, local, capture) {\n    if (capture && this.clickCallback) {\n      this.clickCallback();\n    }\n    this.mouse.releaseCapture();\n    if (this.popout) {\n      this.togglePopout();\n    }\n  }\n\n  /**\n   * repond to twisting when capturing the mouse\n   * @param e\n   * @param local\n   */\n  onMouseMove(e, local, capture) {\n    // mouse rotation swipes only if capturing and there is a rotation callback\n    if (capture && this.rotationCallback) {\n      console.assert(isFinite(this.lastAngle), \"lastAngle must be set\");\n      const angle = angleFrom(this.center, local);\n      let delta = angularDelta(this.lastAngle, angle);\n      this.lastAngle = angle;\n      // ignore if delta above a threshold to avoid too much jumpiness\n      if (Math.abs(delta) < JITTER_THRESHOLD) {\n        this.rotationCallback(delta * this.gear);\n        this.rotation = this.rotation + delta;\n        this.text.attr({\n          transform: `r ${this.rotation + this.randomOffset} ${this.center.x} ${\n            this.center.y\n          }`\n        });\n      }\n    }\n  }\n\n  /**\n   * toggle popstate\n   */\n  togglePopout() {\n    this.popState = !this.popState;\n    this.setPopScale(this.popState ? POP_SCALE : 1);\n  }\n\n  /**\n   * position / center ourselves on the given location\n   * @param point\n   */\n  centerOn(point) {\n    this.position = new Vector2D(point.x, point.y);\n    this.updateTransform();\n  }\n\n  /**\n   * update position and scale\n   */\n  updateTransform() {\n    this.group.attr({\n      transform: `t ${this.position.x - this.radius} ${\n        this.position.y - this.radius\n      } s${this.displayScale} ${this.radius} ${this.radius}`\n    });\n  }\n}\n","import D from \"DOMArray\";\nimport Instrument from \"./instrument\";\nimport Rotatable from \"./rotatable-button\";\nimport { POC, D2C, D2R } from \"./geometry/angle\";\nimport Vector2D from \"./geometry/vector2d\";\nimport {\n  centeredText,\n  tick,\n  line,\n  circle,\n  rectangle,\n  triangle,\n  arc\n} from \"./graphics/primitives\";\nimport { interval } from \"./utils/time\";\nimport { colors } from \"./graphics/colors\";\nimport { lerp } from \"./utils/math\";\nimport Snap from \"snapsvg-cjs\";\n\n/**\n * Regardless of our DOM element size we will render using the constants below\n * and use a transform to scale the resulting SVG to the required size, without altering the aspect ratio\n */\n\n// inset of edges of element\nconst I = 0;\n// width and height\nconst W = 400;\nconst H = 400;\n\n// outer radius\nconst R = (Math.min(W, H) - I) / 2;\n// center\nconst CX = W / 2;\nconst CY = H / 2;\nconst CENTER = new Vector2D(CX, CY);\n\n// thickness of outer three rings of case\nconst CASE1 = 8;\nconst CASE2 = 10;\nconst CASE3 = 14;\n\n// color of sky and earth\nconst COLOR_SKY = colors.sky;\nconst COLOR_EARTH = colors.earth;\n\n// radius/thickness of outer bezel\nconst OUTER_THICKNESS = 40;\nconst OUTER_RADIUS = R - (CASE1 + CASE2 + CASE3 + OUTER_THICKNESS / 2);\n// radius of inner bezel\nconst INNER_RADIUS = R - (CASE1 + CASE2 + CASE3 + OUTER_THICKNESS);\n// determines length of pitch tick marks\nconst TICK_M = 4;\n// width of small ( 5 increment ) tick marks\nconst SMALL_TICK_WIDTH = 25;\n// on the pitch axis this is the ratio between degrees of pitch and pixels the face will move up or down\nconst PITCH_TO_PIXELS = 3.2;\n// pointer base metrics\nconst POINTER_BASE_THICKNESS = W / 4;\nconst POINTER_BASE_ARC = 40;\n// pointer arm THICKNESS\nconst PA_T = 8;\nconst PA_BH = W / 2 - 40;\nconst PA_BI = CASE1;\nconst PA_ARM = W / 6;\nconst PA_TRI_W = 30;\nconst PA_TRI_H = 32;\nconst PA_TRI_R = R - (CASE1 + CASE2 + CASE3 + OUTER_THICKNESS);\n\n// vertical adjustment button\nconst V_ADJUST_CENTER = POC(CENTER, OUTER_RADIUS, 90);\n// vertical adjustment is limited to this number of pixels +/- of center\nconst V_ADJUST_LIMIT = PITCH_TO_PIXELS * 5;\n\n// cage button\nconst CAGE_CENTER = POC(CENTER, R, 45);\n\nexport default class AttitudeIndicatorAnalog extends Instrument {\n  constructor(options) {\n    super(\n      Object.assign(\n        {\n          width: W,\n          height: H,\n          // deflection, +/- between the vertical adjustment limits\n          verticalAdjustment: 0,\n          // if true the attitude is caged\n          caged: false,\n          // used to damp pitch and roll when caged ( by setting to zero )\n          cageMultiplier: 1\n        },\n        options\n      )\n    );\n\n    console.assert(\n      this.parentElement,\n      \"instrument requires a parent to attach to\"\n    );\n\n    this.template = D(`\n      <svg r=\"svg\" height=\"${W}\" width=\"${H}\" xmlns=\"http://www.w3.org/2000/svg\"></svg>\n    `);\n    this.template.zip(this);\n    this.snap = new Snap(this.svg.el);\n\n    this.pitch = this.roll = 0;\n    this.renderImmutable();\n    this.setRollAndPitch(this.airplane.roll, this.airplane.pitch);\n    this.template.appendTo(this.parentElement);\n\n    // listen for changes to the airplane\n    this.onAirplaneChanged = this.onAirplaneChanged.bind(this);\n    this.airplane.addListener(this.onAirplaneChanged);\n    this.addDisposable(() =>\n      this.airplane.removeListener(this.onAirplaneChanged)\n    );\n  }\n\n  /**\n   * enter demonstration mode\n   */\n  demoStart() {\n    this.addLerp(\n      \"demo\",\n      interval(() => {\n        this.airplane.setRoll(-45 + 90 * Math.random());\n        this.airplane.setPitch(-20 + 40 * Math.random());\n      }, 3000)\n    );\n  }\n\n  /**\n   * cancel demo mode\n   */\n  demoStop() {\n    this.cancelLerp(\"demo\");\n  }\n\n  /**\n   * render the non changing parts of the instrument\n   */\n  renderImmutable() {\n    this.renderCase();\n    this.renderInnerBezel();\n    this.renderOuterBezel();\n    this.renderShadow();\n    this.renderPointers();\n    this.renderButtons();\n  }\n\n  /**\n   * create the vertical adjustment button and CAGE buttons\n   */\n  renderButtons() {\n    // v adjust button\n    this.verticalAdjustButton = new Rotatable({\n      snap: this.snap,\n      text: \"↕\",\n      fontSize: \"32px\",\n      textColor: colors.silver,\n      gear: 0.05,\n      randomize: false,\n      rotationCallback: this.onVerticalAdjustment.bind(this)\n    });\n    this.verticalAdjustButton.centerOn(V_ADJUST_CENTER);\n\n    // cage button, PULL ( click ) to enter caged mode\n    this.cageButton = new Rotatable({\n      snap: this.snap,\n      text: \"CAGE\",\n      textColor: colors.silver,\n      gear: 1,\n      clickCallback: this.onCageToggle.bind(this),\n      randomize: false,\n      popout: true\n    });\n    this.cageButton.centerOn(CAGE_CENTER);\n  }\n\n  /**\n   * vertical adjustment button was twisted\n   * @param delta\n   */\n  onVerticalAdjustment(delta) {\n    const v = Math.max(\n      -V_ADJUST_LIMIT,\n      Math.min(V_ADJUST_LIMIT, this.verticalAdjustment + delta)\n    );\n    this.setArmGroupVerticalAdjustment(v);\n  }\n\n  /**\n   * toggle cage mode\n   */\n  onCageToggle() {\n    this.caged = !this.caged;\n    const from = this.cageMultiplier;\n    const to = this.caged ? 0 : 1;\n    this.addLerp(\n      \"caged\",\n      lerp(from, to, 2000, (v) => {\n        this.cageMultiplier = v;\n        this.setRollAndPitch(this.airplane.roll, this.airplane.pitch);\n      })\n    );\n  }\n\n  /**\n   * render the shared three outer rings of the bezel\n   */\n  renderCase() {\n    // draw three outer rings of the instrument case\n    circle(\n      this.snap,\n      CENTER,\n      R - CASE1 / 2,\n      this.snap.gradient(`l(0, 0, 1, 1)#FFF:0-#888:20-#111:100`),\n      CASE1,\n      \"black\"\n    );\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 / 2),\n      this.snap.gradient(`l(0, 0, 1, 1)#111-#666`),\n      CASE2,\n      \"black\"\n    );\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 + CASE3 / 2),\n      this.snap.gradient(`l(0, 0, 1, 1)#000:0-#888:70-#FFF:100`),\n      CASE3,\n      this.snap.gradient(\"l(0, 0, 1, 1)#000:0-#222:100\")\n    );\n  }\n\n  /**\n   * render airplane pointer and level indicator ( arrow at top )\n   */\n  renderPointers() {\n    // group all the arms parts together so they can be vertically adjusted\n    this.armGroup = this.snap.group();\n\n    // draw vertical line from base to below the ball\n    const bottom = H - PA_BI;\n    const top = bottom - PA_BH;\n    this.armGroup.add(\n      rectangle(\n        this.snap,\n        CX - PA_T / 2,\n        top,\n        PA_T,\n        bottom - top - V_ADJUST_LIMIT,\n        \"transparent\",\n        0,\n        colors.orange,\n        PA_T / 2,\n        PA_T / 2\n      )\n    );\n    // horizontal central arm\n    const left = CX - PA_ARM / 2;\n    const right = CX + PA_ARM / 2;\n    this.armGroup.add(\n      rectangle(\n        this.snap,\n        left,\n        top,\n        right - left,\n        PA_T,\n        \"transparent\",\n        0,\n        colors.orange,\n        PA_T / 2,\n        PA_T / 2\n      )\n    );\n    // two vertical wing supports\n    const WY = CY - PA_T / 2;\n    this.armGroup.add(\n      rectangle(\n        this.snap,\n        left,\n        WY,\n        PA_T,\n        top - WY + PA_T,\n        \"transparent\",\n        0,\n        colors.orange,\n        PA_T / 2,\n        PA_T / 2\n      )\n    );\n    this.armGroup.add(\n      rectangle(\n        this.snap,\n        right - PA_T,\n        WY,\n        PA_T,\n        top - WY + PA_T,\n        \"transparent\",\n        0,\n        colors.orange,\n        PA_T / 2,\n        PA_T / 2\n      )\n    );\n    // two wings\n    this.armGroup.add(\n      rectangle(\n        this.snap,\n        left - PA_ARM + PA_T,\n        WY,\n        PA_ARM,\n        PA_T,\n        \"transparent\",\n        0,\n        colors.orange,\n        PA_T / 2,\n        PA_T / 2\n      )\n    );\n    this.armGroup.add(\n      rectangle(\n        this.snap,\n        right - PA_T,\n        WY,\n        PA_ARM,\n        PA_T,\n        \"transparent\",\n        0,\n        colors.orange,\n        PA_T / 2,\n        PA_T / 2\n      )\n    );\n    // aiming ball\n    this.armGroup.add(\n      circle(this.snap, CENTER, PA_T / 1.5, \"transparent\", 0, colors.orange)\n    );\n\n    // draw base for pointer\n    arc(\n      this.snap,\n      CENTER,\n      R - CASE1 - POINTER_BASE_THICKNESS / 2,\n      POINTER_BASE_THICKNESS,\n      1,\n      \"#111\",\n      \"#333\",\n      90 - POINTER_BASE_ARC / 2,\n      90 + POINTER_BASE_ARC / 2,\n      true\n    );\n    // draw triangle pointer at 12 o'clock\n    const p1 = POC(CENTER, PA_TRI_R, 270);\n    const p2 = new Vector2D(p1.x - PA_TRI_W / 2, p1.y + PA_TRI_H);\n    const p3 = new Vector2D(p1.x + PA_TRI_W / 2, p1.y + PA_TRI_H);\n\n    triangle(this.snap, p1, p2, p3, \"transparent\", 0, colors.orange);\n  }\n\n  /**\n   * set the vertical adjustment +/- pixels from center\n   * @param pixels\n   */\n  setArmGroupVerticalAdjustment(pixels) {\n    this.verticalAdjustment = pixels;\n    console.log(this.verticalAdjustment);\n    this.armGroup.attr({\n      transform: `t 0 ${this.verticalAdjustment}`\n    });\n  }\n\n  /**\n   * render inner bezel with tick marks\n   */\n  renderInnerBezel() {\n    this.innerBezel = new Snap(W, H);\n    this.innerBezelFace = this.innerBezel.group();\n\n    // the actual face is circle that is rotated by not moved. The gradient is adjust\n    // to give the pitch indication\n    this.pitchCircle = circle(\n      this.snap,\n      CENTER,\n      INNER_RADIUS,\n      \"transparent\",\n      0,\n      this.pitchGradient()\n    );\n\n    // add pitch up marks at 5, 10, 15, 20 degrees, intervals of 10 are large ticks\n    [10, 20, -10, -20].forEach((v) => {\n      const W = Math.abs(v) * TICK_M;\n      const start = new Vector2D(CX - W / 2, CY - PITCH_TO_PIXELS * v);\n      const end = new Vector2D(CX + W / 2, CY - PITCH_TO_PIXELS * v);\n      this.innerBezelFace.add(line(this.innerBezel, start, end, \"white\", 3));\n      this.innerBezelFace.add(\n        centeredText(\n          this.innerBezel,\n          new Vector2D(start.x - 12, start.y),\n          Math.abs(v),\n          \"white\",\n          \"12px\"\n        )\n      );\n      this.innerBezelFace.add(\n        centeredText(\n          this.innerBezel,\n          new Vector2D(end.x + 12, end.y),\n          Math.abs(v),\n          \"white\",\n          \"12px\"\n        )\n      );\n    });\n    // small ticks\n    // add pitch up marks at 5, 10, 15, 20 degrees, intervals of 10 are large ticks\n    [5, 15, -5, -15].forEach((v) => {\n      const W = SMALL_TICK_WIDTH;\n      const start = new Vector2D(CX - W / 2, CY - PITCH_TO_PIXELS * v);\n      const end = new Vector2D(CX + W / 2, CY - PITCH_TO_PIXELS * v);\n      this.innerBezelFace.add(line(this.innerBezel, start, end, \"white\", 2));\n    });\n    // add to outer SVG\n    this.snap.add(this.innerBezel);\n  }\n\n  /**\n   * pitch gradient adjusted to represent the current pitch\n   * @returns {*}\n   */\n  pitchGradient() {\n    // displayed pitch includes the cage multiplier\n    const displayedPitch = this.pitch * this.cageMultiplier;\n    // get correct position for sky/earth separator line ( gradients are generated using stops 0-100 )\n    const pixelOffset = displayedPitch * PITCH_TO_PIXELS;\n    const normalized = pixelOffset / INNER_RADIUS / 2;\n    const y = 50 + normalized * 100;\n    return this.snap.gradient(\n      `l(0, 0, 0, 1)${COLOR_SKY}:0-${COLOR_SKY}:${\n        y - 1\n      }-white:${y}-${COLOR_EARTH}:${y + 1}-${COLOR_EARTH}:100`\n    );\n  }\n\n  /**\n   * render out bezel with tick marks\n   */\n  renderOuterBezel() {\n    this.outerBezel = new Snap(W, H);\n    this.outerBezelFace = this.outerBezel.group();\n    this.outerBezelFace.add(\n      circle(\n        this.outerBezel,\n        CENTER,\n        OUTER_RADIUS,\n        this.snap.gradient(\n          `l(0, 0, 0, 1)${COLOR_SKY}:0-${COLOR_SKY}:50-${COLOR_EARTH}:50-${COLOR_EARTH}:100`\n        ),\n        OUTER_THICKNESS,\n        \"transparent\"\n      )\n    );\n    this.snap.add(this.outerBezel);\n    // render ticks and triangles on outer bezel\n    // small ticks\n    [10, 20].forEach((a) => {\n      this.outerBezelFace.add(\n        tick(\n          this.outerBezel,\n          CENTER,\n          270 + a,\n          OUTER_RADIUS,\n          OUTER_RADIUS - OUTER_THICKNESS / 2,\n          3,\n          \"white\"\n        )\n      );\n      this.outerBezelFace.add(\n        tick(\n          this.outerBezel,\n          CENTER,\n          270 - a,\n          OUTER_RADIUS,\n          OUTER_RADIUS - OUTER_THICKNESS / 2,\n          3,\n          \"white\"\n        )\n      );\n    });\n    // big ticks\n    [30, 60, 90].forEach((a) => {\n      this.outerBezelFace.add(\n        tick(\n          this.outerBezel,\n          CENTER,\n          270 + a,\n          OUTER_RADIUS - OUTER_THICKNESS / 2,\n          OUTER_RADIUS + OUTER_THICKNESS / 2,\n          6,\n          \"white\"\n        )\n      );\n      this.outerBezelFace.add(\n        tick(\n          this.outerBezel,\n          CENTER,\n          270 - a,\n          OUTER_RADIUS - OUTER_THICKNESS / 2,\n          OUTER_RADIUS + OUTER_THICKNESS / 2,\n          6,\n          \"white\"\n        )\n      );\n    });\n    // render small dots at 45 degrees\n    this.outerBezelFace.add(\n      circle(\n        this.outerBezel,\n        POC(CENTER, OUTER_RADIUS, 270 - 45),\n        4,\n        \"transparent\",\n        0,\n        \"white\"\n      )\n    );\n    this.outerBezelFace.add(\n      circle(\n        this.outerBezel,\n        POC(CENTER, OUTER_RADIUS, 270 + 45),\n        4,\n        \"transparent\",\n        0,\n        \"white\"\n      )\n    );\n\n    // draw white triangle at 12 o'clock\n    // draw triangle pointer at 12 o'clock\n    const p1 = POC(CENTER, PA_TRI_R, 270);\n    const p2 = new Vector2D(p1.x - PA_TRI_W / 2, p1.y - PA_TRI_H);\n    const p3 = new Vector2D(p1.x + PA_TRI_W / 2, p1.y - PA_TRI_H);\n\n    this.outerBezelFace.add(\n      triangle(this.snap, p1, p2, p3, \"transparent\", 0, \"white\")\n    );\n  }\n\n  /**\n   * set the roll. Left roll is 0 -> -180, right roll is 0 -> +180\n   * The displayed pitch is adjusted to include the verticalAdjustment but this does not effect\n   * the stored pitch value for the instrument\n   * NOTE: When caged the pitch and roll and damped to zero. There is an animated multiplier that\n   * is used on the actual display roll and pitch to accomplish this.\n   * @param roll\n   */\n  setRollAndPitch(roll, pitch) {\n    this.roll = roll;\n    this.pitch = pitch;\n\n    const displayRoll = this.roll * this.cageMultiplier;\n    const displayPitch = this.pitch * this.cageMultiplier;\n\n    this.outerBezelFace.attr({\n      transform: `r${-1 * displayRoll} ${CX} ${CY}`\n    });\n    this.innerBezelFace.attr({\n      transform: `r${-1 * displayRoll} ${CX} ${CY} t ${0} ${\n        displayPitch * PITCH_TO_PIXELS\n      }`\n    });\n    this.pitchCircle.attr({\n      transform: `r${-1 * displayRoll} ${CX} ${CY}`,\n      fill: this.pitchGradient()\n    });\n  }\n\n  /**\n   * render an almost transparent gradient over the face to give the appearance of\n   * shadow and depth. Also add a shadow to the inner bezel to the give the correct 3D appearance\n   */\n  renderShadow() {\n    // draw a radial gradient over the face to give a small hint of shadow from the case\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 + CASE3),\n      \"transparent\",\n      0,\n      this.snap.gradient(`r(0.5, 0.5, 0.5)transparent:85-rgba(0,0,0,0.6)`)\n    );\n\n    // make a sin based shadow for the inner bezel\n    const MAX_ALPHA = 0.5;\n    const START = 85;\n    let str = \"\";\n    for (let i = 0; i < 90; i += 1) {\n      if (str) {\n        str += \"-\";\n      }\n      const v = START + (100 - START) * (i / 90);\n      str += `rgba(0, 0, 0, ${Math.sin(D2R(i)) * MAX_ALPHA}):${v}`;\n    }\n    circle(\n      this.snap,\n      CENTER,\n      INNER_RADIUS,\n      \"transparent\",\n      0,\n      this.snap.gradient(`r(0.5, 0.5, 0.5)${str}`)\n    );\n  }\n\n  /**\n   * a property of the airplane was changed\n   * @param airplane\n   */\n  onAirplaneChanged(airplane) {\n    if (!this.caged) {\n      console.assert(airplane === this.airplane, \"not our airplane\");\n      this.setRollAndPitch(this.airplane.roll, this.airplane.pitch);\n    }\n  }\n}\n","/**\n * convert millibars to feet altitude\n * @param millibars\n * @returns {number}\n */\nexport function millibarsToFeet(millibars) {\n  // 1024 = Math.pow(2, 10)\n  // reverse Math.pow(1024, 1 / 10)\n  const feet = (1 - Math.pow(millibars / 1013.25, 0.190284)) * 145366.45;\n  return feet;\n}\n\n/**\n * convert inches of mercury to feet altitude\n * @param inchesNg\n * @returns {number}\n */\nexport function inchesHgToFeet(inchesNg) {\n  return millibarsToFeet(inchesHgToMillibars(inchesNg));\n}\n\n/**\n * millibars to inches of mercury\n * @param millibars\n * @returns {number}\n */\nexport function millibarsToInchesHg(millibars) {\n  return 0.02953 * millibars;\n}\n\n/**\n * inches of mercury to millibars\n * @param millibars\n * @returns {number}\n */\nexport function inchesHgToMillibars(inchesHg) {\n  return inchesHg / 0.02953;\n}\n\n/**\n * convert a signed degrees value to positive 0->360\n * e.g. -10 becomes 350\n *      400 becomes 40\n */\nexport function signedDegreesToPositive360(vIn) {\n  let vOut = vIn;\n  if (vOut < 0) {\n    vOut = 360 + vOut;\n  }\n  vOut = vOut % 360;\n  return vOut;\n}\n\n/**\n * standard barometer in inches of mercury\n * @type {number}\n */\nexport const STANDARD_BAROMETER = 29.92;\n","import D from \"DOMArray\";\nimport Instrument from \"./instrument\";\nimport Rotatable from \"./rotatable-button\";\nimport { POC, C2D } from \"./geometry/angle\";\nimport Vector2D from \"./geometry/vector2d\";\nimport {\n  circle,\n  centeredText,\n  leftText,\n  tick,\n  arc,\n  rectangle\n} from \"./graphics/primitives\";\nimport { arrowNeedle, daggerNeedle, altimeter10KNeedle } from \"./needles\";\nimport { interval } from \"./utils/time\";\nimport { lerp } from \"./utils/math\";\nimport { colors } from \"./graphics/colors\";\nimport { inchesHgToFeet, STANDARD_BAROMETER } from \"./utils/conversions\";\n\nimport Snap from \"snapsvg-cjs\";\n\n/**\n * Regardless of our DOM element size we will render using the constants below\n * and use a transform to scale the resulting SVG to the required size, without altering the aspect ratio\n */\n\n// inset of edges of element\nconst I = 0;\n// width and height\nconst W = 400;\nconst H = 400;\n// outer radius\nconst R = (Math.min(W, H) - I) / 2;\n// center\nconst CX = W / 2;\nconst CY = H / 2;\nconst CENTER = new Vector2D(CX, CY);\n\n// thickness of outer three rings of case\nconst CASE1 = 8;\nconst CASE2 = 10;\nconst CASE3 = 14;\n\n// outer radius of all tick marks\nconst TICK1 = R - (CASE1 + CASE2 + CASE3);\n// inner radius of small ticks\nconst TICK2 = TICK1 - 15;\n// inner radius of large ticks\nconst TICK3 = TICK1 - 20;\n\n// radius of  large digits marking hundreds of feet\nconst LABEL_RADIUS = TICK3 - 20;\n\n// hundreds needle, other needles are derived from these\nconst POINTER_SMALL_RADIUS = 40;\nconst POINTER_WIDTH = 10;\nconst POINTER_ARROW = 6;\nconst POINTER_RADIUS = TICK2 - POINTER_ARROW;\n\n// thousands needle radius ratio to hundreds\nconst POINTER_1K_R = 0.5;\n// thousands needle width ratio to hundreds needs\nconst POINTER_1K_W = 2.5;\n\n// ten thousands needle radius ratio to hundreds\nconst POINTER_10K_R = 0.6;\n// ten thousands needle width ratio to hundreds needs\nconst POINTER_10K_W = 2.5;\n\n// degrees offset for 2 and 3 text\nconst KOLLSMAN_ADJUST_23 = 7;\n// angle at center of window\nconst KOLLSMAN_ANGLE = 0;\n// angle sweep\nconst KOLLSMAN_SWEEP = 270;\n// min/max pressure settings\nconst MIN_BARO = 28.0;\nconst MAX_BARO = 31.0;\n\n// outer radius of kollsman ticks\nconst K_TICK1 = TICK3 - 2;\nconst K_TICK2 = K_TICK1 - 5;\nconst K_TICK3 = K_TICK2 - 5;\n\n// inner radius of kollsman window\nconst KOLLSMAN_INNER = K_TICK1 - 55;\n\n// the kollsman window fits between then airspeeds\nconst KOLLSMAN_LOWER_SPEED = 210;\nconst KOLLSMAN_UPPER_SPEED = 290;\n\n// below 10K barber pole\nconst BARBER_OUTER = KOLLSMAN_INNER;\nconst BARBER_INNER = BARBER_OUTER - 50;\nconst BARBER_ANGLE = 90;\nconst BARBER_SWEEP = 60;\n\n// width of stripes\nconst BARBER_STRIPE_WIDTH = 8;\n\n// center of BARO button\nconst BARO_CENTER = POC(CENTER, R, 135);\n// radius of OBS\nconst BARO_R = 32;\n\nexport default class AltimeterAnalog extends Instrument {\n  constructor(options) {\n    super(\n      Object.assign(\n        {\n          width: W,\n          height: H\n        },\n        options\n      )\n    );\n\n    console.assert(\n      this.parentElement,\n      \"instrument requires a parent to attach to\"\n    );\n\n    // the barber pole has zero rotation when fully visible or BARBAR_SWEEP + 1 rotation when hidden\n    this.barberPoleAngle = 0;\n    this.barberPoleVisible = true;\n\n    this.template = D(`\n      <svg r=\"svg\" height=\"${W}\" width=\"${H}\" xmlns=\"http://www.w3.org/2000/svg\"></svg>\n    `);\n    this.template.zip(this);\n    this.snap = new Snap(this.svg.el);\n\n    this.renderImmutable();\n    this.createNeedles();\n    this.createBaroButton();\n    this.setNeedles(this.airplane.altitude);\n    this.setBarometricPressure(this.airplane.barometer);\n\n    // listen for changes to the airplane\n    this.onAirplaneChanged = this.onAirplaneChanged.bind(this);\n    this.airplane.addListener(this.onAirplaneChanged);\n    this.addDisposable(() =>\n      this.airplane.removeListener(this.onAirplaneChanged)\n    );\n\n    this.template.appendTo(this.parentElement);\n  }\n\n  /**\n   * enter demonstration mode\n   */\n  demoStart() {\n    this.addLerp(\n      \"demo\",\n      interval(() => {\n        const altitude = this.airplane.SERVICE_CEILING * Math.random();\n        const qnh = MIN_BARO + (MAX_BARO - MIN_BARO) * Math.random();\n        this.airplane.setAltitude(altitude);\n        this.airplane.setBarometer(qnh);\n      }, 5000)\n    );\n  }\n\n  /**\n   * cancel demo mode\n   */\n  demoStop() {\n    this.cancelLerp(\"demo\");\n  }\n\n  /**\n   * render the non changing parts of the instrument\n   */\n  renderImmutable() {\n    this.renderCase();\n    this.renderDial();\n    this.renderKollsman();\n    this.renderBarberPole();\n    this.renderShadow();\n  }\n\n  /**\n   * create the button for changing the Kollsman window setting.\n   */\n  createBaroButton() {\n    this.baroButton = new Rotatable({\n      snap: this.snap,\n      radius: BARO_R,\n      text: \"BARO\",\n      textColor: colors.silver,\n      gear: 0.0025,\n      rotationCallback: this.onBaroChanged.bind(this)\n    });\n    this.baroButton.centerOn(new Vector2D(BARO_CENTER.x, BARO_CENTER.y));\n  }\n\n  /**\n   * user twisted the baro button\n   * @param delta\n   */\n  onBaroChanged(delta) {\n    const baro = Math.max(\n      MIN_BARO,\n      Math.min(MAX_BARO, this.airplane.barometer + delta)\n    );\n    this.airplane.setBarometer(baro, true);\n  }\n\n  /**\n   * render the shared three outer rings of the bezel\n   */\n  renderCase() {\n    // draw three outer rings of the instrument case\n    circle(\n      this.snap,\n      CENTER,\n      R - CASE1 / 2,\n      this.snap.gradient(`l(0, 0, 1, 1)#FFF:0-#888:20-#111:100`),\n      CASE1,\n      \"black\"\n    );\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 / 2),\n      this.snap.gradient(`l(0, 0, 1, 1)#111-#666`),\n      CASE2,\n      \"black\"\n    );\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 + CASE3 / 2),\n      this.snap.gradient(`l(0, 0, 1, 1)#000:0-#888:70-#FFF:100`),\n      CASE3,\n      this.snap.gradient(\"l(0, 0, 1, 1)#000:0-#222:100\")\n    );\n  }\n\n  /**\n   * render the kollsman window\n   */\n  renderKollsman() {\n    // calculations are lot easier and do not suffer from floating point errors\n    // if we work with barometric pressure * 100 in integers\n    const IMIN_BARO = (MIN_BARO * 100) >> 0;\n    const IMAX_BARO = (MAX_BARO * 100) >> 0;\n\n    // use a snap and group for all elements so it can be rotated\n    this.kSnap = new Snap(W, H);\n    this.snap.add(this.kSnap);\n    this.kGroup = this.kSnap.group();\n\n    const startAngle = KOLLSMAN_ANGLE - KOLLSMAN_SWEEP / 2;\n    for (let i = IMIN_BARO; i <= IMAX_BARO; i += 2) {\n      const normalized = (i - IMIN_BARO) / (IMAX_BARO - IMIN_BARO);\n      const angle = startAngle + normalized * KOLLSMAN_SWEEP;\n      if (i % 10 === 0) {\n        const tp = POC(CENTER, KOLLSMAN_INNER, angle);\n        const str = i.toString();\n        // displayed text is one decimal place e.g. 30.40 -? \"30.4\" 29.90 -> \"29.9\"\n        const strDisplay = `${str.substr(0, 2)}.${str.substr(2, 1)}`;\n        const text = leftText(\n          this.snap,\n          tp,\n          strDisplay,\n          \"white\",\n          \"14px\",\n          \"Verdana\"\n        );\n        text.attr({ transform: `r${angle} ${tp.x} ${tp.y}` });\n        this.kGroup.add(text);\n        this.kGroup.add(\n          tick(this.snap, CENTER, angle, K_TICK1, K_TICK3, 3, \"white\")\n        );\n      } else {\n        this.kGroup.add(\n          tick(this.snap, CENTER, angle, K_TICK1, K_TICK2, 2, \"white\")\n        );\n      }\n    }\n    // create a mask using an arc to give impression of a window\n    const KW = K_TICK1 - KOLLSMAN_INNER;\n    const AR = KOLLSMAN_INNER + KW / 2;\n    this.kMask = arc(\n      this.snap,\n      CENTER,\n      AR,\n      KW,\n      0,\n      \"white\",\n      \"white\",\n      this.altitudeInfo(KOLLSMAN_LOWER_SPEED).hundreds,\n      this.altitudeInfo(KOLLSMAN_UPPER_SPEED).hundreds,\n      true\n    );\n    this.kGroup.attr({ mask: this.kMask });\n\n    // draw outline and shadow over kollsman window\n    arc(\n      this.snap,\n      CENTER,\n      AR,\n      KW,\n      1,\n      \"#555\",\n      \"none\",\n      this.altitudeInfo(KOLLSMAN_LOWER_SPEED).hundreds,\n      this.altitudeInfo(KOLLSMAN_UPPER_SPEED).hundreds,\n      true\n    );\n\n    // draw the indicator for the current barometric settings\n    const p1 = POC(CENTER, TICK1, -1.5);\n    const p2 = POC(CENTER, TICK1, +1.5);\n    const p3 = POC(CENTER, K_TICK1, 0);\n    const d = `M ${p1.x} ${p1.y} L ${p2.x} ${p2.y} L ${p3.x} ${p3.y} Z`;\n    this.snap.path(d).attr({ fill: \"white\" });\n  }\n\n  /**\n   * set the barometric pressure to the given value, animating\n   * the kollsman window to its new position.\n   * @param inchesOfMercury\n   */\n  setBarometricPressure(inchesOfMercury) {\n    // clamped the value to the allowed range\n    const clamped = Math.max(MIN_BARO, Math.min(MAX_BARO, inchesOfMercury));\n    // get the inches range\n    const range = MAX_BARO - MIN_BARO;\n    // get a normalized value 0 -> 1 representing the new value\n    const normalized = (clamped - MIN_BARO) / range;\n    // set rotational angle (zero angle is the mid point of the baromatric range)\n    const a = KOLLSMAN_SWEEP / 2 - KOLLSMAN_SWEEP * normalized;\n    this.kGroup.attr({\n      transform: `r ${a} ${CENTER.x} ${CENTER.y}`\n    });\n    // rotate the mask in the opposite direction to keep it in place ( since it is masking\n    // a group and will be rotated with the group )\n    this.kMask.attr({\n      transform: `r ${-a} ${CENTER.x} ${CENTER.y}`\n    });\n  }\n\n  /**\n   * render the below 10K barber pole\n   */\n  renderBarberPole() {\n    const barberRadius = (BARBER_OUTER + BARBER_INNER) / 2;\n    const barberWidth = BARBER_OUTER - BARBER_INNER;\n    // background for the barber pole area ( attached to primary SVG )\n    arc(\n      this.snap,\n      CENTER,\n      barberRadius,\n      barberWidth,\n      0,\n      \"none\",\n      \"#333\",\n      BARBER_ANGLE + BARBER_SWEEP / 2,\n      BARBER_ANGLE - BARBER_SWEEP / 2,\n      false\n    );\n    // stripped rotatable area is on a separate SVG\n    this.barberSnap = new Snap(W, H);\n    // use two rectangle sides by side for the stripes. Make them into a pattern to fill the arc with.\n    const patternGroup = this.barberSnap.group();\n    const sw = BARBER_STRIPE_WIDTH;\n    const sh = 100;\n    patternGroup.add(rectangle(this.snap, 0, 0, sw, sh, \"none\", 0, \"#222\"));\n    patternGroup.add(rectangle(this.snap, sw, 0, sw, sh, \"none\", 0, \"white\"));\n\n    this.barberPoleGroup = this.barberSnap.group();\n    // the actual stripped arc\n    this.barberPole = arc(\n      this.barberSnap,\n      CENTER,\n      barberRadius,\n      barberWidth,\n      0,\n      \"none\",\n      patternGroup\n        .toPattern(0, 0, sw * 2, sh)\n        .attr({ transform: `r -45 ${sw} ${sh / 2}` }),\n      BARBER_ANGLE + BARBER_SWEEP / 2,\n      BARBER_ANGLE - BARBER_SWEEP / 2,\n      false\n    );\n    // create an identically shaped mask for the pole arc\n    const mask = arc(\n      this.barberSnap,\n      CENTER,\n      barberRadius,\n      barberWidth,\n      0,\n      \"none\",\n      \"white\",\n      BARBER_ANGLE + BARBER_SWEEP / 2,\n      BARBER_ANGLE - BARBER_SWEEP / 2,\n      false\n    );\n    this.barberPoleGroup.add(this.barberPole);\n    this.barberPoleGroup.attr({ mask });\n    // defaults to this.barberPoleAngle\n    this.barberPole.attr({\n      transform: `r ${this.barberPoleAngle} ${CENTER.x} ${CENTER.y}`\n    });\n    this.snap.add(this.barberSnap);\n  }\n\n  /**\n   * show or hide the barber pole\n   * @param visible\n   */\n  setBarberPole(visible) {\n    if (this.barberPoleVisible !== visible) {\n      const from = this.barberPoleAngle;\n      const to = visible ? 0 : BARBER_SWEEP + 1;\n      this.addLerp(\n        \"barber\",\n        lerp(from, to, 2000, (angle) => {\n          this.barberPoleAngle = angle;\n          this.barberPole.attr({\n            transform: `r ${this.barberPoleAngle} ${CENTER.x} ${CENTER.y}`\n          });\n        })\n      );\n      this.barberPoleVisible = visible;\n    }\n  }\n\n  /**\n   * render tick marks around face and numbers for 100's of feet\n   */\n  renderDial() {\n    // draw small / large ticks at 100 feet intervals. 10,000 feet are displayed.\n    for (let i = 0; i < 1000; i += 20) {\n      const hundreds = this.altitudeInfo(i).hundreds;\n      if (i % 100 === 0) {\n        // larger hundred foot tick\n        tick(this.snap, CENTER, hundreds, TICK1, TICK3, 3, \"white\");\n        // draw hundreds\n        const v0_9 = Math.floor(i / 100);\n        centeredText(\n          this.snap,\n          this.textPosition(v0_9),\n          v0_9,\n          \"white\",\n          \"40px\",\n          \"Verdana\"\n        );\n      } else {\n        // smaller ticks for 20ft intervals\n        tick(this.snap, CENTER, hundreds, TICK1, TICK2, 2, \"white\");\n      }\n    }\n  }\n\n  /**\n   * return correct position for text on dial for a give hundereds of feet.\n   * The position of the '2' and '3' are tweaked to accommodate the kollsman window\n   * @param hundredsOfFeet\n   */\n  textPosition(n) {\n    let d = C2D((360 / 10) * n);\n    switch (n) {\n      case 2:\n        d -= KOLLSMAN_ADJUST_23;\n        break;\n      case 3:\n        d += KOLLSMAN_ADJUST_23;\n        break;\n      default:\n    }\n    return POC(CENTER, LABEL_RADIUS, d);\n  }\n\n  /**\n   * render an almost transparent gradient over the face to give the appearance of\n   * shadow and depth\n   */\n  renderShadow() {\n    // draw a radial gradient over the face to give a small hint of shadow from the case\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 + CASE3),\n      \"transparent\",\n      0,\n      this.snap.gradient(`r(0.5, 0.5, 0.5)transparent:85-rgba(0,0,0,0.2)`)\n    );\n  }\n\n  /**\n   * create the hundreds pointer\n   */\n  createNeedles() {\n    this.thousands10KNeedle = altimeter10KNeedle(\n      this.snap,\n      TICK1 - POINTER_ARROW - 1,\n      POINTER_SMALL_RADIUS * POINTER_10K_R,\n      TICK1 * 0.75,\n      POINTER_ARROW,\n      POINTER_WIDTH * POINTER_10K_W\n    );\n\n    this.thousandsNeedle = daggerNeedle(\n      this.snap,\n      POINTER_RADIUS * POINTER_1K_R,\n      POINTER_SMALL_RADIUS * POINTER_1K_R,\n      POINTER_ARROW * 2,\n      POINTER_WIDTH * POINTER_1K_W\n    );\n\n    this.hundredsNeedle = arrowNeedle(\n      this.snap,\n      POINTER_RADIUS,\n      POINTER_SMALL_RADIUS,\n      POINTER_ARROW,\n      POINTER_WIDTH\n    );\n    circle(this.snap, CENTER, 4, \"#888\", 1, \"black\");\n  }\n\n  /**\n   * update the hundreds pointer\n   * @param altitude\n   */\n  setNeedles(altitude) {\n    const info = this.altitudeInfo(altitude);\n    this.hundredsNeedle.setCenterAndAngle(CX, CY, info.hundreds);\n    this.thousandsNeedle.setCenterAndAngle(CX, CY, info.thousands);\n    this.thousands10KNeedle.setCenterAndAngle(CX, CY, info.thousands10K);\n    this.setBarberPole(info.barberPoleVisible);\n  }\n\n  /**\n   * for a given altitude returns the angles for the three pointers\n   * and a boolean to indicate if the grid pattern should be visible\n   * @param altitude\n   * @returns {{hundreds: number, thousands: number, thousands10K: number, stripes: boolean}}\n   */\n  altitudeInfo(altitude) {\n    //console.assert(altitude >= 0 && altitude <= this.airplane.SERVICE_CEILING, 'altitude out of range');\n\n    // small needle is altitude % 1000\n    const hundreds = C2D((altitude / 1000) * 360);\n    const thousands = C2D((altitude / 10000) * 360);\n    const thousands10K = C2D((altitude / 100000) * 360);\n    const barberPoleVisible = altitude <= 10000;\n\n    return {\n      hundreds,\n      thousands,\n      thousands10K,\n      barberPoleVisible\n    };\n  }\n\n  /**\n   * a property of the airplane was changed\n   * @param airplane\n   */\n  onAirplaneChanged(airplane) {\n    console.assert(airplane === this.airplane, \"not our airplane\");\n    // get the delta between 29.92 ( standard pressure ) and the airplanes baro setting\n    const baroDelta = STANDARD_BAROMETER - this.airplane.barometer;\n    const altitude = inchesHgToFeet(airplane.staticPressure + baroDelta);\n    this.setNeedles(altitude);\n    this.setBarometricPressure(this.airplane.barometer);\n  }\n}\n","import D from \"DOMArray\";\nimport Instrument from \"./instrument\";\nimport { POC, D2C } from \"./geometry/angle\";\nimport Vector2D from \"./geometry/vector2d\";\nimport {\n  arc,\n  tick,\n  circle,\n  airplaneNoseView,\n  centeredText,\n  leftText\n} from \"./graphics/primitives\";\nimport { interval } from \"./utils/time\";\nimport Snap from \"snapsvg-cjs\";\n\n/**\n * Regardless of our DOM element size we will render using the constants below\n * and use a transform to scale the resulting SVG to the required size, without altering the aspect ratio\n */\n\n// inset of edges of element\nconst I = 0;\n// width and height\nconst W = 400;\nconst H = 400;\n// outer radius\nconst R = (Math.min(W, H) - I) / 2;\n// center\nconst CX = W / 2;\nconst CY = H / 2;\nconst CENTER = new Vector2D(CX, CY);\n\n// thickness of outer three rings of case\nconst CASE1 = 8;\nconst CASE2 = 10;\nconst CASE3 = 14;\n\n// thickness of outer bezel\nconst OUTER_BEZEL = 50;\n\n// inner suface radius\nconst INNER_RADIUS = R - (CASE1 + CASE2 + CASE3 + OUTER_BEZEL);\n\n// inclinomenter metrics\nconst INC_THICKNESS = 55;\nconst INC_RADIUS = R * 2;\nconst INC_CENTER = new Vector2D(CX, CY - INC_RADIUS + INC_THICKNESS * 1.5);\n// number of degrees either side of 90 for the inclinometer arc\nconst INC_ANGLE = 16;\n// angle offset for ticks on inclinometer\nconst INC_TICK_ANGLE = 3.5;\n\n// offset angle of 2 minute turn ticks\nconst OFFSET_2_MINUTES = 20;\n\n// standard roll rate and instrument limit in degrees per second\nconst ROLL_RATE = 3;\nconst MAX_ROLL_RATE = 6;\n\n// max number of degrees of yaw ( negative is left yaw, positive is right yaw )\nconst MAX_YAW = 20;\n\nexport default class TurnCoordinatorAnalog extends Instrument {\n  constructor(options) {\n    super(\n      Object.assign(\n        {\n          width: W,\n          height: H\n        },\n        options\n      )\n    );\n\n    console.assert(\n      this.parentElement,\n      \"instrument requires a parent to attach to\"\n    );\n\n    this.template = D(`\n      <svg r=\"svg\" height=\"${W}\" width=\"${H}\" xmlns=\"http://www.w3.org/2000/svg\"></svg>\n    `);\n    this.template.zip(this);\n    this.snap = new Snap(this.svg.el);\n\n    this.renderImmutable();\n    this.template.appendTo(this.parentElement);\n\n    // listen for changes to the airplane\n    this.onAirplaneChanged = this.onAirplaneChanged.bind(this);\n    this.airplane.addListener(this.onAirplaneChanged);\n    this.addDisposable(() =>\n      this.airplane.removeListener(this.onAirplaneChanged)\n    );\n  }\n\n  /**\n   * enter demonstration mode\n   */\n  demoStart() {\n    this.addLerp(\n      \"demo\",\n      interval(() => {\n        this.airplane.setRollRate(\n          -MAX_ROLL_RATE + MAX_ROLL_RATE * 2 * Math.random()\n        );\n        this.airplane.setYaw(-MAX_YAW + MAX_YAW * 2 * Math.random());\n      }, 5000)\n    );\n  }\n\n  /**\n   * cancel demo mode\n   */\n  demoStop() {\n    this.cancelLerp(\"demo\");\n  }\n\n  /**\n   * render the non changing parts of the instrument\n   */\n  renderImmutable() {\n    this.renderCase();\n    this.renderInclinometer();\n    this.renderTicksAndText();\n    this.renderShadow();\n    this.renderAirplane();\n    this.setRollRate(this.airplane.rollRate);\n    this.setYaw(this.airplane.yaw);\n  }\n\n  /**\n   * render the shared three outer rings of the bezel\n   */\n  renderCase() {\n    // draw three outer rings of the instrument case\n    circle(\n      this.snap,\n      CENTER,\n      R - CASE1 / 2,\n      this.snap.gradient(`l(0, 0, 1, 1)#FFF:0-#888:20-#111:100`),\n      CASE1,\n      \"black\"\n    );\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 / 2),\n      this.snap.gradient(`l(0, 0, 1, 1)#111-#666`),\n      CASE2,\n      \"black\"\n    );\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 + CASE3 / 2),\n      this.snap.gradient(`l(0, 0, 1, 1)#000:0-#888:70-#FFF:100`),\n      CASE3,\n      \"#222\"\n    );\n  }\n\n  /**\n   * render ticks marks and associated text ( \"L\" \"R\" )\n   */\n  renderTicksAndText() {\n    const BEZEL_R = R - (CASE1 + CASE2 + CASE3 + OUTER_BEZEL / 2);\n    // inner bezel containing ticks marks\n    circle(this.snap, CENTER, BEZEL_R, \"#333\", OUTER_BEZEL, \"transparent\");\n\n    [0, OFFSET_2_MINUTES, 180, 180 - OFFSET_2_MINUTES].forEach((angle) => {\n      tick(\n        this.snap,\n        CENTER,\n        angle,\n        BEZEL_R + OUTER_BEZEL / 8,\n        BEZEL_R - OUTER_BEZEL / 2,\n        10,\n        \"white\"\n      );\n    });\n    centeredText(\n      this.snap,\n      POC(CENTER, BEZEL_R + 10, 270),\n      \"D.C.\",\n      \"white\",\n      \"16px\",\n      \"Verdana\"\n    );\n    centeredText(\n      this.snap,\n      POC(CENTER, BEZEL_R - 8, 270),\n      \"ELECTRIC\",\n      \"white\",\n      \"16px\",\n      \"Verdana\"\n    );\n\n    centeredText(\n      this.snap,\n      POC(CENTER, BEZEL_R - 4, 180 - OFFSET_2_MINUTES * 1.7),\n      \"L\",\n      \"white\",\n      \"32px\",\n      \"Verdana\"\n    );\n    centeredText(\n      this.snap,\n      POC(CENTER, BEZEL_R - 4, OFFSET_2_MINUTES * 1.7),\n      \"R\",\n      \"white\",\n      \"30px\",\n      \"Verdana\"\n    );\n\n    centeredText(\n      this.snap,\n      POC(CENTER, BEZEL_R - 14, 90),\n      \"NO PITCH\",\n      \"white\",\n      \"16px\",\n      \"Verdana\"\n    );\n    centeredText(\n      this.snap,\n      POC(CENTER, BEZEL_R + 4, 90),\n      \"INFORMATION\",\n      \"white\",\n      \"16px\",\n      \"Verdana\"\n    );\n\n    centeredText(\n      this.snap,\n      POC(CENTER, 35, 90),\n      \"2 MIN\",\n      \"white\",\n      \"20px\",\n      \"Verdana\"\n    );\n  }\n\n  /**\n   * return the turn rate indicator which is an airplane symbol\n   */\n  renderAirplane() {\n    this.airplaneGroup = airplaneNoseView(\n      this.snap,\n      CENTER,\n      INNER_RADIUS * 2 - 8,\n      \"white\"\n    );\n  }\n\n  /**\n   * render the inclinometer and keep a reference to the ball\n   */\n  renderInclinometer() {\n    const inner = INC_RADIUS - INC_THICKNESS / 2;\n    const middle = INC_RADIUS;\n    const outer = INC_RADIUS + INC_THICKNESS / 2;\n    arc(\n      this.snap,\n      INC_CENTER,\n      INC_RADIUS,\n      INC_THICKNESS,\n      0,\n      \"transparent\",\n      this.snap.gradient(\n        `R(${INC_CENTER.x}, ${INC_CENTER.y}, ${outer})black:0-#aaa:${\n          (inner / outer) * 100\n        }-#fff:${(middle / outer) * 100}-#aaa:100`\n      ),\n      90 - INC_ANGLE,\n      90 + INC_ANGLE,\n      true\n    );\n    // render the ball\n    this.renderBall();\n    // render the strokes that indicate the coordinated range\n    tick(\n      this.snap,\n      INC_CENTER,\n      90 - INC_TICK_ANGLE,\n      INC_RADIUS - INC_THICKNESS / 2,\n      INC_RADIUS + INC_THICKNESS / 2,\n      5,\n      this.snap.gradient(`l(0.5, 0, 0.5, 1)#000:0-#888:50-#000:100`)\n    );\n    tick(\n      this.snap,\n      INC_CENTER,\n      90 + INC_TICK_ANGLE,\n      INC_RADIUS - INC_THICKNESS / 2,\n      INC_RADIUS + INC_THICKNESS / 2,\n      5,\n      this.snap.gradient(`l(0.5, 0, 0.5, 1)#000:0-#888:50-#000:100`)\n    );\n  }\n\n  /**\n   * The face of this instrument has two levels so two shadows to give the appearance of depth\n   */\n  renderShadow() {\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 + CASE3),\n      \"transparent\",\n      0,\n      this.snap.gradient(`r(0.5, 0.5, 0.5)transparent:85-rgba(0,0,0,0.3)`)\n    );\n\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 + CASE3 + OUTER_BEZEL),\n      \"transparent\",\n      0,\n      this.snap.gradient(`r(0.5, 0.5, 0.5)transparent:85-rgba(0,0,0,0.3)`)\n    );\n  }\n\n  /**\n   * set the roll rate in +/- degrees per second\n   * @param rollRate\n   */\n  setRollRate(rollRate) {\n    // clamp between -MAX_ROLL_RATE and + MAX_ROLL_RATE\n    const clampedRollRate = Math.max(\n      -MAX_ROLL_RATE,\n      Math.min(MAX_ROLL_RATE, rollRate)\n    );\n    // normalize 0..1\n    const normalized = clampedRollRate / MAX_ROLL_RATE;\n    const A = OFFSET_2_MINUTES * 2 * normalized;\n    this.airplaneGroup.attr({ transform: `r${A} ${CENTER.x} ${CENTER.y}` });\n  }\n\n  /**\n   * render ball component of inclinometer. Set this.ball to the SVG element for later animation\n   */\n  renderBall() {\n    // calculate point on the inclinometer circumference\n    const center = POC(INC_CENTER, INC_RADIUS, 90);\n    // create circle\n    this.ball = circle(\n      this.snap,\n      center,\n      INC_THICKNESS / 2 - 4,\n      \"transparent\",\n      0,\n      this.snap.gradient(`r(0.35, 0.35, 0.5)#aaa:0-black:100`)\n    );\n    // scale to give it the more typical oval appearance\n    this.ball.attr({\n      transform: \"s0.8,1\"\n    });\n  }\n\n  /**\n   * set yaw and update inclinometer\n   * @param yaw\n   */\n  setYaw(yaw) {\n    // clamp between -MAX_YAW and MAX_YAW\n    const clampedYaw = Math.max(-MAX_YAW, Math.min(MAX_YAW, yaw));\n    // normalize 0..1\n    const normalized = clampedYaw / MAX_YAW;\n    const A = INC_ANGLE * normalized;\n    const center = POC(INC_CENTER, INC_RADIUS, 90 + A);\n    this.ball.attr({\n      cx: center.x,\n      cy: center.y\n    });\n  }\n\n  /**\n   * a property of the airplane was changed\n   * @param airplane\n   */\n  onAirplaneChanged(airplane) {\n    console.assert(airplane === this.airplane, \"not our airplane\");\n    this.setRollRate(this.airplane.rollRate);\n    this.setYaw(this.airplane.yaw);\n  }\n}\n","import D from \"DOMArray\";\nimport Instrument from \"./instrument\";\nimport { POC, D2C, C2D } from \"./geometry/angle\";\nimport Vector2D from \"./geometry/vector2d\";\nimport {\n  centeredText,\n  tick,\n  circle,\n  airplaneSilhouette\n} from \"./graphics/primitives\";\nimport { interval } from \"./utils/time\";\nimport Rotatable from \"./rotatable-button\";\nimport { colors } from \"./graphics/colors\";\nimport { signedDegreesToPositive360 } from \"./utils/conversions\";\nimport Snap from \"snapsvg-cjs\";\n\n/**\n * Regardless of our DOM element size we will render using the constants below\n * and use a transform to scale the resulting SVG to the required size, without altering the aspect ratio\n */\n\n// inset of edges of element\nconst I = 0;\n// width and height\nconst W = 400;\nconst H = 400;\n// size of airplane pointer\nconst AW = 180;\nconst AH = 180;\n// outer radius\nconst R = (Math.min(W, H) - I) / 2;\n// center\nconst CX = W / 2;\nconst CY = H / 2;\nconst CENTER = new Vector2D(CX, CY);\n\n// thickness of outer three rings of case\nconst CASE1 = 8;\nconst CASE2 = 10;\nconst CASE3 = 14;\n\n// radius of heading text\nconst TEXT_RADIUS = R - (CASE1 + CASE2 + CASE3 + 20);\n// radius of all tick marks\nconst TICK = TEXT_RADIUS - 30;\n// length of long short tick marks\nconst LONG_TICK = 22;\nconst SHORT_TICK = 14;\n\n// center of SET\nconst SET_CENTER = POC(CENTER, R, 135);\n// radius of OBS\nconst SET_R = 32;\n\n// center of HDG\nconst HDG_CENTER = POC(CENTER, R, 45);\n// radius of OBS\nconst HDG_R = 32;\n\nconst HEADING_BUG_OUTER = R - (CASE1 + CASE2 + CASE3);\nconst HEADING_BUG_INNER = TICK + 6;\nconst HEADING_BUG_MID = (HEADING_BUG_INNER + HEADING_BUG_OUTER) / 2;\n\nexport default class HeadingIndicatorAnalog extends Instrument {\n  constructor(options) {\n    super(\n      Object.assign(\n        {\n          width: W,\n          height: H,\n          // this is the angular offset the user sets from the airplanes magnetic heading.\n          // Changing it corresponds to twisting the SET button\n          magneticOffset: 0,\n          // current setting for heading bug\n          headingBugHeading: 0\n        },\n        options\n      )\n    );\n\n    console.assert(\n      this.parentElement,\n      \"instrument requires a parent to attach to\"\n    );\n\n    this.template = D(`\n      <svg r=\"svg\" height=\"${W}\" width=\"${H}\" xmlns=\"http://www.w3.org/2000/svg\"></svg>\n    `);\n    this.template.zip(this);\n\n    this.renderImmutable();\n    this.setHeading(this.airplane.heading);\n    this.setHeadingBug(this.headingBugHeading);\n\n    // listen for changes to the airplane\n    this.onAirplaneChanged = this.onAirplaneChanged.bind(this);\n    this.airplane.addListener(this.onAirplaneChanged);\n    this.addDisposable(() =>\n      this.airplane.removeListener(this.onAirplaneChanged)\n    );\n\n    this.template.appendTo(this.parentElement);\n  }\n\n  /**\n   * enter demonstration mode\n   */\n  demoStart() {\n    this.addLerp(\n      \"demo\",\n      interval(() => {\n        this.airplane.setHeading(360 * Math.random());\n      }, 5000)\n    );\n  }\n\n  /**\n   * cancel demo mode\n   */\n  demoStop() {\n    this.cancelLerp(\"demo\");\n  }\n\n  /**\n   * render the non changing parts of the instrument\n   */\n  renderImmutable() {\n    this.snap = new Snap(this.svg.el);\n    this.renderCase();\n    this.renderHeadings();\n    this.renderHeadingBug();\n    this.renderPointer();\n    this.renderShadow();\n    this.createButtons();\n  }\n\n  /**\n   * create SET and HDG buttons\n   */\n  createButtons() {\n    this.setButton = new Rotatable({\n      snap: this.snap,\n      radius: SET_R,\n      text: \"SET\",\n      textColor: colors.silver,\n      gear: 0.25,\n      rotationCallback: this.onSetChanged.bind(this)\n    });\n    this.setButton.centerOn(new Vector2D(SET_CENTER.x, SET_CENTER.y));\n\n    this.hdgButton = new Rotatable({\n      snap: this.snap,\n      radius: HDG_R,\n      text: \"HDG\",\n      textColor: colors.red,\n      gear: 0.25,\n      rotationCallback: this.onHdgChanged.bind(this)\n    });\n    this.hdgButton.centerOn(new Vector2D(HDG_CENTER.x, HDG_CENTER.y));\n  }\n\n  /**\n   * set the offset from the magnetic heading supplied by our aircraft model\n   * @param delta\n   */\n  onSetChanged(delta) {\n    this.magneticOffset = signedDegreesToPositive360(\n      this.magneticOffset + delta\n    );\n    this.setHeading(this.airplane.heading + this.magneticOffset);\n    this.setHeadingBug(this.headingBugHeading);\n  }\n\n  /**\n   * repond to twists of the heading bug button\n   * @param delta\n   */\n  onHdgChanged(delta) {\n    this.headingBugHeading = signedDegreesToPositive360(\n      this.headingBugHeading + delta\n    );\n    this.setHeadingBug(this.headingBugHeading);\n  }\n\n  /**\n   * render the shared three outer rings of the bezel\n   */\n  renderCase() {\n    // draw three outer rings of the instrument case\n    circle(\n      this.snap,\n      CENTER,\n      R - CASE1 / 2,\n      this.snap.gradient(`l(0, 0, 1, 1)#FFF:0-#888:20-#111:100`),\n      CASE1,\n      colors.black\n    );\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 / 2),\n      this.snap.gradient(`l(0, 0, 1, 1)#111-#666`),\n      CASE2,\n      colors.black\n    );\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 + CASE3 / 2),\n      this.snap.gradient(`l(0, 0, 1, 1)#000:0-#888:70-#FFF:100`),\n      CASE3,\n      this.snap.gradient(\"l(0, 0, 1, 1)#000:0-#222:100\")\n    );\n  }\n\n  /**\n   * render the heading bug at zero degrees, it is transformed into the current setting\n   */\n  renderHeadingBug() {\n    this.headingBugGroup = this.faceSnap.group();\n    this.headingBug1 = tick(\n      this.faceSnap,\n      CENTER,\n      D2C(-3),\n      HEADING_BUG_OUTER,\n      HEADING_BUG_INNER,\n      9,\n      colors.red\n    );\n    this.headingBug2 = tick(\n      this.faceSnap,\n      CENTER,\n      D2C(3),\n      HEADING_BUG_OUTER,\n      HEADING_BUG_INNER,\n      9,\n      colors.red\n    );\n    this.headingBugGroup.add(this.headingBug1, this.headingBug2);\n  }\n\n  /**\n   * render the text and ticks marks for headings\n   */\n  renderHeadings() {\n    this.faceSnap = new Snap(W, H);\n    this.face = this.faceSnap.group();\n\n    for (let i = 0; i < 360; i += 5) {\n      const a = D2C(i);\n      const longTick = a % 10 === 0;\n      const text = a % 30 === 0;\n\n      const outerTick = TICK + (longTick ? LONG_TICK : SHORT_TICK) / 2;\n      const innerTick = TICK - (longTick ? LONG_TICK : SHORT_TICK) / 2;\n      const thickness = longTick ? 3 : 2;\n      this.face.add(\n        tick(this.faceSnap, CENTER, a, outerTick, innerTick, thickness, \"white\")\n      );\n\n      if (text) {\n        let str;\n        switch (i) {\n          case 0:\n            str = \"N\";\n            break;\n          case 90:\n            str = \"E\";\n            break;\n          case 180:\n            str = \"S\";\n            break;\n          case 270:\n            str = \"W\";\n            break;\n          default:\n            str = i / 10;\n        }\n\n        const textCenter = POC(CENTER, TEXT_RADIUS, a);\n        const t = centeredText(\n          this.faceSnap,\n          textCenter,\n          str,\n          \"white\",\n          \"32px\",\n          \"Verdana\"\n        );\n        t.attr({ transform: `r${i} ${textCenter.x} ${textCenter.y}` });\n        this.face.add(t);\n      }\n    }\n    this.snap.add(this.faceSnap);\n  }\n\n  /**\n   * update to the given heading\n   * @param heading\n   */\n  setHeading(heading) {\n    this.face.attr({\n      transform: `r  ${-1 * heading} ${CENTER.x} ${CENTER.y}`\n    });\n  }\n\n  /**\n   * update the heading bug, which is always the airplanes heading + the heading bug heading\n   * @param heading\n   */\n  setHeadingBug() {\n    const h = this.airplane.heading + this.magneticOffset;\n    this.headingBugGroup.attr({\n      transform: `r  ${-1 * (h + this.headingBugHeading)} ${CENTER.x} ${\n        CENTER.y\n      }`\n    });\n  }\n\n  renderPointer() {\n    this.snap.add(\n      airplaneSilhouette(CX, CY, AW, AH, 4, \"orange\", \"transparent\")\n    );\n    tick(this.snap, CENTER, 0, TICK, AH / 2, 3, \"orange\");\n    tick(this.snap, CENTER, 90, TICK, AH / 2, 3, \"orange\");\n    tick(this.snap, CENTER, 180, TICK, AH / 2, 3, \"orange\");\n    tick(this.snap, CENTER, 270, TICK, AH / 2, 3, \"orange\");\n\n    circle(this.snap, CENTER, 4, \"#888\", 1, colors.black);\n  }\n\n  /**\n   * render an almost transparent gradient over the face to give the appearance of\n   * shadow and depth\n   */\n  renderShadow() {\n    // draw a radial gradient over the face to give a small hint of shadow from the case\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 + CASE3),\n      \"transparent\",\n      0,\n      this.snap.gradient(`r(0.5, 0.5, 0.5)transparent:85-rgba(0,0,0,0.6)`)\n    );\n  }\n\n  /**\n   * a property of the airplane was changed\n   * @param airplane\n   */\n  onAirplaneChanged(airplane) {\n    console.assert(airplane === this.airplane, \"not our airplane\");\n    this.setHeading(this.airplane.heading + this.magneticOffset);\n    this.setHeadingBug(this.headingBugHeading);\n  }\n}\n","import D from \"DOMArray\";\nimport Instrument from \"./instrument\";\nimport { POC, C2D } from \"./geometry/angle\";\nimport Vector2D from \"./geometry/vector2d\";\nimport {\n  circle,\n  centeredText,\n  leftText,\n  tick,\n  arc\n} from \"./graphics/primitives\";\nimport { steppedNeedle } from \"./needles\";\nimport { interval } from \"./utils/time\";\n\nimport Snap from \"snapsvg-cjs\";\n\n/**\n * Regardless of our DOM element size we will render using the constants below\n * and use a transform to scale the resulting SVG to the required size, without altering the aspect ratio\n */\n\n// inset of edges of element\nconst I = 0;\n// width and height\nconst W = 400;\nconst H = 400;\n// outer radius\nconst R = (Math.min(W, H) - I) / 2;\n// center\nconst CX = W / 2;\nconst CY = H / 2;\nconst CENTER = new Vector2D(CX, CY);\n\n// thickness of outer three rings of case\nconst CASE1 = 8;\nconst CASE2 = 10;\nconst CASE3 = 14;\n\n// outer radius of all tick marks\nconst TICK1 = R - (CASE1 + CASE2 + CASE3);\n// inner radius of small ticks\nconst TICK2 = TICK1 - 20;\n// inner radius of large ticks\nconst TICK3 = TICK1 - 30;\n\n// radius of  large digits marking hundreds of feet\nconst LABEL_RADIUS = TICK3 - 25;\n\n// max positive and negative rates displayed\nconst MIN_MAX_SPEED = 2000;\n\n// only large ticks above this level\nconst HUNDRED_LIMIT = 1000;\n\n// angle of zero speed\nconst ZERO = 180;\n\n// sweep required for entire range\nconst SWEEP = 170;\n\n// hundreds needle, other needles are derived from these\nconst POINTER_SMALL_RADIUS = 40;\nconst POINTER_WIDTH = 14;\nconst POINTER_ARROW = 6;\nconst POINTER_RADIUS = TICK2 - POINTER_ARROW;\nconst POINTER_MID = POINTER_RADIUS * 0.8;\n\n// radius and offset angle for \"UP\" and \"DN\"\nconst UP_DOWN_RADIUS = LABEL_RADIUS - 25;\nconst UP_DOWN_ANGLE = 15;\n\n// position of left aligned rate text\nconst RATE_TEXT = CX + 10;\n\nexport default class VerticalSpeedAnalog extends Instrument {\n  constructor(options) {\n    super(\n      Object.assign(\n        {\n          width: W,\n          height: H\n        },\n        options\n      )\n    );\n\n    console.assert(\n      this.parentElement,\n      \"instrument requires a parent to attach to\"\n    );\n\n    this.template = D(`\n      <svg r=\"svg\" height=\"${W}\" width=\"${H}\" xmlns=\"http://www.w3.org/2000/svg\"></svg>\n    `);\n    this.template.zip(this);\n    this.snap = new Snap(this.svg.el);\n\n    this.renderImmutable();\n    this.createNeedles();\n    this.setNeedle(this.airplane.altitudeRate);\n\n    // listen for changes to the airplane\n    this.onAirplaneChanged = this.onAirplaneChanged.bind(this);\n    this.airplane.addListener(this.onAirplaneChanged);\n    this.addDisposable(() =>\n      this.airplane.removeListener(this.onAirplaneChanged)\n    );\n\n    this.template.appendTo(this.parentElement);\n  }\n\n  /**\n   * enter demonstration mode\n   */\n  demoStart() {\n    this.addLerp(\n      \"demo\",\n      interval(() => {\n        this.airplane.setAltitudeRate(-1500 + 3000 * Math.random());\n      }, 5000)\n    );\n  }\n\n  /**\n   * cancel demo mode\n   */\n  demoStop() {\n    this.cancelLerp(\"demo\");\n  }\n\n  /**\n   * render the non changing parts of the instrument\n   */\n  renderImmutable() {\n    this.renderCase();\n    this.renderDial();\n    this.renderText();\n    this.renderShadow();\n  }\n\n  /**\n   * render the shared three outer rings of the bezel\n   */\n  renderCase() {\n    // draw three outer rings of the instrument case\n    circle(\n      this.snap,\n      CENTER,\n      R - CASE1 / 2,\n      this.snap.gradient(`l(0, 0, 1, 1)#FFF:0-#888:20-#111:100`),\n      CASE1,\n      \"black\"\n    );\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 / 2),\n      this.snap.gradient(`l(0, 0, 1, 1)#111-#666`),\n      CASE2,\n      \"black\"\n    );\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 + CASE3 / 2),\n      this.snap.gradient(`l(0, 0, 1, 1)#000:0-#888:70-#FFF:100`),\n      CASE3,\n      this.snap.gradient(\"l(0, 0, 1, 1)#000:0-#222:100\")\n    );\n  }\n\n  /**\n   * convert positive or negative vertical speed to an angle.\n   * @param verticalSpeed\n   */\n  verticalSpeedToAngle(verticalSpeed) {\n    // clamp to limits\n    const v = Math.max(-MIN_MAX_SPEED, Math.min(MIN_MAX_SPEED, verticalSpeed));\n    if (v >= 0) {\n      return ZERO + (v / MIN_MAX_SPEED) * SWEEP;\n    }\n    return ZERO - (-v / MIN_MAX_SPEED) * SWEEP;\n  }\n\n  // render up/down vertical speed in 100\n  renderText() {\n    let position = POC(CENTER, UP_DOWN_RADIUS, ZERO + UP_DOWN_ANGLE);\n    centeredText(this.snap, position, \"UP\", \"white\", \"16px\", \"Verdana\");\n    position = POC(CENTER, UP_DOWN_RADIUS, ZERO - UP_DOWN_ANGLE);\n    centeredText(this.snap, position, \"DN\", \"white\", \"16px\", \"Verdana\");\n\n    leftText(\n      this.snap,\n      new Vector2D(RATE_TEXT, CY - 50),\n      \"VERTICAL\",\n      \"white\",\n      \"16px\",\n      \"Verdana\"\n    );\n    leftText(\n      this.snap,\n      new Vector2D(RATE_TEXT, CY - 30),\n      \"SPEED\",\n      \"white\",\n      \"16px\",\n      \"Verdana\"\n    );\n    leftText(\n      this.snap,\n      new Vector2D(RATE_TEXT, CY + 30),\n      \"100 FEET\",\n      \"white\",\n      \"16px\",\n      \"Verdana\"\n    );\n    leftText(\n      this.snap,\n      new Vector2D(RATE_TEXT, CY + 50),\n      \"PER MINUTE\",\n      \"white\",\n      \"16px\",\n      \"Verdana\"\n    );\n  }\n\n  /**\n   * render tick marks around face and numbers for 100's of feet\n   */\n  renderDial() {\n    for (let i = 0; i <= MIN_MAX_SPEED; i += 100) {\n      // draw large ticks at 500ft intervals\n      if (i % 500 === 0) {\n        tick(\n          this.snap,\n          CENTER,\n          this.verticalSpeedToAngle(i),\n          TICK1,\n          TICK3,\n          3,\n          \"white\"\n        );\n        if (i > 0) {\n          tick(\n            this.snap,\n            CENTER,\n            this.verticalSpeedToAngle(-i),\n            TICK1,\n            TICK3,\n            3,\n            \"white\"\n          );\n        }\n        // draw 500 intervals in 100's of feet, except for the last value which is centered between the extremes\n        let position;\n        if (i < MIN_MAX_SPEED) {\n          if (i === 0) {\n            position = POC(CENTER, LABEL_RADIUS, ZERO);\n            centeredText(this.snap, position, \"0\", \"white\", \"30px\", \"Verdana\");\n          } else {\n            position = POC(CENTER, LABEL_RADIUS, this.verticalSpeedToAngle(i));\n            centeredText(\n              this.snap,\n              position,\n              i / 100,\n              \"white\",\n              \"30px\",\n              \"Verdana\"\n            );\n            position = POC(CENTER, LABEL_RADIUS, this.verticalSpeedToAngle(-i));\n            centeredText(\n              this.snap,\n              position,\n              i / 100,\n              \"white\",\n              \"30px\",\n              \"Verdana\"\n            );\n          }\n        } else {\n          position = POC(CENTER, LABEL_RADIUS, ZERO + 180);\n          centeredText(\n            this.snap,\n            position,\n            i / 100,\n            \"white\",\n            \"30px\",\n            \"Verdana\"\n          );\n        }\n      } else {\n        if (i < HUNDRED_LIMIT) {\n          tick(\n            this.snap,\n            CENTER,\n            this.verticalSpeedToAngle(i),\n            TICK1,\n            TICK2,\n            2,\n            \"white\"\n          );\n          tick(\n            this.snap,\n            CENTER,\n            this.verticalSpeedToAngle(-i),\n            TICK1,\n            TICK2,\n            2,\n            \"white\"\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * render an almost transparent gradient over the face to give the appearance of\n   * shadow and depth\n   */\n  renderShadow() {\n    // draw a radial gradient over the face to give a small hint of shadow from the case\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 + CASE3),\n      \"transparent\",\n      0,\n      this.snap.gradient(`r(0.5, 0.5, 0.5)transparent:85-rgba(0,0,0,0.6)`)\n    );\n  }\n\n  /**\n   * create the needle and center nut\n   */\n  createNeedles() {\n    this.needle = steppedNeedle(\n      this.snap,\n      POINTER_RADIUS,\n      POINTER_SMALL_RADIUS,\n      POINTER_MID,\n      POINTER_ARROW,\n      POINTER_WIDTH\n    );\n    circle(this.snap, CENTER, 4, \"#888\", 1, \"black\");\n  }\n\n  /**\n   * update the hundreds pointer\n   * @param airspeed\n   */\n  setNeedle(verticalSpeed) {\n    this.needle.setCenterAndAngle(\n      CX,\n      CY,\n      this.verticalSpeedToAngle(verticalSpeed)\n    );\n  }\n\n  /**\n   * a property of the airplane was changed\n   * @param airplane\n   */\n  onAirplaneChanged(airplane) {\n    console.assert(airplane === this.airplane, \"not our airplane\");\n    this.setNeedle(this.airplane.altitudeRate);\n  }\n}\n","import Disposable from \"./disposable\";\nimport { lerp } from \"./utils/math\";\nimport { STANDARD_BAROMETER } from \"./utils/conversions\";\n\nexport default class Airplane extends Disposable {\n  constructor() {\n    super();\n    // default configuration for an airplane, Similar to a Cessna 172\n    Object.assign(this, {\n      // V speeds KIAS\n      VS0: 40,\n      VS1: 50,\n      VR: 55,\n      VLOF: 60,\n      VFE: 85,\n      VA: 95,\n      VNO: 130,\n      VNE: 157,\n\n      // maximum airspeed that is displayed on the analog airspeed gauge\n      MAX_DISPLAYED_SPEED: 200,\n\n      // maximum altitude in ft\n      SERVICE_CEILING: 17000,\n\n      // speed in KIAS\n      airspeed: 0,\n      // rate of change of airspeed in knots per second, + or -\n      airspeedRate: 0,\n      // altitude in feet\n      altitude: 0,\n      // vertical speed in feet per minute\n      altitudeRate: 0,\n      // static pressure as measured at the static port\n      staticPressure: STANDARD_BAROMETER,\n      // barometric pressure at sea level (QNH) ( inches of mercury )\n      barometer: STANDARD_BAROMETER,\n      // magnetic heading\n      heading: 0,\n      // rate of heading change in degrees per seconds, + or -\n      headingRate: 0,\n      // pitch, degrees\n      pitch: 0,\n      // rate of pitch change in degrees per seconds, + or -\n      pitchRate: 0,\n      // roll, degrees\n      roll: 0,\n      // rate of roll change in degrees per seconds, + or -\n      rollRate: 0,\n      // yaw degrees\n      yaw: 0,\n      // rate of yaw change in degrees per seconds, + or -\n      yawRate: 0,\n\n      // idle speed of engine\n      idle: 1000,\n      // max RPM\n      redLine: 2700,\n      // lower end of green range\n      greenMin: 2000,\n      // current RPM\n      rpm: 0,\n\n      // change listeners\n      listeners: [],\n\n      // lerps for different properties\n      lerps: {}\n    });\n\n    // cancel all lerps when disposed\n    this.addDisposable(() => {\n      Object.values(this.lerps).forEach(f => f());\n      this.lerps = {};\n    });\n  }\n\n  /**\n   * set the airspeed\n   * @param kias\n   */\n  setAirspeed(kias) {\n    if (kias !== this.airspeed) {\n      this.addLerp(\n        \"airspeed\",\n        lerp(this.airspeed, kias, 1000, speed => {\n          this.airspeed = speed;\n          this.callListeners();\n        })\n      );\n    }\n  }\n\n  /**\n   * set the rpm\n   * @param rpm\n   */\n  setRPM(rpm) {\n    if (rpm !== this.rpm) {\n      this.addLerp(\n        \"rpm\",\n        lerp(this.rpm, rpm, 1000, rpm => {\n          this.rpm = rpm;\n          this.callListeners();\n        })\n      );\n    }\n  }\n\n  /**\n   * set the altitude\n   * @param feet\n   */\n  setAltitude(feet) {\n    if (feet !== this.altitude) {\n      this.addLerp(\n        \"altitude\",\n        lerp(this.altitude, feet, 4000, altitude => {\n          this.altitude = altitude;\n          this.callListeners();\n        })\n      );\n    }\n  }\n\n  /**\n   * set the altitude\n   * @param verticalSpeed\n   */\n  setAltitudeRate(verticalSpeed) {\n    if (verticalSpeed !== this.altitudeRate) {\n      this.addLerp(\n        \"altitude-rate\",\n        lerp(this.altitudeRate, verticalSpeed, 4000, rate => {\n          this.altitudeRate = rate;\n          this.callListeners();\n        })\n      );\n    }\n  }\n\n  /**\n   * set the barometer setting ( QNH ). Can be animated or immediate\n   * @param inchesOfMercury\n   */\n  setBarometer(inchesOfMercury, immediate = false) {\n    if (immediate) {\n      this.barometer = inchesOfMercury;\n      this.callListeners();\n    } else {\n      if (inchesOfMercury !== this.barometer) {\n        this.addLerp(\n          \"barometer\",\n          lerp(this.barometer, inchesOfMercury, 4000, qnh => {\n            this.barometer = qnh;\n            this.callListeners();\n          })\n        );\n      }\n    }\n  }\n\n  /**\n   * set the altitude\n   * @param feet\n   */\n  setHeading(magneticHeading) {\n    if (magneticHeading !== this.heading) {\n      this.addLerp(\n        \"heading\",\n        lerp(this.heading, magneticHeading, 3000, heading => {\n          this.heading = heading;\n          this.callListeners();\n        })\n      );\n    }\n  }\n\n  /**\n   * set the roll\n   * @param degrees\n   */\n  setRoll(degrees) {\n    if (degrees !== this.roll) {\n      this.addLerp(\n        \"roll\",\n        lerp(this.roll, degrees, 3000, r => {\n          this.roll = r;\n          this.callListeners();\n        })\n      );\n    }\n  }\n\n  /**\n   * set the roll rate\n   * @param degreesPerSecond\n   */\n  setRollRate(degreesPerSecond) {\n    if (degreesPerSecond !== this.rollRate) {\n      this.addLerp(\n        \"roll-rate\",\n        lerp(this.rollRate, degreesPerSecond, 3000, r => {\n          this.rollRate = r;\n          this.callListeners();\n        })\n      );\n    }\n  }\n\n  /**\n   * set the pitch\n   * @param degrees\n   */\n  setPitch(degrees) {\n    if (degrees !== this.pitch) {\n      this.addLerp(\n        \"pitch\",\n        lerp(this.pitch, degrees, 3000, p => {\n          this.pitch = p;\n          this.callListeners();\n        })\n      );\n    }\n  }\n\n  /**\n   * set the degrees left ( negative ) or right ( positive ) of neutral ( 0 )\n   * @param degrees\n   */\n  setYaw(degrees) {\n    if (degrees !== this.yaw) {\n      this.addLerp(\n        \"yaw\",\n        lerp(this.yaw, degrees, 3000, p => {\n          this.yaw = p;\n          this.callListeners();\n        })\n      );\n    }\n  }\n\n  /**\n   * add a lerp and cancel an existing one with the same key\n   * @param key\n   */\n  addLerp(key, callback) {\n    this.cancelLerp(key);\n    this.lerps[key] = callback;\n  }\n\n  /**\n   * cancel any existing lerp\n   */\n  cancelLerp(key) {\n    if (this.lerps[key]) {\n      this.lerps[key]();\n      delete this.lerps[key];\n    }\n  }\n}\n","import TachometerAnalog from \"./tachometer_analog\";\nimport AirspeedAnalog from \"./airspeed_analog\";\nimport AttitudeIndicatorAnalog from \"./attitude_indicator_analog\";\nimport AltimeterAnalog from \"./altimeter_analog\";\nimport TurnCoordinatorAnalog from \"./turn_coordinator_analog\";\nimport HeadingIndicatorAnalog from \"./heading_indicator_analog\";\nimport VerticalSpeedAnalog from \"./vertical_speed_analog\";\nimport Airplane from \"./airplane\";\n\n/*\n  Fully functionality flight instruments built entirely with Snap SVG\n  and JavaScript. By default the intruments all go into demo mode\n  with random changes to their properties. You can disable that\n  by commenting out .startDemo() below.\n  Buttons are functionaty e.g. the HDG button on the directional gyro.\n  Rotate with the mouse ( when not in demo mode ) to change.\n\n  Feel free to copy/clone/use as you see fit for any purpose commercial\n  or non commerical. These are free and open source for anyone to use\n  without renumeration, attribution or compensation.\n\n  https://www.linkedin.com/in/duncanmeech/\n  duncanmeech@gmail.com\n\n*/\n\nimport \"./styles.css\";\n\nconst parentElement = document.body;\nconst airplane = new Airplane();\n\nconst instruments = [\n  new AirspeedAnalog({\n    airplane,\n    parentElement\n  }),\n  new AttitudeIndicatorAnalog({\n    airplane,\n    parentElement\n  }),\n  new AltimeterAnalog({\n    airplane,\n    parentElement\n  }),\n  new TurnCoordinatorAnalog({\n    airplane,\n    parentElement\n  }),\n  new HeadingIndicatorAnalog({\n    airplane,\n    parentElement\n  }),\n  new VerticalSpeedAnalog({\n    airplane,\n    parentElement\n  }),\n  new TachometerAnalog({\n    airplane,\n    parentElement\n  })\n];\n\ninstruments.forEach(i => i.demoStart());\n"]}